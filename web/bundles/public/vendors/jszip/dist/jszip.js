%2F*!%0A%0AJSZip%20-%20A%20Javascript%20class%20for%20generating%20and%20reading%20zip%20files%0A%3Chttp%3A%2F%2Fstuartk.com%2Fjszip%3E%0A%0A(c)%202009-2014%20Stuart%20Knightley%20%3Cstuart%20%5Bat%5D%20stuartk.com%3E%0ADual%20licenced%20under%20the%20MIT%20license%20or%20GPLv3.%20See%20https%3A%2F%2Fraw.github.com%2FStuk%2Fjszip%2Fmaster%2FLICENSE.markdown.%0A%0AJSZip%20uses%20the%20library%20pako%20released%20under%20the%20MIT%20license%20%3A%0Ahttps%3A%2F%2Fgithub.com%2Fnodeca%2Fpako%2Fblob%2Fmaster%2FLICENSE%0A*%2F%0A(function(f)%7Bif(typeof%20exports%3D%3D%3D%22object%22%26%26typeof%20module!%3D%3D%22undefined%22)%7Bmodule.exports%3Df()%7Delse%20if(typeof%20define%3D%3D%3D%22function%22%26%26define.amd)%7Bdefine(%5B%5D%2Cf)%7Delse%7Bvar%20g%3Bif(typeof%20window!%3D%3D%22undefined%22)%7Bg%3Dwindow%7Delse%20if(typeof%20global!%3D%3D%22undefined%22)%7Bg%3Dglobal%7Delse%20if(typeof%20self!%3D%3D%22undefined%22)%7Bg%3Dself%7Delse%7Bg%3Dthis%7Dg.JSZip%20%3D%20f()%7D%7D)(function()%7Bvar%20define%2Cmodule%2Cexports%3Breturn%20(function%20e(t%2Cn%2Cr)%7Bfunction%20s(o%2Cu)%7Bif(!n%5Bo%5D)%7Bif(!t%5Bo%5D)%7Bvar%20a%3Dtypeof%20require%3D%3D%22function%22%26%26require%3Bif(!u%26%26a)return%20a(o%2C!0)%3Bif(i)return%20i(o%2C!0)%3Bvar%20f%3Dnew%20Error(%22Cannot%20find%20module%20'%22%2Bo%2B%22'%22)%3Bthrow%20f.code%3D%22MODULE_NOT_FOUND%22%2Cf%7Dvar%20l%3Dn%5Bo%5D%3D%7Bexports%3A%7B%7D%7D%3Bt%5Bo%5D%5B0%5D.call(l.exports%2Cfunction(e)%7Bvar%20n%3Dt%5Bo%5D%5B1%5D%5Be%5D%3Breturn%20s(n%3Fn%3Ae)%7D%2Cl%2Cl.exports%2Ce%2Ct%2Cn%2Cr)%7Dreturn%20n%5Bo%5D.exports%7Dvar%20i%3Dtypeof%20require%3D%3D%22function%22%26%26require%3Bfor(var%20o%3D0%3Bo%3Cr.length%3Bo%2B%2B)s(r%5Bo%5D)%3Breturn%20s%7D)(%7B1%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0Avar%20DataReader%20%3D%20require('.%2FdataReader')%3B%0A%0Afunction%20ArrayReader(data)%20%7B%0A%20%20%20%20if%20(data)%20%7B%0A%20%20%20%20%20%20%20%20this.data%20%3D%20data%3B%0A%20%20%20%20%20%20%20%20this.length%20%3D%20this.data.length%3B%0A%20%20%20%20%20%20%20%20this.index%20%3D%200%3B%0A%20%20%20%20%20%20%20%20this.zero%20%3D%200%3B%0A%0A%20%20%20%20%20%20%20%20for(var%20i%20%3D%200%3B%20i%20%3C%20this.data.length%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20data%5Bi%5D%20%3D%20data%5Bi%5D%20%26%200xFF%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%7D%0AArrayReader.prototype%20%3D%20new%20DataReader()%3B%0A%2F**%0A%20*%20%40see%20DataReader.byteAt%0A%20*%2F%0AArrayReader.prototype.byteAt%20%3D%20function(i)%20%7B%0A%20%20%20%20return%20this.data%5Bthis.zero%20%2B%20i%5D%3B%0A%7D%3B%0A%2F**%0A%20*%20%40see%20DataReader.lastIndexOfSignature%0A%20*%2F%0AArrayReader.prototype.lastIndexOfSignature%20%3D%20function(sig)%20%7B%0A%20%20%20%20var%20sig0%20%3D%20sig.charCodeAt(0)%2C%0A%20%20%20%20%20%20%20%20sig1%20%3D%20sig.charCodeAt(1)%2C%0A%20%20%20%20%20%20%20%20sig2%20%3D%20sig.charCodeAt(2)%2C%0A%20%20%20%20%20%20%20%20sig3%20%3D%20sig.charCodeAt(3)%3B%0A%20%20%20%20for%20(var%20i%20%3D%20this.length%20-%204%3B%20i%20%3E%3D%200%3B%20--i)%20%7B%0A%20%20%20%20%20%20%20%20if%20(this.data%5Bi%5D%20%3D%3D%3D%20sig0%20%26%26%20this.data%5Bi%20%2B%201%5D%20%3D%3D%3D%20sig1%20%26%26%20this.data%5Bi%20%2B%202%5D%20%3D%3D%3D%20sig2%20%26%26%20this.data%5Bi%20%2B%203%5D%20%3D%3D%3D%20sig3)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20i%20-%20this.zero%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20return%20-1%3B%0A%7D%3B%0A%2F**%0A%20*%20%40see%20DataReader.readData%0A%20*%2F%0AArrayReader.prototype.readData%20%3D%20function(size)%20%7B%0A%20%20%20%20this.checkOffset(size)%3B%0A%20%20%20%20if(size%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20return%20%5B%5D%3B%0A%20%20%20%20%7D%0A%20%20%20%20var%20result%20%3D%20this.data.slice(this.zero%20%2B%20this.index%2C%20this.zero%20%2B%20this.index%20%2B%20size)%3B%0A%20%20%20%20this.index%20%2B%3D%20size%3B%0A%20%20%20%20return%20result%3B%0A%7D%3B%0Amodule.exports%20%3D%20ArrayReader%3B%0A%0A%7D%2C%7B%22.%2FdataReader%22%3A6%7D%5D%2C2%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0A%2F%2F%20private%20property%0Avar%20_keyStr%20%3D%20%22ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%2B%2F%3D%22%3B%0A%0A%0A%2F%2F%20public%20method%20for%20encoding%0Aexports.encode%20%3D%20function(input%2C%20utf8)%20%7B%0A%20%20%20%20var%20output%20%3D%20%22%22%3B%0A%20%20%20%20var%20chr1%2C%20chr2%2C%20chr3%2C%20enc1%2C%20enc2%2C%20enc3%2C%20enc4%3B%0A%20%20%20%20var%20i%20%3D%200%3B%0A%0A%20%20%20%20while%20(i%20%3C%20input.length)%20%7B%0A%0A%20%20%20%20%20%20%20%20chr1%20%3D%20input.charCodeAt(i%2B%2B)%3B%0A%20%20%20%20%20%20%20%20chr2%20%3D%20input.charCodeAt(i%2B%2B)%3B%0A%20%20%20%20%20%20%20%20chr3%20%3D%20input.charCodeAt(i%2B%2B)%3B%0A%0A%20%20%20%20%20%20%20%20enc1%20%3D%20chr1%20%3E%3E%202%3B%0A%20%20%20%20%20%20%20%20enc2%20%3D%20((chr1%20%26%203)%20%3C%3C%204)%20%7C%20(chr2%20%3E%3E%204)%3B%0A%20%20%20%20%20%20%20%20enc3%20%3D%20((chr2%20%26%2015)%20%3C%3C%202)%20%7C%20(chr3%20%3E%3E%206)%3B%0A%20%20%20%20%20%20%20%20enc4%20%3D%20chr3%20%26%2063%3B%0A%0A%20%20%20%20%20%20%20%20if%20(isNaN(chr2))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20enc3%20%3D%20enc4%20%3D%2064%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20else%20if%20(isNaN(chr3))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20enc4%20%3D%2064%3B%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20output%20%3D%20output%20%2B%20_keyStr.charAt(enc1)%20%2B%20_keyStr.charAt(enc2)%20%2B%20_keyStr.charAt(enc3)%20%2B%20_keyStr.charAt(enc4)%3B%0A%0A%20%20%20%20%7D%0A%0A%20%20%20%20return%20output%3B%0A%7D%3B%0A%0A%2F%2F%20public%20method%20for%20decoding%0Aexports.decode%20%3D%20function(input%2C%20utf8)%20%7B%0A%20%20%20%20var%20output%20%3D%20%22%22%3B%0A%20%20%20%20var%20chr1%2C%20chr2%2C%20chr3%3B%0A%20%20%20%20var%20enc1%2C%20enc2%2C%20enc3%2C%20enc4%3B%0A%20%20%20%20var%20i%20%3D%200%3B%0A%0A%20%20%20%20input%20%3D%20input.replace(%2F%5B%5EA-Za-z0-9%5C%2B%5C%2F%5C%3D%5D%2Fg%2C%20%22%22)%3B%0A%0A%20%20%20%20while%20(i%20%3C%20input.length)%20%7B%0A%0A%20%20%20%20%20%20%20%20enc1%20%3D%20_keyStr.indexOf(input.charAt(i%2B%2B))%3B%0A%20%20%20%20%20%20%20%20enc2%20%3D%20_keyStr.indexOf(input.charAt(i%2B%2B))%3B%0A%20%20%20%20%20%20%20%20enc3%20%3D%20_keyStr.indexOf(input.charAt(i%2B%2B))%3B%0A%20%20%20%20%20%20%20%20enc4%20%3D%20_keyStr.indexOf(input.charAt(i%2B%2B))%3B%0A%0A%20%20%20%20%20%20%20%20chr1%20%3D%20(enc1%20%3C%3C%202)%20%7C%20(enc2%20%3E%3E%204)%3B%0A%20%20%20%20%20%20%20%20chr2%20%3D%20((enc2%20%26%2015)%20%3C%3C%204)%20%7C%20(enc3%20%3E%3E%202)%3B%0A%20%20%20%20%20%20%20%20chr3%20%3D%20((enc3%20%26%203)%20%3C%3C%206)%20%7C%20enc4%3B%0A%0A%20%20%20%20%20%20%20%20output%20%3D%20output%20%2B%20String.fromCharCode(chr1)%3B%0A%0A%20%20%20%20%20%20%20%20if%20(enc3%20!%3D%2064)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20output%20%3D%20output%20%2B%20String.fromCharCode(chr2)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20if%20(enc4%20!%3D%2064)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20output%20%3D%20output%20%2B%20String.fromCharCode(chr3)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%7D%0A%0A%20%20%20%20return%20output%3B%0A%0A%7D%3B%0A%0A%7D%2C%7B%7D%5D%2C3%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0Afunction%20CompressedObject()%20%7B%0A%20%20%20%20this.compressedSize%20%3D%200%3B%0A%20%20%20%20this.uncompressedSize%20%3D%200%3B%0A%20%20%20%20this.crc32%20%3D%200%3B%0A%20%20%20%20this.compressionMethod%20%3D%20null%3B%0A%20%20%20%20this.compressedContent%20%3D%20null%3B%0A%7D%0A%0ACompressedObject.prototype%20%3D%20%7B%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Return%20the%20decompressed%20content%20in%20an%20unspecified%20format.%0A%20%20%20%20%20*%20The%20format%20will%20depend%20on%20the%20decompressor.%0A%20%20%20%20%20*%20%40return%20%7BObject%7D%20the%20decompressed%20content.%0A%20%20%20%20%20*%2F%0A%20%20%20%20getContent%3A%20function()%20%7B%0A%20%20%20%20%20%20%20%20return%20null%3B%20%2F%2F%20see%20implementation%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Return%20the%20compressed%20content%20in%20an%20unspecified%20format.%0A%20%20%20%20%20*%20The%20format%20will%20depend%20on%20the%20compressed%20conten%20source.%0A%20%20%20%20%20*%20%40return%20%7BObject%7D%20the%20compressed%20content.%0A%20%20%20%20%20*%2F%0A%20%20%20%20getCompressedContent%3A%20function()%20%7B%0A%20%20%20%20%20%20%20%20return%20null%3B%20%2F%2F%20see%20implementation%0A%20%20%20%20%7D%0A%7D%3B%0Amodule.exports%20%3D%20CompressedObject%3B%0A%0A%7D%2C%7B%7D%5D%2C4%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0Aexports.STORE%20%3D%20%7B%0A%20%20%20%20magic%3A%20%22%5Cx00%5Cx00%22%2C%0A%20%20%20%20compress%3A%20function(content%2C%20compressionOptions)%20%7B%0A%20%20%20%20%20%20%20%20return%20content%3B%20%2F%2F%20no%20compression%0A%20%20%20%20%7D%2C%0A%20%20%20%20uncompress%3A%20function(content)%20%7B%0A%20%20%20%20%20%20%20%20return%20content%3B%20%2F%2F%20no%20compression%0A%20%20%20%20%7D%2C%0A%20%20%20%20compressInputType%3A%20null%2C%0A%20%20%20%20uncompressInputType%3A%20null%0A%7D%3B%0Aexports.DEFLATE%20%3D%20require('.%2Fflate')%3B%0A%0A%7D%2C%7B%22.%2Fflate%22%3A9%7D%5D%2C5%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0A%0Avar%20utils%20%3D%20require('.%2Futils')%3B%0A%0Avar%20table%20%3D%20%5B%0A%20%20%20%200x00000000%2C%200x77073096%2C%200xEE0E612C%2C%200x990951BA%2C%0A%20%20%20%200x076DC419%2C%200x706AF48F%2C%200xE963A535%2C%200x9E6495A3%2C%0A%20%20%20%200x0EDB8832%2C%200x79DCB8A4%2C%200xE0D5E91E%2C%200x97D2D988%2C%0A%20%20%20%200x09B64C2B%2C%200x7EB17CBD%2C%200xE7B82D07%2C%200x90BF1D91%2C%0A%20%20%20%200x1DB71064%2C%200x6AB020F2%2C%200xF3B97148%2C%200x84BE41DE%2C%0A%20%20%20%200x1ADAD47D%2C%200x6DDDE4EB%2C%200xF4D4B551%2C%200x83D385C7%2C%0A%20%20%20%200x136C9856%2C%200x646BA8C0%2C%200xFD62F97A%2C%200x8A65C9EC%2C%0A%20%20%20%200x14015C4F%2C%200x63066CD9%2C%200xFA0F3D63%2C%200x8D080DF5%2C%0A%20%20%20%200x3B6E20C8%2C%200x4C69105E%2C%200xD56041E4%2C%200xA2677172%2C%0A%20%20%20%200x3C03E4D1%2C%200x4B04D447%2C%200xD20D85FD%2C%200xA50AB56B%2C%0A%20%20%20%200x35B5A8FA%2C%200x42B2986C%2C%200xDBBBC9D6%2C%200xACBCF940%2C%0A%20%20%20%200x32D86CE3%2C%200x45DF5C75%2C%200xDCD60DCF%2C%200xABD13D59%2C%0A%20%20%20%200x26D930AC%2C%200x51DE003A%2C%200xC8D75180%2C%200xBFD06116%2C%0A%20%20%20%200x21B4F4B5%2C%200x56B3C423%2C%200xCFBA9599%2C%200xB8BDA50F%2C%0A%20%20%20%200x2802B89E%2C%200x5F058808%2C%200xC60CD9B2%2C%200xB10BE924%2C%0A%20%20%20%200x2F6F7C87%2C%200x58684C11%2C%200xC1611DAB%2C%200xB6662D3D%2C%0A%20%20%20%200x76DC4190%2C%200x01DB7106%2C%200x98D220BC%2C%200xEFD5102A%2C%0A%20%20%20%200x71B18589%2C%200x06B6B51F%2C%200x9FBFE4A5%2C%200xE8B8D433%2C%0A%20%20%20%200x7807C9A2%2C%200x0F00F934%2C%200x9609A88E%2C%200xE10E9818%2C%0A%20%20%20%200x7F6A0DBB%2C%200x086D3D2D%2C%200x91646C97%2C%200xE6635C01%2C%0A%20%20%20%200x6B6B51F4%2C%200x1C6C6162%2C%200x856530D8%2C%200xF262004E%2C%0A%20%20%20%200x6C0695ED%2C%200x1B01A57B%2C%200x8208F4C1%2C%200xF50FC457%2C%0A%20%20%20%200x65B0D9C6%2C%200x12B7E950%2C%200x8BBEB8EA%2C%200xFCB9887C%2C%0A%20%20%20%200x62DD1DDF%2C%200x15DA2D49%2C%200x8CD37CF3%2C%200xFBD44C65%2C%0A%20%20%20%200x4DB26158%2C%200x3AB551CE%2C%200xA3BC0074%2C%200xD4BB30E2%2C%0A%20%20%20%200x4ADFA541%2C%200x3DD895D7%2C%200xA4D1C46D%2C%200xD3D6F4FB%2C%0A%20%20%20%200x4369E96A%2C%200x346ED9FC%2C%200xAD678846%2C%200xDA60B8D0%2C%0A%20%20%20%200x44042D73%2C%200x33031DE5%2C%200xAA0A4C5F%2C%200xDD0D7CC9%2C%0A%20%20%20%200x5005713C%2C%200x270241AA%2C%200xBE0B1010%2C%200xC90C2086%2C%0A%20%20%20%200x5768B525%2C%200x206F85B3%2C%200xB966D409%2C%200xCE61E49F%2C%0A%20%20%20%200x5EDEF90E%2C%200x29D9C998%2C%200xB0D09822%2C%200xC7D7A8B4%2C%0A%20%20%20%200x59B33D17%2C%200x2EB40D81%2C%200xB7BD5C3B%2C%200xC0BA6CAD%2C%0A%20%20%20%200xEDB88320%2C%200x9ABFB3B6%2C%200x03B6E20C%2C%200x74B1D29A%2C%0A%20%20%20%200xEAD54739%2C%200x9DD277AF%2C%200x04DB2615%2C%200x73DC1683%2C%0A%20%20%20%200xE3630B12%2C%200x94643B84%2C%200x0D6D6A3E%2C%200x7A6A5AA8%2C%0A%20%20%20%200xE40ECF0B%2C%200x9309FF9D%2C%200x0A00AE27%2C%200x7D079EB1%2C%0A%20%20%20%200xF00F9344%2C%200x8708A3D2%2C%200x1E01F268%2C%200x6906C2FE%2C%0A%20%20%20%200xF762575D%2C%200x806567CB%2C%200x196C3671%2C%200x6E6B06E7%2C%0A%20%20%20%200xFED41B76%2C%200x89D32BE0%2C%200x10DA7A5A%2C%200x67DD4ACC%2C%0A%20%20%20%200xF9B9DF6F%2C%200x8EBEEFF9%2C%200x17B7BE43%2C%200x60B08ED5%2C%0A%20%20%20%200xD6D6A3E8%2C%200xA1D1937E%2C%200x38D8C2C4%2C%200x4FDFF252%2C%0A%20%20%20%200xD1BB67F1%2C%200xA6BC5767%2C%200x3FB506DD%2C%200x48B2364B%2C%0A%20%20%20%200xD80D2BDA%2C%200xAF0A1B4C%2C%200x36034AF6%2C%200x41047A60%2C%0A%20%20%20%200xDF60EFC3%2C%200xA867DF55%2C%200x316E8EEF%2C%200x4669BE79%2C%0A%20%20%20%200xCB61B38C%2C%200xBC66831A%2C%200x256FD2A0%2C%200x5268E236%2C%0A%20%20%20%200xCC0C7795%2C%200xBB0B4703%2C%200x220216B9%2C%200x5505262F%2C%0A%20%20%20%200xC5BA3BBE%2C%200xB2BD0B28%2C%200x2BB45A92%2C%200x5CB36A04%2C%0A%20%20%20%200xC2D7FFA7%2C%200xB5D0CF31%2C%200x2CD99E8B%2C%200x5BDEAE1D%2C%0A%20%20%20%200x9B64C2B0%2C%200xEC63F226%2C%200x756AA39C%2C%200x026D930A%2C%0A%20%20%20%200x9C0906A9%2C%200xEB0E363F%2C%200x72076785%2C%200x05005713%2C%0A%20%20%20%200x95BF4A82%2C%200xE2B87A14%2C%200x7BB12BAE%2C%200x0CB61B38%2C%0A%20%20%20%200x92D28E9B%2C%200xE5D5BE0D%2C%200x7CDCEFB7%2C%200x0BDBDF21%2C%0A%20%20%20%200x86D3D2D4%2C%200xF1D4E242%2C%200x68DDB3F8%2C%200x1FDA836E%2C%0A%20%20%20%200x81BE16CD%2C%200xF6B9265B%2C%200x6FB077E1%2C%200x18B74777%2C%0A%20%20%20%200x88085AE6%2C%200xFF0F6A70%2C%200x66063BCA%2C%200x11010B5C%2C%0A%20%20%20%200x8F659EFF%2C%200xF862AE69%2C%200x616BFFD3%2C%200x166CCF45%2C%0A%20%20%20%200xA00AE278%2C%200xD70DD2EE%2C%200x4E048354%2C%200x3903B3C2%2C%0A%20%20%20%200xA7672661%2C%200xD06016F7%2C%200x4969474D%2C%200x3E6E77DB%2C%0A%20%20%20%200xAED16A4A%2C%200xD9D65ADC%2C%200x40DF0B66%2C%200x37D83BF0%2C%0A%20%20%20%200xA9BCAE53%2C%200xDEBB9EC5%2C%200x47B2CF7F%2C%200x30B5FFE9%2C%0A%20%20%20%200xBDBDF21C%2C%200xCABAC28A%2C%200x53B39330%2C%200x24B4A3A6%2C%0A%20%20%20%200xBAD03605%2C%200xCDD70693%2C%200x54DE5729%2C%200x23D967BF%2C%0A%20%20%20%200xB3667A2E%2C%200xC4614AB8%2C%200x5D681B02%2C%200x2A6F2B94%2C%0A%20%20%20%200xB40BBE37%2C%200xC30C8EA1%2C%200x5A05DF1B%2C%200x2D02EF8D%0A%5D%3B%0A%0A%2F**%0A%20*%0A%20*%20%20Javascript%20crc32%0A%20*%20%20http%3A%2F%2Fwww.webtoolkit.info%2F%0A%20*%0A%20*%2F%0Amodule.exports%20%3D%20function%20crc32(input%2C%20crc)%20%7B%0A%20%20%20%20if%20(typeof%20input%20%3D%3D%3D%20%22undefined%22%20%7C%7C%20!input.length)%20%7B%0A%20%20%20%20%20%20%20%20return%200%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20var%20isArray%20%3D%20utils.getTypeOf(input)%20!%3D%3D%20%22string%22%3B%0A%0A%20%20%20%20if%20(typeof(crc)%20%3D%3D%20%22undefined%22)%20%7B%0A%20%20%20%20%20%20%20%20crc%20%3D%200%3B%0A%20%20%20%20%7D%0A%20%20%20%20var%20x%20%3D%200%3B%0A%20%20%20%20var%20y%20%3D%200%3B%0A%20%20%20%20var%20b%20%3D%200%3B%0A%0A%20%20%20%20crc%20%3D%20crc%20%5E%20(-1)%3B%0A%20%20%20%20for%20(var%20i%20%3D%200%2C%20iTop%20%3D%20input.length%3B%20i%20%3C%20iTop%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20b%20%3D%20isArray%20%3F%20input%5Bi%5D%20%3A%20input.charCodeAt(i)%3B%0A%20%20%20%20%20%20%20%20y%20%3D%20(crc%20%5E%20b)%20%26%200xFF%3B%0A%20%20%20%20%20%20%20%20x%20%3D%20table%5By%5D%3B%0A%20%20%20%20%20%20%20%20crc%20%3D%20(crc%20%3E%3E%3E%208)%20%5E%20x%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20return%20crc%20%5E%20(-1)%3B%0A%7D%3B%0A%2F%2F%20vim%3A%20set%20shiftwidth%3D4%20softtabstop%3D4%3A%0A%0A%7D%2C%7B%22.%2Futils%22%3A22%7D%5D%2C6%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0Avar%20utils%20%3D%20require('.%2Futils')%3B%0A%0Afunction%20DataReader(data)%20%7B%0A%20%20%20%20this.data%20%3D%20null%3B%20%2F%2F%20type%20%3A%20see%20implementation%0A%20%20%20%20this.length%20%3D%200%3B%0A%20%20%20%20this.index%20%3D%200%3B%0A%20%20%20%20this.zero%20%3D%200%3B%0A%7D%0ADataReader.prototype%20%3D%20%7B%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Check%20that%20the%20offset%20will%20not%20go%20too%20far.%0A%20%20%20%20%20*%20%40param%20%7Bstring%7D%20offset%20the%20additional%20offset%20to%20check.%0A%20%20%20%20%20*%20%40throws%20%7BError%7D%20an%20Error%20if%20the%20offset%20is%20out%20of%20bounds.%0A%20%20%20%20%20*%2F%0A%20%20%20%20checkOffset%3A%20function(offset)%20%7B%0A%20%20%20%20%20%20%20%20this.checkIndex(this.index%20%2B%20offset)%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Check%20that%20the%20specifed%20index%20will%20not%20be%20too%20far.%0A%20%20%20%20%20*%20%40param%20%7Bstring%7D%20newIndex%20the%20index%20to%20check.%0A%20%20%20%20%20*%20%40throws%20%7BError%7D%20an%20Error%20if%20the%20index%20is%20out%20of%20bounds.%0A%20%20%20%20%20*%2F%0A%20%20%20%20checkIndex%3A%20function(newIndex)%20%7B%0A%20%20%20%20%20%20%20%20if%20(this.length%20%3C%20this.zero%20%2B%20newIndex%20%7C%7C%20newIndex%20%3C%200)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20Error(%22End%20of%20data%20reached%20(data%20length%20%3D%20%22%20%2B%20this.length%20%2B%20%22%2C%20asked%20index%20%3D%20%22%20%2B%20(newIndex)%20%2B%20%22).%20Corrupted%20zip%20%3F%22)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Change%20the%20index.%0A%20%20%20%20%20*%20%40param%20%7Bnumber%7D%20newIndex%20The%20new%20index.%0A%20%20%20%20%20*%20%40throws%20%7BError%7D%20if%20the%20new%20index%20is%20out%20of%20the%20data.%0A%20%20%20%20%20*%2F%0A%20%20%20%20setIndex%3A%20function(newIndex)%20%7B%0A%20%20%20%20%20%20%20%20this.checkIndex(newIndex)%3B%0A%20%20%20%20%20%20%20%20this.index%20%3D%20newIndex%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Skip%20the%20next%20n%20bytes.%0A%20%20%20%20%20*%20%40param%20%7Bnumber%7D%20n%20the%20number%20of%20bytes%20to%20skip.%0A%20%20%20%20%20*%20%40throws%20%7BError%7D%20if%20the%20new%20index%20is%20out%20of%20the%20data.%0A%20%20%20%20%20*%2F%0A%20%20%20%20skip%3A%20function(n)%20%7B%0A%20%20%20%20%20%20%20%20this.setIndex(this.index%20%2B%20n)%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Get%20the%20byte%20at%20the%20specified%20index.%0A%20%20%20%20%20*%20%40param%20%7Bnumber%7D%20i%20the%20index%20to%20use.%0A%20%20%20%20%20*%20%40return%20%7Bnumber%7D%20a%20byte.%0A%20%20%20%20%20*%2F%0A%20%20%20%20byteAt%3A%20function(i)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20see%20implementations%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Get%20the%20next%20number%20with%20a%20given%20byte%20size.%0A%20%20%20%20%20*%20%40param%20%7Bnumber%7D%20size%20the%20number%20of%20bytes%20to%20read.%0A%20%20%20%20%20*%20%40return%20%7Bnumber%7D%20the%20corresponding%20number.%0A%20%20%20%20%20*%2F%0A%20%20%20%20readInt%3A%20function(size)%20%7B%0A%20%20%20%20%20%20%20%20var%20result%20%3D%200%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20i%3B%0A%20%20%20%20%20%20%20%20this.checkOffset(size)%3B%0A%20%20%20%20%20%20%20%20for%20(i%20%3D%20this.index%20%2B%20size%20-%201%3B%20i%20%3E%3D%20this.index%3B%20i--)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20result%20%3D%20(result%20%3C%3C%208)%20%2B%20this.byteAt(i)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20this.index%20%2B%3D%20size%3B%0A%20%20%20%20%20%20%20%20return%20result%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Get%20the%20next%20string%20with%20a%20given%20byte%20size.%0A%20%20%20%20%20*%20%40param%20%7Bnumber%7D%20size%20the%20number%20of%20bytes%20to%20read.%0A%20%20%20%20%20*%20%40return%20%7Bstring%7D%20the%20corresponding%20string.%0A%20%20%20%20%20*%2F%0A%20%20%20%20readString%3A%20function(size)%20%7B%0A%20%20%20%20%20%20%20%20return%20utils.transformTo(%22string%22%2C%20this.readData(size))%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Get%20raw%20data%20without%20conversion%2C%20%3Csize%3E%20bytes.%0A%20%20%20%20%20*%20%40param%20%7Bnumber%7D%20size%20the%20number%20of%20bytes%20to%20read.%0A%20%20%20%20%20*%20%40return%20%7BObject%7D%20the%20raw%20data%2C%20implementation%20specific.%0A%20%20%20%20%20*%2F%0A%20%20%20%20readData%3A%20function(size)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20see%20implementations%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Find%20the%20last%20occurence%20of%20a%20zip%20signature%20(4%20bytes).%0A%20%20%20%20%20*%20%40param%20%7Bstring%7D%20sig%20the%20signature%20to%20find.%0A%20%20%20%20%20*%20%40return%20%7Bnumber%7D%20the%20index%20of%20the%20last%20occurence%2C%20-1%20if%20not%20found.%0A%20%20%20%20%20*%2F%0A%20%20%20%20lastIndexOfSignature%3A%20function(sig)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20see%20implementations%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Get%20the%20next%20date.%0A%20%20%20%20%20*%20%40return%20%7BDate%7D%20the%20date.%0A%20%20%20%20%20*%2F%0A%20%20%20%20readDate%3A%20function()%20%7B%0A%20%20%20%20%20%20%20%20var%20dostime%20%3D%20this.readInt(4)%3B%0A%20%20%20%20%20%20%20%20return%20new%20Date(%0A%20%20%20%20%20%20%20%20((dostime%20%3E%3E%2025)%20%26%200x7f)%20%2B%201980%2C%20%2F%2F%20year%0A%20%20%20%20%20%20%20%20((dostime%20%3E%3E%2021)%20%26%200x0f)%20-%201%2C%20%2F%2F%20month%0A%20%20%20%20%20%20%20%20(dostime%20%3E%3E%2016)%20%26%200x1f%2C%20%2F%2F%20day%0A%20%20%20%20%20%20%20%20(dostime%20%3E%3E%2011)%20%26%200x1f%2C%20%2F%2F%20hour%0A%20%20%20%20%20%20%20%20(dostime%20%3E%3E%205)%20%26%200x3f%2C%20%2F%2F%20minute%0A%20%20%20%20%20%20%20%20(dostime%20%26%200x1f)%20%3C%3C%201)%3B%20%2F%2F%20second%0A%20%20%20%20%7D%0A%7D%3B%0Amodule.exports%20%3D%20DataReader%3B%0A%0A%7D%2C%7B%22.%2Futils%22%3A22%7D%5D%2C7%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0Aexports.base64%20%3D%20false%3B%0Aexports.binary%20%3D%20false%3B%0Aexports.dir%20%3D%20false%3B%0Aexports.createFolders%20%3D%20false%3B%0Aexports.date%20%3D%20null%3B%0Aexports.compression%20%3D%20null%3B%0Aexports.compressionOptions%20%3D%20null%3B%0Aexports.comment%20%3D%20null%3B%0Aexports.unixPermissions%20%3D%20null%3B%0Aexports.dosPermissions%20%3D%20null%3B%0A%0A%7D%2C%7B%7D%5D%2C8%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0Avar%20utils%20%3D%20require('.%2Futils')%3B%0A%0A%2F**%0A%20*%20%40deprecated%0A%20*%20This%20function%20will%20be%20removed%20in%20a%20future%20version%20without%20replacement.%0A%20*%2F%0Aexports.string2binary%20%3D%20function(str)%20%7B%0A%20%20%20%20return%20utils.string2binary(str)%3B%0A%7D%3B%0A%0A%2F**%0A%20*%20%40deprecated%0A%20*%20This%20function%20will%20be%20removed%20in%20a%20future%20version%20without%20replacement.%0A%20*%2F%0Aexports.string2Uint8Array%20%3D%20function(str)%20%7B%0A%20%20%20%20return%20utils.transformTo(%22uint8array%22%2C%20str)%3B%0A%7D%3B%0A%0A%2F**%0A%20*%20%40deprecated%0A%20*%20This%20function%20will%20be%20removed%20in%20a%20future%20version%20without%20replacement.%0A%20*%2F%0Aexports.uint8Array2String%20%3D%20function(array)%20%7B%0A%20%20%20%20return%20utils.transformTo(%22string%22%2C%20array)%3B%0A%7D%3B%0A%0A%2F**%0A%20*%20%40deprecated%0A%20*%20This%20function%20will%20be%20removed%20in%20a%20future%20version%20without%20replacement.%0A%20*%2F%0Aexports.string2Blob%20%3D%20function(str)%20%7B%0A%20%20%20%20var%20buffer%20%3D%20utils.transformTo(%22arraybuffer%22%2C%20str)%3B%0A%20%20%20%20return%20utils.arrayBuffer2Blob(buffer)%3B%0A%7D%3B%0A%0A%2F**%0A%20*%20%40deprecated%0A%20*%20This%20function%20will%20be%20removed%20in%20a%20future%20version%20without%20replacement.%0A%20*%2F%0Aexports.arrayBuffer2Blob%20%3D%20function(buffer)%20%7B%0A%20%20%20%20return%20utils.arrayBuffer2Blob(buffer)%3B%0A%7D%3B%0A%0A%2F**%0A%20*%20%40deprecated%0A%20*%20This%20function%20will%20be%20removed%20in%20a%20future%20version%20without%20replacement.%0A%20*%2F%0Aexports.transformTo%20%3D%20function(outputType%2C%20input)%20%7B%0A%20%20%20%20return%20utils.transformTo(outputType%2C%20input)%3B%0A%7D%3B%0A%0A%2F**%0A%20*%20%40deprecated%0A%20*%20This%20function%20will%20be%20removed%20in%20a%20future%20version%20without%20replacement.%0A%20*%2F%0Aexports.getTypeOf%20%3D%20function(input)%20%7B%0A%20%20%20%20return%20utils.getTypeOf(input)%3B%0A%7D%3B%0A%0A%2F**%0A%20*%20%40deprecated%0A%20*%20This%20function%20will%20be%20removed%20in%20a%20future%20version%20without%20replacement.%0A%20*%2F%0Aexports.checkSupport%20%3D%20function(type)%20%7B%0A%20%20%20%20return%20utils.checkSupport(type)%3B%0A%7D%3B%0A%0A%2F**%0A%20*%20%40deprecated%0A%20*%20This%20value%20will%20be%20removed%20in%20a%20future%20version%20without%20replacement.%0A%20*%2F%0Aexports.MAX_VALUE_16BITS%20%3D%20utils.MAX_VALUE_16BITS%3B%0A%0A%2F**%0A%20*%20%40deprecated%0A%20*%20This%20value%20will%20be%20removed%20in%20a%20future%20version%20without%20replacement.%0A%20*%2F%0Aexports.MAX_VALUE_32BITS%20%3D%20utils.MAX_VALUE_32BITS%3B%0A%0A%0A%2F**%0A%20*%20%40deprecated%0A%20*%20This%20function%20will%20be%20removed%20in%20a%20future%20version%20without%20replacement.%0A%20*%2F%0Aexports.pretty%20%3D%20function(str)%20%7B%0A%20%20%20%20return%20utils.pretty(str)%3B%0A%7D%3B%0A%0A%2F**%0A%20*%20%40deprecated%0A%20*%20This%20function%20will%20be%20removed%20in%20a%20future%20version%20without%20replacement.%0A%20*%2F%0Aexports.findCompression%20%3D%20function(compressionMethod)%20%7B%0A%20%20%20%20return%20utils.findCompression(compressionMethod)%3B%0A%7D%3B%0A%0A%2F**%0A%20*%20%40deprecated%0A%20*%20This%20function%20will%20be%20removed%20in%20a%20future%20version%20without%20replacement.%0A%20*%2F%0Aexports.isRegExp%20%3D%20function%20(object)%20%7B%0A%20%20%20%20return%20utils.isRegExp(object)%3B%0A%7D%3B%0A%0A%0A%7D%2C%7B%22.%2Futils%22%3A22%7D%5D%2C9%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0Avar%20USE_TYPEDARRAY%20%3D%20(typeof%20Uint8Array%20!%3D%3D%20'undefined')%20%26%26%20(typeof%20Uint16Array%20!%3D%3D%20'undefined')%20%26%26%20(typeof%20Uint32Array%20!%3D%3D%20'undefined')%3B%0A%0Avar%20pako%20%3D%20require(%22pako%22)%3B%0Aexports.uncompressInputType%20%3D%20USE_TYPEDARRAY%20%3F%20%22uint8array%22%20%3A%20%22array%22%3B%0Aexports.compressInputType%20%3D%20USE_TYPEDARRAY%20%3F%20%22uint8array%22%20%3A%20%22array%22%3B%0A%0Aexports.magic%20%3D%20%22%5Cx08%5Cx00%22%3B%0Aexports.compress%20%3D%20function(input%2C%20compressionOptions)%20%7B%0A%20%20%20%20return%20pako.deflateRaw(input%2C%20%7B%0A%20%20%20%20%20%20%20%20level%20%3A%20compressionOptions.level%20%7C%7C%20-1%20%2F%2F%20default%20compression%0A%20%20%20%20%7D)%3B%0A%7D%3B%0Aexports.uncompress%20%3D%20%20function(input)%20%7B%0A%20%20%20%20return%20pako.inflateRaw(input)%3B%0A%7D%3B%0A%0A%7D%2C%7B%22pako%22%3A25%7D%5D%2C10%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0A%0Avar%20base64%20%3D%20require('.%2Fbase64')%3B%0A%0A%2F**%0AUsage%3A%0A%20%20%20zip%20%3D%20new%20JSZip()%3B%0A%20%20%20zip.file(%22hello.txt%22%2C%20%22Hello%2C%20World!%22).file(%22tempfile%22%2C%20%22nothing%22)%3B%0A%20%20%20zip.folder(%22images%22).file(%22smile.gif%22%2C%20base64Data%2C%20%7Bbase64%3A%20true%7D)%3B%0A%20%20%20zip.file(%22Xmas.txt%22%2C%20%22Ho%20ho%20ho%20!%22%2C%20%7Bdate%20%3A%20new%20Date(%22December%2025%2C%202007%2000%3A00%3A01%22)%7D)%3B%0A%20%20%20zip.remove(%22tempfile%22)%3B%0A%0A%20%20%20base64zip%20%3D%20zip.generate()%3B%0A%0A**%2F%0A%0A%2F**%0A%20*%20Representation%20a%20of%20zip%20file%20in%20js%0A%20*%20%40constructor%0A%20*%20%40param%20%7BString%3D%7CArrayBuffer%3D%7CUint8Array%3D%7D%20data%20the%20data%20to%20load%2C%20if%20any%20(optional).%0A%20*%20%40param%20%7BObject%3D%7D%20options%20the%20options%20for%20creating%20this%20objects%20(optional).%0A%20*%2F%0Afunction%20JSZip(data%2C%20options)%20%7B%0A%20%20%20%20%2F%2F%20if%20this%20constructor%20is%C2%A0used%20without%C2%A0%60new%60%2C%20it%C2%A0adds%20%60new%60%20before%C2%A0itself%3A%0A%20%20%20%20if(!(this%20instanceof%20JSZip))%20return%20new%20JSZip(data%2C%20options)%3B%0A%0A%20%20%20%20%2F%2F%20object%20containing%20the%20files%20%3A%0A%20%20%20%20%2F%2F%20%7B%0A%20%20%20%20%2F%2F%20%20%20%22folder%2F%22%20%3A%20%7B...%7D%2C%0A%20%20%20%20%2F%2F%20%20%20%22folder%2Fdata.txt%22%20%3A%20%7B...%7D%0A%20%20%20%20%2F%2F%20%7D%0A%20%20%20%20this.files%20%3D%20%7B%7D%3B%0A%0A%20%20%20%20this.comment%20%3D%20null%3B%0A%0A%20%20%20%20%2F%2F%20Where%20we%20are%20in%20the%20hierarchy%0A%20%20%20%20this.root%20%3D%20%22%22%3B%0A%20%20%20%20if%20(data)%20%7B%0A%20%20%20%20%20%20%20%20this.load(data%2C%20options)%3B%0A%20%20%20%20%7D%0A%20%20%20%20this.clone%20%3D%20function()%20%7B%0A%20%20%20%20%20%20%20%20var%20newObj%20%3D%20new%20JSZip()%3B%0A%20%20%20%20%20%20%20%20for%20(var%20i%20in%20this)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(typeof%20this%5Bi%5D%20!%3D%3D%20%22function%22)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20newObj%5Bi%5D%20%3D%20this%5Bi%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20newObj%3B%0A%20%20%20%20%7D%3B%0A%7D%0AJSZip.prototype%20%3D%20require('.%2Fobject')%3B%0AJSZip.prototype.load%20%3D%20require('.%2Fload')%3B%0AJSZip.support%20%3D%20require('.%2Fsupport')%3B%0AJSZip.defaults%20%3D%20require('.%2Fdefaults')%3B%0A%0A%2F**%0A%20*%20%40deprecated%0A%20*%20This%20namespace%20will%20be%20removed%20in%20a%20future%20version%20without%20replacement.%0A%20*%2F%0AJSZip.utils%20%3D%20require('.%2FdeprecatedPublicUtils')%3B%0A%0AJSZip.base64%20%3D%20%7B%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20%40deprecated%0A%20%20%20%20%20*%20This%20method%20will%20be%20removed%20in%20a%20future%20version%20without%20replacement.%0A%20%20%20%20%20*%2F%0A%20%20%20%20encode%20%3A%20function(input)%20%7B%0A%20%20%20%20%20%20%20%20return%20base64.encode(input)%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20%40deprecated%0A%20%20%20%20%20*%20This%20method%20will%20be%20removed%20in%20a%20future%20version%20without%20replacement.%0A%20%20%20%20%20*%2F%0A%20%20%20%20decode%20%3A%20function(input)%20%7B%0A%20%20%20%20%20%20%20%20return%20base64.decode(input)%3B%0A%20%20%20%20%7D%0A%7D%3B%0AJSZip.compressions%20%3D%20require('.%2Fcompressions')%3B%0Amodule.exports%20%3D%20JSZip%3B%0A%0A%7D%2C%7B%22.%2Fbase64%22%3A2%2C%22.%2Fcompressions%22%3A4%2C%22.%2Fdefaults%22%3A7%2C%22.%2FdeprecatedPublicUtils%22%3A8%2C%22.%2Fload%22%3A11%2C%22.%2Fobject%22%3A14%2C%22.%2Fsupport%22%3A18%7D%5D%2C11%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0Avar%20base64%20%3D%20require('.%2Fbase64')%3B%0Avar%20utf8%20%3D%20require('.%2Futf8')%3B%0Avar%20utils%20%3D%20require('.%2Futils')%3B%0Avar%20ZipEntries%20%3D%20require('.%2FzipEntries')%3B%0Amodule.exports%20%3D%20function(data%2C%20options)%20%7B%0A%20%20%20%20var%20files%2C%20zipEntries%2C%20i%2C%20input%3B%0A%20%20%20%20options%20%3D%20utils.extend(options%20%7C%7C%20%7B%7D%2C%20%7B%0A%20%20%20%20%20%20%20%20base64%3A%20false%2C%0A%20%20%20%20%20%20%20%20checkCRC32%3A%20false%2C%0A%20%20%20%20%20%20%20%20optimizedBinaryString%20%3A%20false%2C%0A%20%20%20%20%20%20%20%20createFolders%3A%20false%2C%0A%20%20%20%20%20%20%20%20decodeFileName%3A%20utf8.utf8decode%0A%20%20%20%20%7D)%3B%0A%20%20%20%20if%20(options.base64)%20%7B%0A%20%20%20%20%20%20%20%20data%20%3D%20base64.decode(data)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20zipEntries%20%3D%20new%20ZipEntries(data%2C%20options)%3B%0A%20%20%20%20files%20%3D%20zipEntries.files%3B%0A%20%20%20%20for%20(i%20%3D%200%3B%20i%20%3C%20files.length%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20input%20%3D%20files%5Bi%5D%3B%0A%20%20%20%20%20%20%20%20this.file(input.fileNameStr%2C%20input.decompressed%2C%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20binary%3A%20true%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20optimizedBinaryString%3A%20true%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20date%3A%20input.date%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20dir%3A%20input.dir%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20comment%20%3A%20input.fileCommentStr.length%20%3F%20input.fileCommentStr%20%3A%20null%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20unixPermissions%20%3A%20input.unixPermissions%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20dosPermissions%20%3A%20input.dosPermissions%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20createFolders%3A%20options.createFolders%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20(zipEntries.zipComment.length)%20%7B%0A%20%20%20%20%20%20%20%20this.comment%20%3D%20zipEntries.zipComment%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20return%20this%3B%0A%7D%3B%0A%0A%7D%2C%7B%22.%2Fbase64%22%3A2%2C%22.%2Futf8%22%3A21%2C%22.%2Futils%22%3A22%2C%22.%2FzipEntries%22%3A23%7D%5D%2C12%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A(function%20(Buffer)%7B%0A'use%20strict'%3B%0Amodule.exports%20%3D%20function(data%2C%20encoding)%7B%0A%20%20%20%20return%20new%20Buffer(data%2C%20encoding)%3B%0A%7D%3B%0Amodule.exports.test%20%3D%20function(b)%7B%0A%20%20%20%20return%20Buffer.isBuffer(b)%3B%0A%7D%3B%0A%0A%7D).call(this%2C(typeof%20Buffer%20!%3D%3D%20%22undefined%22%20%3F%20Buffer%20%3A%20undefined))%0A%7D%2C%7B%7D%5D%2C13%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0Avar%20Uint8ArrayReader%20%3D%20require('.%2Fuint8ArrayReader')%3B%0A%0Afunction%20NodeBufferReader(data)%20%7B%0A%20%20%20%20this.data%20%3D%20data%3B%0A%20%20%20%20this.length%20%3D%20this.data.length%3B%0A%20%20%20%20this.index%20%3D%200%3B%0A%20%20%20%20this.zero%20%3D%200%3B%0A%7D%0ANodeBufferReader.prototype%20%3D%20new%20Uint8ArrayReader()%3B%0A%0A%2F**%0A%20*%20%40see%20DataReader.readData%0A%20*%2F%0ANodeBufferReader.prototype.readData%20%3D%20function(size)%20%7B%0A%20%20%20%20this.checkOffset(size)%3B%0A%20%20%20%20var%20result%20%3D%20this.data.slice(this.zero%20%2B%20this.index%2C%20this.zero%20%2B%20this.index%20%2B%20size)%3B%0A%20%20%20%20this.index%20%2B%3D%20size%3B%0A%20%20%20%20return%20result%3B%0A%7D%3B%0Amodule.exports%20%3D%20NodeBufferReader%3B%0A%0A%7D%2C%7B%22.%2Fuint8ArrayReader%22%3A19%7D%5D%2C14%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0Avar%20support%20%3D%20require('.%2Fsupport')%3B%0Avar%20utils%20%3D%20require('.%2Futils')%3B%0Avar%20crc32%20%3D%20require('.%2Fcrc32')%3B%0Avar%20signature%20%3D%20require('.%2Fsignature')%3B%0Avar%20defaults%20%3D%20require('.%2Fdefaults')%3B%0Avar%20base64%20%3D%20require('.%2Fbase64')%3B%0Avar%20compressions%20%3D%20require('.%2Fcompressions')%3B%0Avar%20CompressedObject%20%3D%20require('.%2FcompressedObject')%3B%0Avar%20nodeBuffer%20%3D%20require('.%2FnodeBuffer')%3B%0Avar%20utf8%20%3D%20require('.%2Futf8')%3B%0Avar%20StringWriter%20%3D%20require('.%2FstringWriter')%3B%0Avar%20Uint8ArrayWriter%20%3D%20require('.%2Fuint8ArrayWriter')%3B%0A%0A%2F**%0A%20*%20Returns%20the%20raw%20data%20of%20a%20ZipObject%2C%20decompress%20the%20content%20if%20necessary.%0A%20*%20%40param%20%7BZipObject%7D%20file%20the%20file%20to%20use.%0A%20*%20%40return%20%7BString%7CArrayBuffer%7CUint8Array%7CBuffer%7D%20the%20data.%0A%20*%2F%0Avar%20getRawData%20%3D%20function(file)%20%7B%0A%20%20%20%20if%20(file._data%20instanceof%20CompressedObject)%20%7B%0A%20%20%20%20%20%20%20%20file._data%20%3D%20file._data.getContent()%3B%0A%20%20%20%20%20%20%20%20file.options.binary%20%3D%20true%3B%0A%20%20%20%20%20%20%20%20file.options.base64%20%3D%20false%3B%0A%0A%20%20%20%20%20%20%20%20if%20(utils.getTypeOf(file._data)%20%3D%3D%3D%20%22uint8array%22)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20copy%20%3D%20file._data%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20when%20reading%20an%20arraybuffer%2C%20the%20CompressedObject%20mechanism%20will%20keep%20it%20and%20subarray()%20a%20Uint8Array.%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20if%20we%20request%20a%20file%20in%20the%20same%20format%2C%20we%20might%20get%20the%20same%20Uint8Array%20or%20its%20ArrayBuffer%20(the%20original%20zip%20file).%0A%20%20%20%20%20%20%20%20%20%20%20%20file._data%20%3D%20new%20Uint8Array(copy.length)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20with%20an%20empty%20Uint8Array%2C%20Opera%20fails%20with%20a%20%22Offset%20larger%20than%20array%20size%22%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(copy.length%20!%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20file._data.set(copy%2C%200)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20return%20file._data%3B%0A%7D%3B%0A%0A%2F**%0A%20*%20Returns%20the%20data%20of%20a%20ZipObject%20in%20a%20binary%20form.%20If%20the%20content%20is%20an%20unicode%20string%2C%20encode%20it.%0A%20*%20%40param%20%7BZipObject%7D%20file%20the%20file%20to%20use.%0A%20*%20%40return%20%7BString%7CArrayBuffer%7CUint8Array%7CBuffer%7D%20the%20data.%0A%20*%2F%0Avar%20getBinaryData%20%3D%20function(file)%20%7B%0A%20%20%20%20var%20result%20%3D%20getRawData(file)%2C%0A%20%20%20%20%20%20%20%20type%20%3D%20utils.getTypeOf(result)%3B%0A%20%20%20%20if%20(type%20%3D%3D%3D%20%22string%22)%20%7B%0A%20%20%20%20%20%20%20%20if%20(!file.options.binary)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20unicode%20text%20!%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20unicode%20string%20%3D%3E%20binary%20string%20is%20a%20painful%20process%2C%20check%20if%20we%20can%20avoid%20it.%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(support.nodebuffer)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20nodeBuffer(result%2C%20%22utf-8%22)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20file.asBinary()%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20result%3B%0A%7D%3B%0A%0A%2F**%0A%20*%20Transform%20this._data%20into%20a%20string.%0A%20*%20%40param%20%7Bfunction%7D%20filter%20a%20function%20String%20-%3E%20String%2C%20applied%20if%20not%20null%20on%20the%20result.%0A%20*%20%40return%20%7BString%7D%20the%20string%20representing%20this._data.%0A%20*%2F%0Avar%20dataToString%20%3D%20function(asUTF8)%20%7B%0A%20%20%20%20var%20result%20%3D%20getRawData(this)%3B%0A%20%20%20%20if%20(result%20%3D%3D%3D%20null%20%7C%7C%20typeof%20result%20%3D%3D%3D%20%22undefined%22)%20%7B%0A%20%20%20%20%20%20%20%20return%20%22%22%3B%0A%20%20%20%20%7D%0A%20%20%20%20%2F%2F%20if%20the%20data%20is%20a%20base64%20string%2C%20we%20decode%20it%20before%20checking%20the%20encoding%20!%0A%20%20%20%20if%20(this.options.base64)%20%7B%0A%20%20%20%20%20%20%20%20result%20%3D%20base64.decode(result)%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20(asUTF8%20%26%26%20this.options.binary)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20JSZip.prototype.utf8decode%20supports%20arrays%20as%20input%0A%20%20%20%20%20%20%20%20%2F%2F%20skip%20to%20array%20%3D%3E%20string%20step%2C%20utf8decode%20will%20do%20it.%0A%20%20%20%20%20%20%20%20result%20%3D%20out.utf8decode(result)%3B%0A%20%20%20%20%7D%0A%20%20%20%20else%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20no%20utf8%20transformation%2C%20do%20the%20array%20%3D%3E%20string%20step.%0A%20%20%20%20%20%20%20%20result%20%3D%20utils.transformTo(%22string%22%2C%20result)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if%20(!asUTF8%20%26%26%20!this.options.binary)%20%7B%0A%20%20%20%20%20%20%20%20result%20%3D%20utils.transformTo(%22string%22%2C%20out.utf8encode(result))%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20result%3B%0A%7D%3B%0A%2F**%0A%20*%20A%20simple%20object%20representing%20a%20file%20in%20the%20zip%20file.%0A%20*%20%40constructor%0A%20*%20%40param%20%7Bstring%7D%20name%20the%20name%20of%20the%20file%0A%20*%20%40param%20%7BString%7CArrayBuffer%7CUint8Array%7CBuffer%7D%20data%20the%20data%0A%20*%20%40param%20%7BObject%7D%20options%20the%20options%20of%20the%20file%0A%20*%2F%0Avar%20ZipObject%20%3D%20function(name%2C%20data%2C%20options)%20%7B%0A%20%20%20%20this.name%20%3D%20name%3B%0A%20%20%20%20this.dir%20%3D%20options.dir%3B%0A%20%20%20%20this.date%20%3D%20options.date%3B%0A%20%20%20%20this.comment%20%3D%20options.comment%3B%0A%20%20%20%20this.unixPermissions%20%3D%20options.unixPermissions%3B%0A%20%20%20%20this.dosPermissions%20%3D%20options.dosPermissions%3B%0A%0A%20%20%20%20this._data%20%3D%20data%3B%0A%20%20%20%20this.options%20%3D%20options%3B%0A%0A%20%20%20%20%2F*%0A%20%20%20%20%20*%20This%20object%20contains%20initial%20values%20for%20dir%20and%20date.%0A%20%20%20%20%20*%20With%20them%2C%20we%20can%20check%20if%20the%20user%20changed%20the%20deprecated%20metadata%20in%0A%20%20%20%20%20*%20%60ZipObject%23options%60%20or%20not.%0A%20%20%20%20%20*%2F%0A%20%20%20%20this._initialMetadata%20%3D%20%7B%0A%20%20%20%20%20%20dir%20%3A%20options.dir%2C%0A%20%20%20%20%20%20date%20%3A%20options.date%0A%20%20%20%20%7D%3B%0A%7D%3B%0A%0AZipObject.prototype%20%3D%20%7B%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Return%20the%20content%20as%20UTF8%20string.%0A%20%20%20%20%20*%20%40return%20%7Bstring%7D%20the%20UTF8%20string.%0A%20%20%20%20%20*%2F%0A%20%20%20%20asText%3A%20function()%20%7B%0A%20%20%20%20%20%20%20%20return%20dataToString.call(this%2C%20true)%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Returns%20the%20binary%20content.%0A%20%20%20%20%20*%20%40return%20%7Bstring%7D%20the%20content%20as%20binary.%0A%20%20%20%20%20*%2F%0A%20%20%20%20asBinary%3A%20function()%20%7B%0A%20%20%20%20%20%20%20%20return%20dataToString.call(this%2C%20false)%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Returns%20the%20content%20as%20a%20nodejs%20Buffer.%0A%20%20%20%20%20*%20%40return%20%7BBuffer%7D%20the%20content%20as%20a%20Buffer.%0A%20%20%20%20%20*%2F%0A%20%20%20%20asNodeBuffer%3A%20function()%20%7B%0A%20%20%20%20%20%20%20%20var%20result%20%3D%20getBinaryData(this)%3B%0A%20%20%20%20%20%20%20%20return%20utils.transformTo(%22nodebuffer%22%2C%20result)%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Returns%20the%20content%20as%20an%20Uint8Array.%0A%20%20%20%20%20*%20%40return%20%7BUint8Array%7D%20the%20content%20as%20an%20Uint8Array.%0A%20%20%20%20%20*%2F%0A%20%20%20%20asUint8Array%3A%20function()%20%7B%0A%20%20%20%20%20%20%20%20var%20result%20%3D%20getBinaryData(this)%3B%0A%20%20%20%20%20%20%20%20return%20utils.transformTo(%22uint8array%22%2C%20result)%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Returns%20the%20content%20as%20an%20ArrayBuffer.%0A%20%20%20%20%20*%20%40return%20%7BArrayBuffer%7D%20the%20content%20as%20an%20ArrayBufer.%0A%20%20%20%20%20*%2F%0A%20%20%20%20asArrayBuffer%3A%20function()%20%7B%0A%20%20%20%20%20%20%20%20return%20this.asUint8Array().buffer%3B%0A%20%20%20%20%7D%0A%7D%3B%0A%0A%2F**%0A%20*%20Transform%20an%20integer%20into%20a%20string%20in%20hexadecimal.%0A%20*%20%40private%0A%20*%20%40param%20%7Bnumber%7D%20dec%20the%20number%20to%20convert.%0A%20*%20%40param%20%7Bnumber%7D%20bytes%20the%20number%20of%20bytes%20to%20generate.%0A%20*%20%40returns%20%7Bstring%7D%20the%20result.%0A%20*%2F%0Avar%20decToHex%20%3D%20function(dec%2C%20bytes)%20%7B%0A%20%20%20%20var%20hex%20%3D%20%22%22%2C%0A%20%20%20%20%20%20%20%20i%3B%0A%20%20%20%20for%20(i%20%3D%200%3B%20i%20%3C%20bytes%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20hex%20%2B%3D%20String.fromCharCode(dec%20%26%200xff)%3B%0A%20%20%20%20%20%20%20%20dec%20%3D%20dec%20%3E%3E%3E%208%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20hex%3B%0A%7D%3B%0A%0A%2F**%0A%20*%20Transforms%20the%20(incomplete)%20options%20from%20the%20user%20into%20the%20complete%0A%20*%20set%20of%20options%20to%20create%20a%20file.%0A%20*%20%40private%0A%20*%20%40param%20%7BObject%7D%20o%20the%20options%20from%20the%20user.%0A%20*%20%40return%20%7BObject%7D%20the%20complete%20set%20of%20options.%0A%20*%2F%0Avar%20prepareFileAttrs%20%3D%20function(o)%20%7B%0A%20%20%20%20o%20%3D%20o%20%7C%7C%20%7B%7D%3B%0A%20%20%20%20if%20(o.base64%20%3D%3D%3D%20true%20%26%26%20(o.binary%20%3D%3D%3D%20null%20%7C%7C%20o.binary%20%3D%3D%3D%20undefined))%20%7B%0A%20%20%20%20%20%20%20%20o.binary%20%3D%20true%3B%0A%20%20%20%20%7D%0A%20%20%20%20o%20%3D%20utils.extend(o%2C%20defaults)%3B%0A%20%20%20%20o.date%20%3D%20o.date%20%7C%7C%20new%20Date()%3B%0A%20%20%20%20if%20(o.compression%20!%3D%3D%20null)%20o.compression%20%3D%20o.compression.toUpperCase()%3B%0A%0A%20%20%20%20return%20o%3B%0A%7D%3B%0A%0A%2F**%0A%20*%20Add%20a%20file%20in%20the%20current%20folder.%0A%20*%20%40private%0A%20*%20%40param%20%7Bstring%7D%20name%20the%20name%20of%20the%20file%0A%20*%20%40param%20%7BString%7CArrayBuffer%7CUint8Array%7CBuffer%7D%20data%20the%20data%20of%20the%20file%0A%20*%20%40param%20%7BObject%7D%20o%20the%20options%20of%20the%20file%0A%20*%20%40return%20%7BObject%7D%20the%20new%20file.%0A%20*%2F%0Avar%20fileAdd%20%3D%20function(name%2C%20data%2C%20o)%20%7B%0A%20%20%20%20%2F%2F%20be%20sure%20sub%20folders%20exist%0A%20%20%20%20var%20dataType%20%3D%20utils.getTypeOf(data)%2C%0A%20%20%20%20%20%20%20%20parent%3B%0A%0A%20%20%20%20o%20%3D%20prepareFileAttrs(o)%3B%0A%0A%20%20%20%20if%20(typeof%20o.unixPermissions%20%3D%3D%3D%20%22string%22)%20%7B%0A%20%20%20%20%20%20%20%20o.unixPermissions%20%3D%20parseInt(o.unixPermissions%2C%208)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20UNX_IFDIR%20%200040000%20see%20zipinfo.c%0A%20%20%20%20if%20(o.unixPermissions%20%26%26%20(o.unixPermissions%20%26%200x4000))%20%7B%0A%20%20%20%20%20%20%20%20o.dir%20%3D%20true%3B%0A%20%20%20%20%7D%0A%20%20%20%20%2F%2F%20Bit%204%20%20%20%20Directory%0A%20%20%20%20if%20(o.dosPermissions%20%26%26%20(o.dosPermissions%20%26%200x0010))%20%7B%0A%20%20%20%20%20%20%20%20o.dir%20%3D%20true%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if%20(o.dir)%20%7B%0A%20%20%20%20%20%20%20%20name%20%3D%20forceTrailingSlash(name)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if%20(o.createFolders%20%26%26%20(parent%20%3D%20parentFolder(name)))%20%7B%0A%20%20%20%20%20%20%20%20folderAdd.call(this%2C%20parent%2C%20true)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if%20(o.dir%20%7C%7C%20data%20%3D%3D%3D%20null%20%7C%7C%20typeof%20data%20%3D%3D%3D%20%22undefined%22)%20%7B%0A%20%20%20%20%20%20%20%20o.base64%20%3D%20false%3B%0A%20%20%20%20%20%20%20%20o.binary%20%3D%20false%3B%0A%20%20%20%20%20%20%20%20data%20%3D%20null%3B%0A%20%20%20%20%20%20%20%20dataType%20%3D%20null%3B%0A%20%20%20%20%7D%0A%20%20%20%20else%20if%20(dataType%20%3D%3D%3D%20%22string%22)%20%7B%0A%20%20%20%20%20%20%20%20if%20(o.binary%20%26%26%20!o.base64)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20optimizedBinaryString%20%3D%3D%20true%20means%20that%20the%20file%20has%20already%20been%20filtered%20with%20a%200xFF%20mask%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(o.optimizedBinaryString%20!%3D%3D%20true)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20this%20is%20a%20string%2C%20not%20in%20a%20base64%20format.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Be%20sure%20that%20this%20is%20a%20correct%20%22binary%20string%22%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20data%20%3D%20utils.string2binary(data)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20else%20%7B%20%2F%2F%20arraybuffer%2C%20uint8array%2C%20...%0A%20%20%20%20%20%20%20%20o.base64%20%3D%20false%3B%0A%20%20%20%20%20%20%20%20o.binary%20%3D%20true%3B%0A%0A%20%20%20%20%20%20%20%20if%20(!dataType%20%26%26%20!(data%20instanceof%20CompressedObject))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20Error(%22The%20data%20of%20'%22%20%2B%20name%20%2B%20%22'%20is%20in%20an%20unsupported%20format%20!%22)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20special%20case%20%3A%20it's%20way%20easier%20to%20work%20with%20Uint8Array%20than%20with%20ArrayBuffer%0A%20%20%20%20%20%20%20%20if%20(dataType%20%3D%3D%3D%20%22arraybuffer%22)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20data%20%3D%20utils.transformTo(%22uint8array%22%2C%20data)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20var%20object%20%3D%20new%20ZipObject(name%2C%20data%2C%20o)%3B%0A%20%20%20%20this.files%5Bname%5D%20%3D%20object%3B%0A%20%20%20%20return%20object%3B%0A%7D%3B%0A%0A%2F**%0A%20*%20Find%20the%20parent%20folder%20of%20the%20path.%0A%20*%20%40private%0A%20*%20%40param%20%7Bstring%7D%20path%20the%20path%20to%20use%0A%20*%20%40return%20%7Bstring%7D%20the%20parent%20folder%2C%20or%20%22%22%0A%20*%2F%0Avar%20parentFolder%20%3D%20function%20(path)%20%7B%0A%20%20%20%20if%20(path.slice(-1)%20%3D%3D%20'%2F')%20%7B%0A%20%20%20%20%20%20%20%20path%20%3D%20path.substring(0%2C%20path.length%20-%201)%3B%0A%20%20%20%20%7D%0A%20%20%20%20var%20lastSlash%20%3D%20path.lastIndexOf('%2F')%3B%0A%20%20%20%20return%20(lastSlash%20%3E%200)%20%3F%20path.substring(0%2C%20lastSlash)%20%3A%20%22%22%3B%0A%7D%3B%0A%0A%0A%2F**%0A%20*%20Returns%20the%20path%20with%20a%20slash%20at%20the%20end.%0A%20*%20%40private%0A%20*%20%40param%20%7BString%7D%20path%20the%20path%20to%20check.%0A%20*%20%40return%20%7BString%7D%20the%20path%20with%20a%20trailing%20slash.%0A%20*%2F%0Avar%20forceTrailingSlash%20%3D%20function(path)%20%7B%0A%20%20%20%20%2F%2F%20Check%20the%20name%20ends%20with%20a%20%2F%0A%20%20%20%20if%20(path.slice(-1)%20!%3D%20%22%2F%22)%20%7B%0A%20%20%20%20%20%20%20%20path%20%2B%3D%20%22%2F%22%3B%20%2F%2F%20IE%20doesn't%20like%20substr(-1)%0A%20%20%20%20%7D%0A%20%20%20%20return%20path%3B%0A%7D%3B%0A%2F**%0A%20*%20Add%20a%20(sub)%20folder%20in%20the%20current%20folder.%0A%20*%20%40private%0A%20*%20%40param%20%7Bstring%7D%20name%20the%20folder's%20name%0A%20*%20%40param%20%7Bboolean%3D%7D%20%5BcreateFolders%5D%20If%20true%2C%20automatically%20create%20sub%0A%20*%20%20folders.%20Defaults%20to%20false.%0A%20*%20%40return%20%7BObject%7D%20the%20new%20folder.%0A%20*%2F%0Avar%20folderAdd%20%3D%20function(name%2C%20createFolders)%20%7B%0A%20%20%20%20createFolders%20%3D%20(typeof%20createFolders%20!%3D%3D%20'undefined')%20%3F%20createFolders%20%3A%20false%3B%0A%0A%20%20%20%20name%20%3D%20forceTrailingSlash(name)%3B%0A%0A%20%20%20%20%2F%2F%20Does%20this%20folder%20already%20exist%3F%0A%20%20%20%20if%20(!this.files%5Bname%5D)%20%7B%0A%20%20%20%20%20%20%20%20fileAdd.call(this%2C%20name%2C%20null%2C%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20dir%3A%20true%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20createFolders%3A%20createFolders%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20this.files%5Bname%5D%3B%0A%7D%3B%0A%0A%2F**%0A%20*%20Generate%20a%20JSZip.CompressedObject%20for%20a%20given%20zipOject.%0A%20*%20%40param%20%7BZipObject%7D%20file%20the%20object%20to%20read.%0A%20*%20%40param%20%7BJSZip.compression%7D%20compression%20the%20compression%20to%20use.%0A%20*%20%40param%20%7BObject%7D%20compressionOptions%20the%20options%20to%20use%20when%20compressing.%0A%20*%20%40return%20%7BJSZip.CompressedObject%7D%20the%20compressed%20result.%0A%20*%2F%0Avar%20generateCompressedObjectFrom%20%3D%20function(file%2C%20compression%2C%20compressionOptions)%20%7B%0A%20%20%20%20var%20result%20%3D%20new%20CompressedObject()%2C%0A%20%20%20%20%20%20%20%20content%3B%0A%0A%20%20%20%20%2F%2F%20the%20data%20has%20not%20been%20decompressed%2C%20we%20might%20reuse%20things%20!%0A%20%20%20%20if%20(file._data%20instanceof%20CompressedObject)%20%7B%0A%20%20%20%20%20%20%20%20result.uncompressedSize%20%3D%20file._data.uncompressedSize%3B%0A%20%20%20%20%20%20%20%20result.crc32%20%3D%20file._data.crc32%3B%0A%0A%20%20%20%20%20%20%20%20if%20(result.uncompressedSize%20%3D%3D%3D%200%20%7C%7C%20file.dir)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20compression%20%3D%20compressions%5B'STORE'%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20result.compressedContent%20%3D%20%22%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20result.crc32%20%3D%200%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20else%20if%20(file._data.compressionMethod%20%3D%3D%3D%20compression.magic)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20result.compressedContent%20%3D%20file._data.getCompressedContent()%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20content%20%3D%20file._data.getContent()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20need%20to%20decompress%20%2F%20recompress%0A%20%20%20%20%20%20%20%20%20%20%20%20result.compressedContent%20%3D%20compression.compress(utils.transformTo(compression.compressInputType%2C%20content)%2C%20compressionOptions)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20else%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20have%20uncompressed%20data%0A%20%20%20%20%20%20%20%20content%20%3D%20getBinaryData(file)%3B%0A%20%20%20%20%20%20%20%20if%20(!content%20%7C%7C%20content.length%20%3D%3D%3D%200%20%7C%7C%20file.dir)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20compression%20%3D%20compressions%5B'STORE'%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20content%20%3D%20%22%22%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20result.uncompressedSize%20%3D%20content.length%3B%0A%20%20%20%20%20%20%20%20result.crc32%20%3D%20crc32(content)%3B%0A%20%20%20%20%20%20%20%20result.compressedContent%20%3D%20compression.compress(utils.transformTo(compression.compressInputType%2C%20content)%2C%20compressionOptions)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20result.compressedSize%20%3D%20result.compressedContent.length%3B%0A%20%20%20%20result.compressionMethod%20%3D%20compression.magic%3B%0A%0A%20%20%20%20return%20result%3B%0A%7D%3B%0A%0A%0A%0A%0A%2F**%0A%20*%20Generate%20the%20UNIX%20part%20of%20the%20external%20file%20attributes.%0A%20*%20%40param%20%7BObject%7D%20unixPermissions%20the%20unix%20permissions%20or%20null.%0A%20*%20%40param%20%7BBoolean%7D%20isDir%20true%20if%20the%20entry%20is%20a%20directory%2C%20false%20otherwise.%0A%20*%20%40return%20%7BNumber%7D%20a%2032%20bit%20integer.%0A%20*%0A%20*%20adapted%20from%20http%3A%2F%2Funix.stackexchange.com%2Fquestions%2F14705%2Fthe-zip-formats-external-file-attribute%20%3A%0A%20*%0A%20*%20TTTTsstrwxrwxrwx0000000000ADVSHR%0A%20*%20%5E%5E%5E%5E____________________________%20file%20type%2C%20see%20zipinfo.c%20(UNX_*)%0A%20*%20%20%20%20%20%5E%5E%5E_________________________%20setuid%2C%20setgid%2C%20sticky%0A%20*%20%20%20%20%20%20%20%20%5E%5E%5E%5E%5E%5E%5E%5E%5E________________%20permissions%0A%20*%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5E%5E%5E%5E%5E%5E%5E%5E%5E%5E______%20not%20used%20%3F%0A%20*%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5E%5E%5E%5E%5E%5E%20DOS%20attribute%20bits%20%3A%20Archive%2C%20Directory%2C%20Volume%20label%2C%20System%20file%2C%20Hidden%2C%20Read%20only%0A%20*%2F%0Avar%20generateUnixExternalFileAttr%20%3D%20function%20(unixPermissions%2C%20isDir)%20%7B%0A%0A%20%20%20%20var%20result%20%3D%20unixPermissions%3B%0A%20%20%20%20if%20(!unixPermissions)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20I%20can't%20use%20octal%20values%20in%20strict%20mode%2C%20hence%20the%20hexa.%0A%20%20%20%20%20%20%20%20%2F%2F%20%20040775%20%3D%3E%200x41fd%0A%20%20%20%20%20%20%20%20%2F%2F%200100664%20%3D%3E%200x81b4%0A%20%20%20%20%20%20%20%20result%20%3D%20isDir%20%3F%200x41fd%20%3A%200x81b4%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20return%20(result%20%26%200xFFFF)%20%3C%3C%2016%3B%0A%7D%3B%0A%0A%2F**%0A%20*%20Generate%20the%20DOS%20part%20of%20the%20external%20file%20attributes.%0A%20*%20%40param%20%7BObject%7D%20dosPermissions%20the%20dos%20permissions%20or%20null.%0A%20*%20%40param%20%7BBoolean%7D%20isDir%20true%20if%20the%20entry%20is%20a%20directory%2C%20false%20otherwise.%0A%20*%20%40return%20%7BNumber%7D%20a%2032%20bit%20integer.%0A%20*%0A%20*%20Bit%200%20%20%20%20%20Read-Only%0A%20*%20Bit%201%20%20%20%20%20Hidden%0A%20*%20Bit%202%20%20%20%20%20System%0A%20*%20Bit%203%20%20%20%20%20Volume%20Label%0A%20*%20Bit%204%20%20%20%20%20Directory%0A%20*%20Bit%205%20%20%20%20%20Archive%0A%20*%2F%0Avar%20generateDosExternalFileAttr%20%3D%20function%20(dosPermissions%2C%20isDir)%20%7B%0A%0A%20%20%20%20%2F%2F%20the%20dir%20flag%20is%20already%20set%20for%20compatibility%0A%0A%20%20%20%20return%20(dosPermissions%20%7C%7C%200)%20%20%26%200x3F%3B%0A%7D%3B%0A%0A%2F**%0A%20*%20Generate%20the%20various%20parts%20used%20in%20the%20construction%20of%20the%20final%20zip%20file.%0A%20*%20%40param%20%7Bstring%7D%20name%20the%20file%20name.%0A%20*%20%40param%20%7BZipObject%7D%20file%20the%20file%20content.%0A%20*%20%40param%20%7BJSZip.CompressedObject%7D%20compressedObject%20the%20compressed%20object.%0A%20*%20%40param%20%7Bnumber%7D%20offset%20the%20current%20offset%20from%20the%20start%20of%20the%20zip%20file.%0A%20*%20%40param%20%7BString%7D%20platform%20let's%20pretend%20we%20are%20this%20platform%20(change%20platform%20dependents%20fields)%0A%20*%20%40param%20%7BFunction%7D%20encodeFileName%20the%20function%20to%20encode%20the%20file%20name%20%2F%20comment.%0A%20*%20%40return%20%7Bobject%7D%20the%20zip%20parts.%0A%20*%2F%0Avar%20generateZipParts%20%3D%20function(name%2C%20file%2C%20compressedObject%2C%20offset%2C%20platform%2C%20encodeFileName)%20%7B%0A%20%20%20%20var%20data%20%3D%20compressedObject.compressedContent%2C%0A%20%20%20%20%20%20%20%20useCustomEncoding%20%3D%20encodeFileName%20!%3D%3D%20utf8.utf8encode%2C%0A%20%20%20%20%20%20%20%20encodedFileName%20%3D%20utils.transformTo(%22string%22%2C%20encodeFileName(file.name))%2C%0A%20%20%20%20%20%20%20%20utfEncodedFileName%20%3D%20utils.transformTo(%22string%22%2C%20utf8.utf8encode(file.name))%2C%0A%20%20%20%20%20%20%20%20comment%20%3D%20file.comment%20%7C%7C%20%22%22%2C%0A%20%20%20%20%20%20%20%20encodedComment%20%3D%20utils.transformTo(%22string%22%2C%20encodeFileName(comment))%2C%0A%20%20%20%20%20%20%20%20utfEncodedComment%20%3D%20utils.transformTo(%22string%22%2C%20utf8.utf8encode(comment))%2C%0A%20%20%20%20%20%20%20%20useUTF8ForFileName%20%3D%20utfEncodedFileName.length%20!%3D%3D%20file.name.length%2C%0A%20%20%20%20%20%20%20%20useUTF8ForComment%20%3D%20utfEncodedComment.length%20!%3D%3D%20comment.length%2C%0A%20%20%20%20%20%20%20%20o%20%3D%20file.options%2C%0A%20%20%20%20%20%20%20%20dosTime%2C%0A%20%20%20%20%20%20%20%20dosDate%2C%0A%20%20%20%20%20%20%20%20extraFields%20%3D%20%22%22%2C%0A%20%20%20%20%20%20%20%20unicodePathExtraField%20%3D%20%22%22%2C%0A%20%20%20%20%20%20%20%20unicodeCommentExtraField%20%3D%20%22%22%2C%0A%20%20%20%20%20%20%20%20dir%2C%20date%3B%0A%0A%0A%20%20%20%20%2F%2F%20handle%20the%20deprecated%20options.dir%0A%20%20%20%20if%20(file._initialMetadata.dir%20!%3D%3D%20file.dir)%20%7B%0A%20%20%20%20%20%20%20%20dir%20%3D%20file.dir%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20dir%20%3D%20o.dir%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20handle%20the%20deprecated%20options.date%0A%20%20%20%20if(file._initialMetadata.date%20!%3D%3D%20file.date)%20%7B%0A%20%20%20%20%20%20%20%20date%20%3D%20file.date%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20date%20%3D%20o.date%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20var%20extFileAttr%20%3D%200%3B%0A%20%20%20%20var%20versionMadeBy%20%3D%200%3B%0A%20%20%20%20if%20(dir)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20dos%20or%20unix%2C%20we%20set%20the%20dos%20dir%20flag%0A%20%20%20%20%20%20%20%20extFileAttr%20%7C%3D%200x00010%3B%0A%20%20%20%20%7D%0A%20%20%20%20if(platform%20%3D%3D%3D%20%22UNIX%22)%20%7B%0A%20%20%20%20%20%20%20%20versionMadeBy%20%3D%200x031E%3B%20%2F%2F%20UNIX%2C%20version%203.0%0A%20%20%20%20%20%20%20%20extFileAttr%20%7C%3D%20generateUnixExternalFileAttr(file.unixPermissions%2C%20dir)%3B%0A%20%20%20%20%7D%20else%20%7B%20%2F%2F%20DOS%20or%20other%2C%20fallback%20to%20DOS%0A%20%20%20%20%20%20%20%20versionMadeBy%20%3D%200x0014%3B%20%2F%2F%20DOS%2C%20version%202.0%0A%20%20%20%20%20%20%20%20extFileAttr%20%7C%3D%20generateDosExternalFileAttr(file.dosPermissions%2C%20dir)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20date%0A%20%20%20%20%2F%2F%20%40see%20http%3A%2F%2Fwww.delorie.com%2Fdjgpp%2Fdoc%2Frbinter%2Fit%2F52%2F13.html%0A%20%20%20%20%2F%2F%20%40see%20http%3A%2F%2Fwww.delorie.com%2Fdjgpp%2Fdoc%2Frbinter%2Fit%2F65%2F16.html%0A%20%20%20%20%2F%2F%20%40see%20http%3A%2F%2Fwww.delorie.com%2Fdjgpp%2Fdoc%2Frbinter%2Fit%2F66%2F16.html%0A%0A%20%20%20%20dosTime%20%3D%20date.getHours()%3B%0A%20%20%20%20dosTime%20%3D%20dosTime%20%3C%3C%206%3B%0A%20%20%20%20dosTime%20%3D%20dosTime%20%7C%20date.getMinutes()%3B%0A%20%20%20%20dosTime%20%3D%20dosTime%20%3C%3C%205%3B%0A%20%20%20%20dosTime%20%3D%20dosTime%20%7C%20date.getSeconds()%20%2F%202%3B%0A%0A%20%20%20%20dosDate%20%3D%20date.getFullYear()%20-%201980%3B%0A%20%20%20%20dosDate%20%3D%20dosDate%20%3C%3C%204%3B%0A%20%20%20%20dosDate%20%3D%20dosDate%20%7C%20(date.getMonth()%20%2B%201)%3B%0A%20%20%20%20dosDate%20%3D%20dosDate%20%3C%3C%205%3B%0A%20%20%20%20dosDate%20%3D%20dosDate%20%7C%20date.getDate()%3B%0A%0A%20%20%20%20if%20(useUTF8ForFileName)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20set%20the%20unicode%20path%20extra%20field.%20unzip%20needs%20at%20least%20one%20extra%0A%20%20%20%20%20%20%20%20%2F%2F%20field%20to%20correctly%20handle%20unicode%20path%2C%20so%20using%20the%20path%20is%20as%20good%0A%20%20%20%20%20%20%20%20%2F%2F%20as%20any%20other%20information.%20This%20could%20improve%20the%20situation%20with%0A%20%20%20%20%20%20%20%20%2F%2F%20other%20archive%20managers%20too.%0A%20%20%20%20%20%20%20%20%2F%2F%20This%20field%20is%20usually%20used%20without%20the%20utf8%20flag%2C%20with%20a%20non%0A%20%20%20%20%20%20%20%20%2F%2F%20unicode%20path%20in%20the%20header%20(winrar%2C%20winzip).%20This%20helps%20(a%20bit)%0A%20%20%20%20%20%20%20%20%2F%2F%20with%20the%20messy%20Windows'%20default%20compressed%20folders%20feature%20but%0A%20%20%20%20%20%20%20%20%2F%2F%20breaks%20on%20p7zip%20which%20doesn't%20seek%20the%20unicode%20path%20extra%20field.%0A%20%20%20%20%20%20%20%20%2F%2F%20So%20for%20now%2C%20UTF-8%20everywhere%20!%0A%20%20%20%20%20%20%20%20unicodePathExtraField%20%3D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Version%0A%20%20%20%20%20%20%20%20%20%20%20%20decToHex(1%2C%201)%20%2B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20NameCRC32%0A%20%20%20%20%20%20%20%20%20%20%20%20decToHex(crc32(encodedFileName)%2C%204)%20%2B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20UnicodeName%0A%20%20%20%20%20%20%20%20%20%20%20%20utfEncodedFileName%3B%0A%0A%20%20%20%20%20%20%20%20extraFields%20%2B%3D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Info-ZIP%20Unicode%20Path%20Extra%20Field%0A%20%20%20%20%20%20%20%20%20%20%20%20%22%5Cx75%5Cx70%22%20%2B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20size%0A%20%20%20%20%20%20%20%20%20%20%20%20decToHex(unicodePathExtraField.length%2C%202)%20%2B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20content%0A%20%20%20%20%20%20%20%20%20%20%20%20unicodePathExtraField%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if(useUTF8ForComment)%20%7B%0A%0A%20%20%20%20%20%20%20%20unicodeCommentExtraField%20%3D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Version%0A%20%20%20%20%20%20%20%20%20%20%20%20decToHex(1%2C%201)%20%2B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20CommentCRC32%0A%20%20%20%20%20%20%20%20%20%20%20%20decToHex(this.crc32(encodedComment)%2C%204)%20%2B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20UnicodeName%0A%20%20%20%20%20%20%20%20%20%20%20%20utfEncodedComment%3B%0A%0A%20%20%20%20%20%20%20%20extraFields%20%2B%3D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Info-ZIP%20Unicode%20Path%20Extra%20Field%0A%20%20%20%20%20%20%20%20%20%20%20%20%22%5Cx75%5Cx63%22%20%2B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20size%0A%20%20%20%20%20%20%20%20%20%20%20%20decToHex(unicodeCommentExtraField.length%2C%202)%20%2B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20content%0A%20%20%20%20%20%20%20%20%20%20%20%20unicodeCommentExtraField%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20var%20header%20%3D%20%22%22%3B%0A%0A%20%20%20%20%2F%2F%20version%20needed%20to%20extract%0A%20%20%20%20header%20%2B%3D%20%22%5Cx0A%5Cx00%22%3B%0A%20%20%20%20%2F%2F%20general%20purpose%20bit%20flag%0A%20%20%20%20%2F%2F%20set%20bit%2011%20if%20utf8%0A%20%20%20%20header%20%2B%3D%20!useCustomEncoding%20%26%26%20(useUTF8ForFileName%20%7C%7C%20useUTF8ForComment)%20%3F%20%22%5Cx00%5Cx08%22%20%3A%20%22%5Cx00%5Cx00%22%3B%0A%20%20%20%20%2F%2F%20compression%20method%0A%20%20%20%20header%20%2B%3D%20compressedObject.compressionMethod%3B%0A%20%20%20%20%2F%2F%20last%20mod%20file%20time%0A%20%20%20%20header%20%2B%3D%20decToHex(dosTime%2C%202)%3B%0A%20%20%20%20%2F%2F%20last%20mod%20file%20date%0A%20%20%20%20header%20%2B%3D%20decToHex(dosDate%2C%202)%3B%0A%20%20%20%20%2F%2F%20crc-32%0A%20%20%20%20header%20%2B%3D%20decToHex(compressedObject.crc32%2C%204)%3B%0A%20%20%20%20%2F%2F%20compressed%20size%0A%20%20%20%20header%20%2B%3D%20decToHex(compressedObject.compressedSize%2C%204)%3B%0A%20%20%20%20%2F%2F%20uncompressed%20size%0A%20%20%20%20header%20%2B%3D%20decToHex(compressedObject.uncompressedSize%2C%204)%3B%0A%20%20%20%20%2F%2F%20file%20name%20length%0A%20%20%20%20header%20%2B%3D%20decToHex(encodedFileName.length%2C%202)%3B%0A%20%20%20%20%2F%2F%20extra%20field%20length%0A%20%20%20%20header%20%2B%3D%20decToHex(extraFields.length%2C%202)%3B%0A%0A%0A%20%20%20%20var%20fileRecord%20%3D%20signature.LOCAL_FILE_HEADER%20%2B%20header%20%2B%20encodedFileName%20%2B%20extraFields%3B%0A%0A%20%20%20%20var%20dirRecord%20%3D%20signature.CENTRAL_FILE_HEADER%20%2B%0A%20%20%20%20%2F%2F%20version%20made%20by%20(00%3A%20DOS)%0A%20%20%20%20decToHex(versionMadeBy%2C%202)%20%2B%0A%20%20%20%20%2F%2F%20file%20header%20(common%20to%20file%20and%20central%20directory)%0A%20%20%20%20header%20%2B%0A%20%20%20%20%2F%2F%20file%20comment%20length%0A%20%20%20%20decToHex(encodedComment.length%2C%202)%20%2B%0A%20%20%20%20%2F%2F%20disk%20number%20start%0A%20%20%20%20%22%5Cx00%5Cx00%22%20%2B%0A%20%20%20%20%2F%2F%20internal%20file%20attributes%20TODO%0A%20%20%20%20%22%5Cx00%5Cx00%22%20%2B%0A%20%20%20%20%2F%2F%20external%20file%20attributes%0A%20%20%20%20decToHex(extFileAttr%2C%204)%20%2B%0A%20%20%20%20%2F%2F%20relative%20offset%20of%20local%20header%0A%20%20%20%20decToHex(offset%2C%204)%20%2B%0A%20%20%20%20%2F%2F%20file%20name%0A%20%20%20%20encodedFileName%20%2B%0A%20%20%20%20%2F%2F%20extra%20field%0A%20%20%20%20extraFields%20%2B%0A%20%20%20%20%2F%2F%20file%20comment%0A%20%20%20%20encodedComment%3B%0A%0A%20%20%20%20return%20%7B%0A%20%20%20%20%20%20%20%20fileRecord%3A%20fileRecord%2C%0A%20%20%20%20%20%20%20%20dirRecord%3A%20dirRecord%2C%0A%20%20%20%20%20%20%20%20compressedObject%3A%20compressedObject%0A%20%20%20%20%7D%3B%0A%7D%3B%0A%0A%0A%2F%2F%20return%20the%20actual%20prototype%20of%20JSZip%0Avar%20out%20%3D%20%7B%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Read%20an%20existing%20zip%20and%20merge%20the%20data%20in%20the%20current%20JSZip%20object.%0A%20%20%20%20%20*%20The%20implementation%20is%20in%20jszip-load.js%2C%20don't%20forget%20to%20include%20it.%0A%20%20%20%20%20*%20%40param%20%7BString%7CArrayBuffer%7CUint8Array%7CBuffer%7D%20stream%20%20The%20stream%20to%20load%0A%20%20%20%20%20*%20%40param%20%7BObject%7D%20options%20Options%20for%20loading%20the%20stream.%0A%20%20%20%20%20*%20%20options.base64%20%3A%20is%20the%20stream%20in%20base64%20%3F%20default%20%3A%20false%0A%20%20%20%20%20*%20%40return%20%7BJSZip%7D%20the%20current%20JSZip%20object%0A%20%20%20%20%20*%2F%0A%20%20%20%20load%3A%20function(stream%2C%20options)%20%7B%0A%20%20%20%20%20%20%20%20throw%20new%20Error(%22Load%20method%20is%20not%20defined.%20Is%20the%20file%20jszip-load.js%20included%20%3F%22)%3B%0A%20%20%20%20%7D%2C%0A%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Filter%20nested%20files%2Ffolders%20with%20the%20specified%20function.%0A%20%20%20%20%20*%20%40param%20%7BFunction%7D%20search%20the%20predicate%20to%20use%20%3A%0A%20%20%20%20%20*%20function%20(relativePath%2C%20file)%20%7B...%7D%0A%20%20%20%20%20*%20It%20takes%202%20arguments%20%3A%20the%20relative%20path%20and%20the%20file.%0A%20%20%20%20%20*%20%40return%20%7BArray%7D%20An%20array%20of%20matching%20elements.%0A%20%20%20%20%20*%2F%0A%20%20%20%20filter%3A%20function(search)%20%7B%0A%20%20%20%20%20%20%20%20var%20result%20%3D%20%5B%5D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20filename%2C%20relativePath%2C%20file%2C%20fileClone%3B%0A%20%20%20%20%20%20%20%20for%20(filename%20in%20this.files)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(!this.files.hasOwnProperty(filename))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20continue%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20file%20%3D%20this.files%5Bfilename%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20return%20a%20new%20object%2C%20don't%20let%20the%20user%20mess%20with%20our%20internal%20objects%20%3A)%0A%20%20%20%20%20%20%20%20%20%20%20%20fileClone%20%3D%20new%20ZipObject(file.name%2C%20file._data%2C%20utils.extend(file.options))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20relativePath%20%3D%20filename.slice(this.root.length%2C%20filename.length)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(filename.slice(0%2C%20this.root.length)%20%3D%3D%3D%20this.root%20%26%26%20%2F%2F%20the%20file%20is%20in%20the%20current%20root%0A%20%20%20%20%20%20%20%20%20%20%20%20search(relativePath%2C%20fileClone))%20%7B%20%2F%2F%20and%20the%20file%20matches%20the%20function%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20result.push(fileClone)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20result%3B%0A%20%20%20%20%7D%2C%0A%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Add%20a%20file%20to%20the%20zip%20file%2C%20or%20search%20a%20file.%0A%20%20%20%20%20*%20%40param%20%20%20%7Bstring%7CRegExp%7D%20name%20The%20name%20of%20the%20file%20to%20add%20(if%20data%20is%20defined)%2C%0A%20%20%20%20%20*%20the%20name%20of%20the%20file%20to%20find%20(if%20no%20data)%20or%20a%20regex%20to%20match%20files.%0A%20%20%20%20%20*%20%40param%20%20%20%7BString%7CArrayBuffer%7CUint8Array%7CBuffer%7D%20data%20%20The%20file%20data%2C%20either%20raw%20or%20base64%20encoded%0A%20%20%20%20%20*%20%40param%20%20%20%7BObject%7D%20o%20%20%20%20%20File%20options%0A%20%20%20%20%20*%20%40return%20%20%7BJSZip%7CObject%7CArray%7D%20this%20JSZip%20object%20(when%20adding%20a%20file)%2C%0A%20%20%20%20%20*%20a%20file%20(when%20searching%20by%20string)%20or%20an%20array%20of%20files%20(when%20searching%20by%20regex).%0A%20%20%20%20%20*%2F%0A%20%20%20%20file%3A%20function(name%2C%20data%2C%20o)%20%7B%0A%20%20%20%20%20%20%20%20if%20(arguments.length%20%3D%3D%3D%201)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(utils.isRegExp(name))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20var%20regexp%20%3D%20name%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20this.filter(function(relativePath%2C%20file)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20!file.dir%20%26%26%20regexp.test(relativePath)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20else%20%7B%20%2F%2F%20text%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20this.filter(function(relativePath%2C%20file)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20!file.dir%20%26%26%20relativePath%20%3D%3D%3D%20name%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D)%5B0%5D%20%7C%7C%20null%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20else%20%7B%20%2F%2F%20more%20than%20one%20argument%20%3A%20we%20have%20data%20!%0A%20%20%20%20%20%20%20%20%20%20%20%20name%20%3D%20this.root%20%2B%20name%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20fileAdd.call(this%2C%20name%2C%20data%2C%20o)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20this%3B%0A%20%20%20%20%7D%2C%0A%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Add%20a%20directory%20to%20the%20zip%20file%2C%20or%20search.%0A%20%20%20%20%20*%20%40param%20%20%20%7BString%7CRegExp%7D%20arg%20The%20name%20of%20the%20directory%20to%20add%2C%20or%20a%20regex%20to%20search%20folders.%0A%20%20%20%20%20*%20%40return%20%20%7BJSZip%7D%20an%20object%20with%20the%20new%20directory%20as%20the%20root%2C%20or%20an%20array%20containing%20matching%20folders.%0A%20%20%20%20%20*%2F%0A%20%20%20%20folder%3A%20function(arg)%20%7B%0A%20%20%20%20%20%20%20%20if%20(!arg)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20this%3B%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20if%20(utils.isRegExp(arg))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20this.filter(function(relativePath%2C%20file)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20file.dir%20%26%26%20arg.test(relativePath)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20else%2C%20name%20is%20a%20new%20folder%0A%20%20%20%20%20%20%20%20var%20name%20%3D%20this.root%20%2B%20arg%3B%0A%20%20%20%20%20%20%20%20var%20newFolder%20%3D%20folderAdd.call(this%2C%20name)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Allow%20chaining%20by%20returning%20a%20new%20object%20with%20this%20folder%20as%20the%20root%0A%20%20%20%20%20%20%20%20var%20ret%20%3D%20this.clone()%3B%0A%20%20%20%20%20%20%20%20ret.root%20%3D%20newFolder.name%3B%0A%20%20%20%20%20%20%20%20return%20ret%3B%0A%20%20%20%20%7D%2C%0A%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Delete%20a%20file%2C%20or%20a%20directory%20and%20all%20sub-files%2C%20from%20the%20zip%0A%20%20%20%20%20*%20%40param%20%7Bstring%7D%20name%20the%20name%20of%20the%20file%20to%20delete%0A%20%20%20%20%20*%20%40return%20%7BJSZip%7D%20this%20JSZip%20object%0A%20%20%20%20%20*%2F%0A%20%20%20%20remove%3A%20function(name)%20%7B%0A%20%20%20%20%20%20%20%20name%20%3D%20this.root%20%2B%20name%3B%0A%20%20%20%20%20%20%20%20var%20file%20%3D%20this.files%5Bname%5D%3B%0A%20%20%20%20%20%20%20%20if%20(!file)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Look%20for%20any%20folders%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(name.slice(-1)%20!%3D%20%22%2F%22)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20name%20%2B%3D%20%22%2F%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20file%20%3D%20this.files%5Bname%5D%3B%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20if%20(file%20%26%26%20!file.dir)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20file%0A%20%20%20%20%20%20%20%20%20%20%20%20delete%20this.files%5Bname%5D%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20maybe%20a%20folder%2C%20delete%20recursively%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20kids%20%3D%20this.filter(function(relativePath%2C%20file)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20file.name.slice(0%2C%20name.length)%20%3D%3D%3D%20name%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20for%20(var%20i%20%3D%200%3B%20i%20%3C%20kids.length%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20delete%20this.files%5Bkids%5Bi%5D.name%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20return%20this%3B%0A%20%20%20%20%7D%2C%0A%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Generate%20the%20complete%20zip%20file%0A%20%20%20%20%20*%20%40param%20%7BObject%7D%20options%20the%20options%20to%20generate%20the%20zip%20file%20%3A%0A%20%20%20%20%20*%20-%20base64%2C%20(deprecated%2C%20use%20type%20instead)%20true%20to%20generate%20base64.%0A%20%20%20%20%20*%20-%20compression%2C%20%22STORE%22%20by%20default.%0A%20%20%20%20%20*%20-%20type%2C%20%22base64%22%20by%20default.%20Values%20are%20%3A%20string%2C%20base64%2C%20uint8array%2C%20arraybuffer%2C%20blob.%0A%20%20%20%20%20*%20%40return%20%7BString%7CUint8Array%7CArrayBuffer%7CBuffer%7CBlob%7D%20the%20zip%20file%0A%20%20%20%20%20*%2F%0A%20%20%20%20generate%3A%20function(options)%20%7B%0A%20%20%20%20%20%20%20%20options%20%3D%20utils.extend(options%20%7C%7C%20%7B%7D%2C%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20base64%3A%20true%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20compression%3A%20%22STORE%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20compressionOptions%20%3A%20null%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20type%3A%20%22base64%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20platform%3A%20%22DOS%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20comment%3A%20null%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20mimeType%3A%20'application%2Fzip'%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20encodeFileName%3A%20utf8.utf8encode%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%0A%20%20%20%20%20%20%20%20utils.checkSupport(options.type)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20accept%20nodejs%20%60process.platform%60%0A%20%20%20%20%20%20%20%20if(%0A%20%20%20%20%20%20%20%20%20%20options.platform%20%3D%3D%3D%20'darwin'%20%7C%7C%0A%20%20%20%20%20%20%20%20%20%20options.platform%20%3D%3D%3D%20'freebsd'%20%7C%7C%0A%20%20%20%20%20%20%20%20%20%20options.platform%20%3D%3D%3D%20'linux'%20%7C%7C%0A%20%20%20%20%20%20%20%20%20%20options.platform%20%3D%3D%3D%20'sunos'%0A%20%20%20%20%20%20%20%20)%20%7B%0A%20%20%20%20%20%20%20%20%20%20options.platform%20%3D%20%22UNIX%22%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20if%20(options.platform%20%3D%3D%3D%20'win32')%20%7B%0A%20%20%20%20%20%20%20%20%20%20options.platform%20%3D%20%22DOS%22%3B%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20var%20zipData%20%3D%20%5B%5D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20localDirLength%20%3D%200%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20centralDirLength%20%3D%200%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20writer%2C%20i%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20encodedComment%20%3D%20utils.transformTo(%22string%22%2C%20options.encodeFileName(options.comment%20%7C%7C%20this.comment%20%7C%7C%20%22%22))%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20first%2C%20generate%20all%20the%20zip%20parts.%0A%20%20%20%20%20%20%20%20for%20(var%20name%20in%20this.files)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(!this.files.hasOwnProperty(name))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20continue%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20file%20%3D%20this.files%5Bname%5D%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20compressionName%20%3D%20file.options.compression%20%7C%7C%20options.compression.toUpperCase()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20compression%20%3D%20compressions%5BcompressionName%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(!compression)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20Error(compressionName%20%2B%20%22%20is%20not%20a%20valid%20compression%20method%20!%22)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20compressionOptions%20%3D%20file.options.compressionOptions%20%7C%7C%20options.compressionOptions%20%7C%7C%20%7B%7D%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20compressedObject%20%3D%20generateCompressedObjectFrom.call(this%2C%20file%2C%20compression%2C%20compressionOptions)%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20zipPart%20%3D%20generateZipParts.call(this%2C%20name%2C%20file%2C%20compressedObject%2C%20localDirLength%2C%20options.platform%2C%20options.encodeFileName)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20localDirLength%20%2B%3D%20zipPart.fileRecord.length%20%2B%20compressedObject.compressedSize%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20centralDirLength%20%2B%3D%20zipPart.dirRecord.length%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20zipData.push(zipPart)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20var%20dirEnd%20%3D%20%22%22%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20end%20of%20central%20dir%20signature%0A%20%20%20%20%20%20%20%20dirEnd%20%3D%20signature.CENTRAL_DIRECTORY_END%20%2B%0A%20%20%20%20%20%20%20%20%2F%2F%20number%20of%20this%20disk%0A%20%20%20%20%20%20%20%20%22%5Cx00%5Cx00%22%20%2B%0A%20%20%20%20%20%20%20%20%2F%2F%20number%20of%20the%20disk%20with%20the%20start%20of%20the%20central%20directory%0A%20%20%20%20%20%20%20%20%22%5Cx00%5Cx00%22%20%2B%0A%20%20%20%20%20%20%20%20%2F%2F%20total%20number%20of%20entries%20in%20the%20central%20directory%20on%20this%20disk%0A%20%20%20%20%20%20%20%20decToHex(zipData.length%2C%202)%20%2B%0A%20%20%20%20%20%20%20%20%2F%2F%20total%20number%20of%20entries%20in%20the%20central%20directory%0A%20%20%20%20%20%20%20%20decToHex(zipData.length%2C%202)%20%2B%0A%20%20%20%20%20%20%20%20%2F%2F%20size%20of%20the%20central%20directory%20%20%204%20bytes%0A%20%20%20%20%20%20%20%20decToHex(centralDirLength%2C%204)%20%2B%0A%20%20%20%20%20%20%20%20%2F%2F%20offset%20of%20start%20of%20central%20directory%20with%20respect%20to%20the%20starting%20disk%20number%0A%20%20%20%20%20%20%20%20decToHex(localDirLength%2C%204)%20%2B%0A%20%20%20%20%20%20%20%20%2F%2F%20.ZIP%20file%20comment%20length%0A%20%20%20%20%20%20%20%20decToHex(encodedComment.length%2C%202)%20%2B%0A%20%20%20%20%20%20%20%20%2F%2F%20.ZIP%20file%20comment%0A%20%20%20%20%20%20%20%20encodedComment%3B%0A%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20we%20have%20all%20the%20parts%20(and%20the%20total%20length)%0A%20%20%20%20%20%20%20%20%2F%2F%20time%20to%20create%20a%20writer%20!%0A%20%20%20%20%20%20%20%20var%20typeName%20%3D%20options.type.toLowerCase()%3B%0A%20%20%20%20%20%20%20%20if(typeName%3D%3D%3D%22uint8array%22%7C%7CtypeName%3D%3D%3D%22arraybuffer%22%7C%7CtypeName%3D%3D%3D%22blob%22%7C%7CtypeName%3D%3D%3D%22nodebuffer%22)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20writer%20%3D%20new%20Uint8ArrayWriter(localDirLength%20%2B%20centralDirLength%20%2B%20dirEnd.length)%3B%0A%20%20%20%20%20%20%20%20%7Delse%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20writer%20%3D%20new%20StringWriter(localDirLength%20%2B%20centralDirLength%20%2B%20dirEnd.length)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20for%20(i%20%3D%200%3B%20i%20%3C%20zipData.length%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20writer.append(zipData%5Bi%5D.fileRecord)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20writer.append(zipData%5Bi%5D.compressedObject.compressedContent)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20for%20(i%20%3D%200%3B%20i%20%3C%20zipData.length%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20writer.append(zipData%5Bi%5D.dirRecord)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20writer.append(dirEnd)%3B%0A%0A%20%20%20%20%20%20%20%20var%20zip%20%3D%20writer.finalize()%3B%0A%0A%0A%0A%20%20%20%20%20%20%20%20switch(options.type.toLowerCase())%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20case%20%22zip%20is%20an%20Uint8Array%22%0A%20%20%20%20%20%20%20%20%20%20%20%20case%20%22uint8array%22%20%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20case%20%22arraybuffer%22%20%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20case%20%22nodebuffer%22%20%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20utils.transformTo(options.type.toLowerCase()%2C%20zip)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20case%20%22blob%22%20%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20utils.arrayBuffer2Blob(utils.transformTo(%22arraybuffer%22%2C%20zip)%2C%20options.mimeType)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20case%20%22zip%20is%20a%20string%22%0A%20%20%20%20%20%20%20%20%20%20%20%20case%20%22base64%22%20%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20(options.base64)%20%3F%20base64.encode(zip)%20%3A%20zip%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20default%20%3A%20%2F%2F%20case%20%22string%22%20%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20zip%3B%0A%20%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%7D%2C%0A%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20%40deprecated%0A%20%20%20%20%20*%20This%20method%20will%20be%20removed%20in%20a%20future%20version%20without%20replacement.%0A%20%20%20%20%20*%2F%0A%20%20%20%20crc32%3A%20function%20(input%2C%20crc)%20%7B%0A%20%20%20%20%20%20%20%20return%20crc32(input%2C%20crc)%3B%0A%20%20%20%20%7D%2C%0A%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20%40deprecated%0A%20%20%20%20%20*%20This%20method%20will%20be%20removed%20in%20a%20future%20version%20without%20replacement.%0A%20%20%20%20%20*%2F%0A%20%20%20%20utf8encode%3A%20function%20(string)%20%7B%0A%20%20%20%20%20%20%20%20return%20utils.transformTo(%22string%22%2C%20utf8.utf8encode(string))%3B%0A%20%20%20%20%7D%2C%0A%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20%40deprecated%0A%20%20%20%20%20*%20This%20method%20will%20be%20removed%20in%20a%20future%20version%20without%20replacement.%0A%20%20%20%20%20*%2F%0A%20%20%20%20utf8decode%3A%20function%20(input)%20%7B%0A%20%20%20%20%20%20%20%20return%20utf8.utf8decode(input)%3B%0A%20%20%20%20%7D%0A%7D%3B%0Amodule.exports%20%3D%20out%3B%0A%0A%7D%2C%7B%22.%2Fbase64%22%3A2%2C%22.%2FcompressedObject%22%3A3%2C%22.%2Fcompressions%22%3A4%2C%22.%2Fcrc32%22%3A5%2C%22.%2Fdefaults%22%3A7%2C%22.%2FnodeBuffer%22%3A12%2C%22.%2Fsignature%22%3A15%2C%22.%2FstringWriter%22%3A17%2C%22.%2Fsupport%22%3A18%2C%22.%2Fuint8ArrayWriter%22%3A20%2C%22.%2Futf8%22%3A21%2C%22.%2Futils%22%3A22%7D%5D%2C15%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0Aexports.LOCAL_FILE_HEADER%20%3D%20%22PK%5Cx03%5Cx04%22%3B%0Aexports.CENTRAL_FILE_HEADER%20%3D%20%22PK%5Cx01%5Cx02%22%3B%0Aexports.CENTRAL_DIRECTORY_END%20%3D%20%22PK%5Cx05%5Cx06%22%3B%0Aexports.ZIP64_CENTRAL_DIRECTORY_LOCATOR%20%3D%20%22PK%5Cx06%5Cx07%22%3B%0Aexports.ZIP64_CENTRAL_DIRECTORY_END%20%3D%20%22PK%5Cx06%5Cx06%22%3B%0Aexports.DATA_DESCRIPTOR%20%3D%20%22PK%5Cx07%5Cx08%22%3B%0A%0A%7D%2C%7B%7D%5D%2C16%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0Avar%20DataReader%20%3D%20require('.%2FdataReader')%3B%0Avar%20utils%20%3D%20require('.%2Futils')%3B%0A%0Afunction%20StringReader(data%2C%20optimizedBinaryString)%20%7B%0A%20%20%20%20this.data%20%3D%20data%3B%0A%20%20%20%20if%20(!optimizedBinaryString)%20%7B%0A%20%20%20%20%20%20%20%20this.data%20%3D%20utils.string2binary(this.data)%3B%0A%20%20%20%20%7D%0A%20%20%20%20this.length%20%3D%20this.data.length%3B%0A%20%20%20%20this.index%20%3D%200%3B%0A%20%20%20%20this.zero%20%3D%200%3B%0A%7D%0AStringReader.prototype%20%3D%20new%20DataReader()%3B%0A%2F**%0A%20*%20%40see%20DataReader.byteAt%0A%20*%2F%0AStringReader.prototype.byteAt%20%3D%20function(i)%20%7B%0A%20%20%20%20return%20this.data.charCodeAt(this.zero%20%2B%20i)%3B%0A%7D%3B%0A%2F**%0A%20*%20%40see%20DataReader.lastIndexOfSignature%0A%20*%2F%0AStringReader.prototype.lastIndexOfSignature%20%3D%20function(sig)%20%7B%0A%20%20%20%20return%20this.data.lastIndexOf(sig)%20-%20this.zero%3B%0A%7D%3B%0A%2F**%0A%20*%20%40see%20DataReader.readData%0A%20*%2F%0AStringReader.prototype.readData%20%3D%20function(size)%20%7B%0A%20%20%20%20this.checkOffset(size)%3B%0A%20%20%20%20%2F%2F%20this%20will%20work%20because%20the%20constructor%20applied%20the%20%22%26%200xff%22%20mask.%0A%20%20%20%20var%20result%20%3D%20this.data.slice(this.zero%20%2B%20this.index%2C%20this.zero%20%2B%20this.index%20%2B%20size)%3B%0A%20%20%20%20this.index%20%2B%3D%20size%3B%0A%20%20%20%20return%20result%3B%0A%7D%3B%0Amodule.exports%20%3D%20StringReader%3B%0A%0A%7D%2C%7B%22.%2FdataReader%22%3A6%2C%22.%2Futils%22%3A22%7D%5D%2C17%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0A%0Avar%20utils%20%3D%20require('.%2Futils')%3B%0A%0A%2F**%0A%20*%20An%20object%20to%20write%20any%20content%20to%20a%20string.%0A%20*%20%40constructor%0A%20*%2F%0Avar%20StringWriter%20%3D%20function()%20%7B%0A%20%20%20%20this.data%20%3D%20%5B%5D%3B%0A%7D%3B%0AStringWriter.prototype%20%3D%20%7B%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Append%20any%20content%20to%20the%20current%20string.%0A%20%20%20%20%20*%20%40param%20%7BObject%7D%20input%20the%20content%20to%20add.%0A%20%20%20%20%20*%2F%0A%20%20%20%20append%3A%20function(input)%20%7B%0A%20%20%20%20%20%20%20%20input%20%3D%20utils.transformTo(%22string%22%2C%20input)%3B%0A%20%20%20%20%20%20%20%20this.data.push(input)%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Finalize%20the%20construction%20an%20return%20the%20result.%0A%20%20%20%20%20*%20%40return%20%7Bstring%7D%20the%20generated%20string.%0A%20%20%20%20%20*%2F%0A%20%20%20%20finalize%3A%20function()%20%7B%0A%20%20%20%20%20%20%20%20return%20this.data.join(%22%22)%3B%0A%20%20%20%20%7D%0A%7D%3B%0A%0Amodule.exports%20%3D%20StringWriter%3B%0A%0A%7D%2C%7B%22.%2Futils%22%3A22%7D%5D%2C18%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A(function%20(Buffer)%7B%0A'use%20strict'%3B%0Aexports.base64%20%3D%20true%3B%0Aexports.array%20%3D%20true%3B%0Aexports.string%20%3D%20true%3B%0Aexports.arraybuffer%20%3D%20typeof%20ArrayBuffer%20!%3D%3D%20%22undefined%22%20%26%26%20typeof%20Uint8Array%20!%3D%3D%20%22undefined%22%3B%0A%2F%2F%20contains%20true%20if%20JSZip%20can%20read%2Fgenerate%20nodejs%20Buffer%2C%20false%20otherwise.%0A%2F%2F%20Browserify%20will%20provide%20a%20Buffer%20implementation%20for%20browsers%2C%20which%20is%0A%2F%2F%20an%20augmented%20Uint8Array%20(i.e.%2C%20can%20be%20used%20as%20either%20Buffer%20or%20U8).%0Aexports.nodebuffer%20%3D%20typeof%20Buffer%20!%3D%3D%20%22undefined%22%3B%0A%2F%2F%20contains%20true%20if%20JSZip%20can%20read%2Fgenerate%20Uint8Array%2C%20false%20otherwise.%0Aexports.uint8array%20%3D%20typeof%20Uint8Array%20!%3D%3D%20%22undefined%22%3B%0A%0Aif%20(typeof%20ArrayBuffer%20%3D%3D%3D%20%22undefined%22)%20%7B%0A%20%20%20%20exports.blob%20%3D%20false%3B%0A%7D%0Aelse%20%7B%0A%20%20%20%20var%20buffer%20%3D%20new%20ArrayBuffer(0)%3B%0A%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20exports.blob%20%3D%20new%20Blob(%5Bbuffer%5D%2C%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20type%3A%20%22application%2Fzip%22%0A%20%20%20%20%20%20%20%20%7D).size%20%3D%3D%3D%200%3B%0A%20%20%20%20%7D%0A%20%20%20%20catch%20(e)%20%7B%0A%20%20%20%20%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20Builder%20%3D%20window.BlobBuilder%20%7C%7C%20window.WebKitBlobBuilder%20%7C%7C%20window.MozBlobBuilder%20%7C%7C%20window.MSBlobBuilder%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20builder%20%3D%20new%20Builder()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20builder.append(buffer)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20exports.blob%20%3D%20builder.getBlob('application%2Fzip').size%20%3D%3D%3D%200%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20catch%20(e)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20exports.blob%20%3D%20false%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%7D%0A%0A%7D).call(this%2C(typeof%20Buffer%20!%3D%3D%20%22undefined%22%20%3F%20Buffer%20%3A%20undefined))%0A%7D%2C%7B%7D%5D%2C19%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0Avar%20ArrayReader%20%3D%20require('.%2FarrayReader')%3B%0A%0Afunction%20Uint8ArrayReader(data)%20%7B%0A%20%20%20%20if%20(data)%20%7B%0A%20%20%20%20%20%20%20%20this.data%20%3D%20data%3B%0A%20%20%20%20%20%20%20%20this.length%20%3D%20this.data.length%3B%0A%20%20%20%20%20%20%20%20this.index%20%3D%200%3B%0A%20%20%20%20%20%20%20%20this.zero%20%3D%200%3B%0A%20%20%20%20%7D%0A%7D%0AUint8ArrayReader.prototype%20%3D%20new%20ArrayReader()%3B%0A%2F**%0A%20*%20%40see%20DataReader.readData%0A%20*%2F%0AUint8ArrayReader.prototype.readData%20%3D%20function(size)%20%7B%0A%20%20%20%20this.checkOffset(size)%3B%0A%20%20%20%20if(size%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20in%20IE10%2C%20when%20using%20subarray(idx%2C%20idx)%2C%20we%20get%20the%20array%20%5B0x00%5D%20instead%20of%20%5B%5D.%0A%20%20%20%20%20%20%20%20return%20new%20Uint8Array(0)%3B%0A%20%20%20%20%7D%0A%20%20%20%20var%20result%20%3D%20this.data.subarray(this.zero%20%2B%20this.index%2C%20this.zero%20%2B%20this.index%20%2B%20size)%3B%0A%20%20%20%20this.index%20%2B%3D%20size%3B%0A%20%20%20%20return%20result%3B%0A%7D%3B%0Amodule.exports%20%3D%20Uint8ArrayReader%3B%0A%0A%7D%2C%7B%22.%2FarrayReader%22%3A1%7D%5D%2C20%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0A%0Avar%20utils%20%3D%20require('.%2Futils')%3B%0A%0A%2F**%0A%20*%20An%20object%20to%20write%20any%20content%20to%20an%20Uint8Array.%0A%20*%20%40constructor%0A%20*%20%40param%20%7Bnumber%7D%20length%20The%20length%20of%20the%20array.%0A%20*%2F%0Avar%20Uint8ArrayWriter%20%3D%20function(length)%20%7B%0A%20%20%20%20this.data%20%3D%20new%20Uint8Array(length)%3B%0A%20%20%20%20this.index%20%3D%200%3B%0A%7D%3B%0AUint8ArrayWriter.prototype%20%3D%20%7B%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Append%20any%20content%20to%20the%20current%20array.%0A%20%20%20%20%20*%20%40param%20%7BObject%7D%20input%20the%20content%20to%20add.%0A%20%20%20%20%20*%2F%0A%20%20%20%20append%3A%20function(input)%20%7B%0A%20%20%20%20%20%20%20%20if%20(input.length%20!%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20with%20an%20empty%20Uint8Array%2C%20Opera%20fails%20with%20a%20%22Offset%20larger%20than%20array%20size%22%0A%20%20%20%20%20%20%20%20%20%20%20%20input%20%3D%20utils.transformTo(%22uint8array%22%2C%20input)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.data.set(input%2C%20this.index)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.index%20%2B%3D%20input.length%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Finalize%20the%20construction%20an%20return%20the%20result.%0A%20%20%20%20%20*%20%40return%20%7BUint8Array%7D%20the%20generated%20array.%0A%20%20%20%20%20*%2F%0A%20%20%20%20finalize%3A%20function()%20%7B%0A%20%20%20%20%20%20%20%20return%20this.data%3B%0A%20%20%20%20%7D%0A%7D%3B%0A%0Amodule.exports%20%3D%20Uint8ArrayWriter%3B%0A%0A%7D%2C%7B%22.%2Futils%22%3A22%7D%5D%2C21%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0A%0Avar%20utils%20%3D%20require('.%2Futils')%3B%0Avar%20support%20%3D%20require('.%2Fsupport')%3B%0Avar%20nodeBuffer%20%3D%20require('.%2FnodeBuffer')%3B%0A%0A%2F**%0A%20*%20The%20following%20functions%20come%20from%20pako%2C%20from%20pako%2Flib%2Futils%2Fstrings%0A%20*%20released%20under%20the%20MIT%20license%2C%20see%20pako%20https%3A%2F%2Fgithub.com%2Fnodeca%2Fpako%2F%0A%20*%2F%0A%0A%2F%2F%20Table%20with%20utf8%20lengths%20(calculated%20by%20first%20byte%20of%20sequence)%0A%2F%2F%20Note%2C%20that%205%20%26%206-byte%20values%20and%20some%204-byte%20values%20can%20not%20be%20represented%20in%20JS%2C%0A%2F%2F%20because%20max%20possible%20codepoint%20is%200x10ffff%0Avar%20_utf8len%20%3D%20new%20Array(256)%3B%0Afor%20(var%20i%3D0%3B%20i%3C256%3B%20i%2B%2B)%20%7B%0A%20%20_utf8len%5Bi%5D%20%3D%20(i%20%3E%3D%20252%20%3F%206%20%3A%20i%20%3E%3D%20248%20%3F%205%20%3A%20i%20%3E%3D%20240%20%3F%204%20%3A%20i%20%3E%3D%20224%20%3F%203%20%3A%20i%20%3E%3D%20192%20%3F%202%20%3A%201)%3B%0A%7D%0A_utf8len%5B254%5D%3D_utf8len%5B254%5D%3D1%3B%20%2F%2F%20Invalid%20sequence%20start%0A%0A%2F%2F%20convert%20string%20to%20array%20(typed%2C%20when%20possible)%0Avar%20string2buf%20%3D%20function%20(str)%20%7B%0A%20%20%20%20var%20buf%2C%20c%2C%20c2%2C%20m_pos%2C%20i%2C%20str_len%20%3D%20str.length%2C%20buf_len%20%3D%200%3B%0A%0A%20%20%20%20%2F%2F%20count%20binary%20size%0A%20%20%20%20for%20(m_pos%20%3D%200%3B%20m_pos%20%3C%20str_len%3B%20m_pos%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20c%20%3D%20str.charCodeAt(m_pos)%3B%0A%20%20%20%20%20%20%20%20if%20((c%20%26%200xfc00)%20%3D%3D%3D%200xd800%20%26%26%20(m_pos%2B1%20%3C%20str_len))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20c2%20%3D%20str.charCodeAt(m_pos%2B1)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20((c2%20%26%200xfc00)%20%3D%3D%3D%200xdc00)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20c%20%3D%200x10000%20%2B%20((c%20-%200xd800)%20%3C%3C%2010)%20%2B%20(c2%20-%200xdc00)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20m_pos%2B%2B%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20buf_len%20%2B%3D%20c%20%3C%200x80%20%3F%201%20%3A%20c%20%3C%200x800%20%3F%202%20%3A%20c%20%3C%200x10000%20%3F%203%20%3A%204%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20allocate%20buffer%0A%20%20%20%20if%20(support.uint8array)%20%7B%0A%20%20%20%20%20%20%20%20buf%20%3D%20new%20Uint8Array(buf_len)%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20buf%20%3D%20new%20Array(buf_len)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20convert%0A%20%20%20%20for%20(i%3D0%2C%20m_pos%20%3D%200%3B%20i%20%3C%20buf_len%3B%20m_pos%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20c%20%3D%20str.charCodeAt(m_pos)%3B%0A%20%20%20%20%20%20%20%20if%20((c%20%26%200xfc00)%20%3D%3D%3D%200xd800%20%26%26%20(m_pos%2B1%20%3C%20str_len))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20c2%20%3D%20str.charCodeAt(m_pos%2B1)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20((c2%20%26%200xfc00)%20%3D%3D%3D%200xdc00)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20c%20%3D%200x10000%20%2B%20((c%20-%200xd800)%20%3C%3C%2010)%20%2B%20(c2%20-%200xdc00)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20m_pos%2B%2B%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20if%20(c%20%3C%200x80)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20one%20byte%20*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20buf%5Bi%2B%2B%5D%20%3D%20c%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20if%20(c%20%3C%200x800)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20two%20bytes%20*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20buf%5Bi%2B%2B%5D%20%3D%200xC0%20%7C%20(c%20%3E%3E%3E%206)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20buf%5Bi%2B%2B%5D%20%3D%200x80%20%7C%20(c%20%26%200x3f)%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20if%20(c%20%3C%200x10000)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20three%20bytes%20*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20buf%5Bi%2B%2B%5D%20%3D%200xE0%20%7C%20(c%20%3E%3E%3E%2012)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20buf%5Bi%2B%2B%5D%20%3D%200x80%20%7C%20(c%20%3E%3E%3E%206%20%26%200x3f)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20buf%5Bi%2B%2B%5D%20%3D%200x80%20%7C%20(c%20%26%200x3f)%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20four%20bytes%20*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20buf%5Bi%2B%2B%5D%20%3D%200xf0%20%7C%20(c%20%3E%3E%3E%2018)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20buf%5Bi%2B%2B%5D%20%3D%200x80%20%7C%20(c%20%3E%3E%3E%2012%20%26%200x3f)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20buf%5Bi%2B%2B%5D%20%3D%200x80%20%7C%20(c%20%3E%3E%3E%206%20%26%200x3f)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20buf%5Bi%2B%2B%5D%20%3D%200x80%20%7C%20(c%20%26%200x3f)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20return%20buf%3B%0A%7D%3B%0A%0A%2F%2F%20Calculate%20max%20possible%20position%20in%20utf8%20buffer%2C%0A%2F%2F%20that%20will%20not%20break%20sequence.%20If%20that's%20not%20possible%0A%2F%2F%20-%20(very%20small%20limits)%20return%20max%20size%20as%20is.%0A%2F%2F%0A%2F%2F%20buf%5B%5D%20-%20utf8%20bytes%20array%0A%2F%2F%20max%20%20%20-%20length%20limit%20(mandatory)%3B%0Avar%20utf8border%20%3D%20function(buf%2C%20max)%20%7B%0A%20%20%20%20var%20pos%3B%0A%0A%20%20%20%20max%20%3D%20max%20%7C%7C%20buf.length%3B%0A%20%20%20%20if%20(max%20%3E%20buf.length)%20%7B%20max%20%3D%20buf.length%3B%20%7D%0A%0A%20%20%20%20%2F%2F%20go%20back%20from%20last%20position%2C%20until%20start%20of%20sequence%20found%0A%20%20%20%20pos%20%3D%20max-1%3B%0A%20%20%20%20while%20(pos%20%3E%3D%200%20%26%26%20(buf%5Bpos%5D%20%26%200xC0)%20%3D%3D%3D%200x80)%20%7B%20pos--%3B%20%7D%0A%0A%20%20%20%20%2F%2F%20butterflyup%20-%20very%20small%20and%20broken%20sequence%2C%0A%20%20%20%20%2F%2F%20return%20max%2C%20because%20we%20should%20return%20something%20anyway.%0A%20%20%20%20if%20(pos%20%3C%200)%20%7B%20return%20max%3B%20%7D%0A%0A%20%20%20%20%2F%2F%20If%20we%20came%20to%20start%20of%20buffer%20-%20that%20means%20vuffer%20is%20too%20small%2C%0A%20%20%20%20%2F%2F%20return%20max%20too.%0A%20%20%20%20if%20(pos%20%3D%3D%3D%200)%20%7B%20return%20max%3B%20%7D%0A%0A%20%20%20%20return%20(pos%20%2B%20_utf8len%5Bbuf%5Bpos%5D%5D%20%3E%20max)%20%3F%20pos%20%3A%20max%3B%0A%7D%3B%0A%0A%2F%2F%20convert%20array%20to%20string%0Avar%20buf2string%20%3D%20function%20(buf)%20%7B%0A%20%20%20%20var%20str%2C%20i%2C%20out%2C%20c%2C%20c_len%3B%0A%20%20%20%20var%20len%20%3D%20buf.length%3B%0A%0A%20%20%20%20%2F%2F%20Reserve%20max%20possible%20length%20(2%20words%20per%20char)%0A%20%20%20%20%2F%2F%20NB%3A%20by%20unknown%20reasons%2C%20Array%20is%20significantly%20faster%20for%0A%20%20%20%20%2F%2F%20%20%20%20%20String.fromCharCode.apply%20than%20Uint16Array.%0A%20%20%20%20var%20utf16buf%20%3D%20new%20Array(len*2)%3B%0A%0A%20%20%20%20for%20(out%3D0%2C%20i%3D0%3B%20i%3Clen%3B)%20%7B%0A%20%20%20%20%20%20%20%20c%20%3D%20buf%5Bi%2B%2B%5D%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20quick%20process%20ascii%0A%20%20%20%20%20%20%20%20if%20(c%20%3C%200x80)%20%7B%20utf16buf%5Bout%2B%2B%5D%20%3D%20c%3B%20continue%3B%20%7D%0A%0A%20%20%20%20%20%20%20%20c_len%20%3D%20_utf8len%5Bc%5D%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20skip%205%20%26%206%20byte%20codes%0A%20%20%20%20%20%20%20%20if%20(c_len%20%3E%204)%20%7B%20utf16buf%5Bout%2B%2B%5D%20%3D%200xfffd%3B%20i%20%2B%3D%20c_len-1%3B%20continue%3B%20%7D%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20apply%20mask%20on%20first%20byte%0A%20%20%20%20%20%20%20%20c%20%26%3D%20c_len%20%3D%3D%3D%202%20%3F%200x1f%20%3A%20c_len%20%3D%3D%3D%203%20%3F%200x0f%20%3A%200x07%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20join%20the%20rest%0A%20%20%20%20%20%20%20%20while%20(c_len%20%3E%201%20%26%26%20i%20%3C%20len)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20c%20%3D%20(c%20%3C%3C%206)%20%7C%20(buf%5Bi%2B%2B%5D%20%26%200x3f)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20c_len--%3B%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20terminated%20by%20end%20of%20string%3F%0A%20%20%20%20%20%20%20%20if%20(c_len%20%3E%201)%20%7B%20utf16buf%5Bout%2B%2B%5D%20%3D%200xfffd%3B%20continue%3B%20%7D%0A%0A%20%20%20%20%20%20%20%20if%20(c%20%3C%200x10000)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20utf16buf%5Bout%2B%2B%5D%20%3D%20c%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20c%20-%3D%200x10000%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20utf16buf%5Bout%2B%2B%5D%20%3D%200xd800%20%7C%20((c%20%3E%3E%2010)%20%26%200x3ff)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20utf16buf%5Bout%2B%2B%5D%20%3D%200xdc00%20%7C%20(c%20%26%200x3ff)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20shrinkBuf(utf16buf%2C%20out)%0A%20%20%20%20if%20(utf16buf.length%20!%3D%3D%20out)%20%7B%0A%20%20%20%20%20%20%20%20if(utf16buf.subarray)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20utf16buf%20%3D%20utf16buf.subarray(0%2C%20out)%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20utf16buf.length%20%3D%20out%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20return%20String.fromCharCode.apply(null%2C%20utf16buf)%3B%0A%20%20%20%20return%20utils.applyFromCharCode(utf16buf)%3B%0A%7D%3B%0A%0A%0A%2F%2F%20That's%20all%20for%20the%20pako%20functions.%0A%0A%0A%2F**%0A%20*%20Transform%20a%20javascript%20string%20into%20an%20array%20(typed%20if%20possible)%20of%20bytes%2C%0A%20*%20UTF-8%20encoded.%0A%20*%20%40param%20%7BString%7D%20str%20the%20string%20to%20encode%0A%20*%20%40return%20%7BArray%7CUint8Array%7CBuffer%7D%20the%20UTF-8%20encoded%20string.%0A%20*%2F%0Aexports.utf8encode%20%3D%20function%20utf8encode(str)%20%7B%0A%20%20%20%20if%20(support.nodebuffer)%20%7B%0A%20%20%20%20%20%20%20%20return%20nodeBuffer(str%2C%20%22utf-8%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20return%20string2buf(str)%3B%0A%7D%3B%0A%0A%0A%2F**%0A%20*%20Transform%20a%20bytes%20array%20(or%20a%20representation)%20representing%20an%20UTF-8%20encoded%0A%20*%20string%20into%20a%20javascript%20string.%0A%20*%20%40param%20%7BArray%7CUint8Array%7CBuffer%7D%20buf%20the%20data%20de%20decode%0A%20*%20%40return%20%7BString%7D%20the%20decoded%20string.%0A%20*%2F%0Aexports.utf8decode%20%3D%20function%20utf8decode(buf)%20%7B%0A%20%20%20%20if%20(support.nodebuffer)%20%7B%0A%20%20%20%20%20%20%20%20return%20utils.transformTo(%22nodebuffer%22%2C%20buf).toString(%22utf-8%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20buf%20%3D%20utils.transformTo(support.uint8array%20%3F%20%22uint8array%22%20%3A%20%22array%22%2C%20buf)%3B%0A%0A%20%20%20%20%2F%2F%20return%20buf2string(buf)%3B%0A%20%20%20%20%2F%2F%20Chrome%20prefers%20to%20work%20with%20%22small%22%20chunks%20of%20data%0A%20%20%20%20%2F%2F%20for%20the%20method%20buf2string.%0A%20%20%20%20%2F%2F%20Firefox%20and%20Chrome%20has%20their%20own%20shortcut%2C%20IE%20doesn't%20seem%20to%20really%20care.%0A%20%20%20%20var%20result%20%3D%20%5B%5D%2C%20k%20%3D%200%2C%20len%20%3D%20buf.length%2C%20chunk%20%3D%2065536%3B%0A%20%20%20%20while%20(k%20%3C%20len)%20%7B%0A%20%20%20%20%20%20%20%20var%20nextBoundary%20%3D%20utf8border(buf%2C%20Math.min(k%20%2B%20chunk%2C%20len))%3B%0A%20%20%20%20%20%20%20%20if%20(support.uint8array)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20result.push(buf2string(buf.subarray(k%2C%20nextBoundary)))%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20result.push(buf2string(buf.slice(k%2C%20nextBoundary)))%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20k%20%3D%20nextBoundary%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20result.join(%22%22)%3B%0A%0A%7D%3B%0A%2F%2F%20vim%3A%20set%20shiftwidth%3D4%20softtabstop%3D4%3A%0A%0A%7D%2C%7B%22.%2FnodeBuffer%22%3A12%2C%22.%2Fsupport%22%3A18%2C%22.%2Futils%22%3A22%7D%5D%2C22%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0Avar%20support%20%3D%20require('.%2Fsupport')%3B%0Avar%20compressions%20%3D%20require('.%2Fcompressions')%3B%0Avar%20nodeBuffer%20%3D%20require('.%2FnodeBuffer')%3B%0A%2F**%0A%20*%20Convert%20a%20string%20to%20a%20%22binary%20string%22%20%3A%20a%20string%20containing%20only%20char%20codes%20between%200%20and%20255.%0A%20*%20%40param%20%7Bstring%7D%20str%20the%20string%20to%20transform.%0A%20*%20%40return%20%7BString%7D%20the%20binary%20string.%0A%20*%2F%0Aexports.string2binary%20%3D%20function(str)%20%7B%0A%20%20%20%20var%20result%20%3D%20%22%22%3B%0A%20%20%20%20for%20(var%20i%20%3D%200%3B%20i%20%3C%20str.length%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20result%20%2B%3D%20String.fromCharCode(str.charCodeAt(i)%20%26%200xff)%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20result%3B%0A%7D%3B%0Aexports.arrayBuffer2Blob%20%3D%20function(buffer%2C%20mimeType)%20%7B%0A%20%20%20%20exports.checkSupport(%22blob%22)%3B%0A%09mimeType%20%3D%20mimeType%20%7C%7C%20'application%2Fzip'%3B%0A%0A%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Blob%20constructor%0A%20%20%20%20%20%20%20%20return%20new%20Blob(%5Bbuffer%5D%2C%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20type%3A%20mimeType%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%7D%0A%20%20%20%20catch%20(e)%20%7B%0A%0A%20%20%20%20%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20deprecated%2C%20browser%20only%2C%20old%20way%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20Builder%20%3D%20window.BlobBuilder%20%7C%7C%20window.WebKitBlobBuilder%20%7C%7C%20window.MozBlobBuilder%20%7C%7C%20window.MSBlobBuilder%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20builder%20%3D%20new%20Builder()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20builder.append(buffer)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20builder.getBlob(mimeType)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20catch%20(e)%20%7B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20well%2C%20butterfly%20%3F!%0A%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20Error(%22Bug%20%3A%20can't%20construct%20the%20Blob.%22)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%0A%7D%3B%0A%2F**%0A%20*%20The%20identity%20function.%0A%20*%20%40param%20%7BObject%7D%20input%20the%20input.%0A%20*%20%40return%20%7BObject%7D%20the%20same%20input.%0A%20*%2F%0Afunction%20identity(input)%20%7B%0A%20%20%20%20return%20input%3B%0A%7D%0A%0A%2F**%0A%20*%20Fill%20in%20an%20array%20with%20a%20string.%0A%20*%20%40param%20%7BString%7D%20str%20the%20string%20to%20use.%0A%20*%20%40param%20%7BArray%7CArrayBuffer%7CUint8Array%7CBuffer%7D%20array%20the%20array%20to%20fill%20in%20(will%20be%20mutated).%0A%20*%20%40return%20%7BArray%7CArrayBuffer%7CUint8Array%7CBuffer%7D%20the%20updated%20array.%0A%20*%2F%0Afunction%20stringToArrayLike(str%2C%20array)%20%7B%0A%20%20%20%20for%20(var%20i%20%3D%200%3B%20i%20%3C%20str.length%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20%20%20%20%20array%5Bi%5D%20%3D%20str.charCodeAt(i)%20%26%200xFF%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20array%3B%0A%7D%0A%0A%2F**%0A%20*%20Transform%20an%20array-like%20object%20to%20a%20string.%0A%20*%20%40param%20%7BArray%7CArrayBuffer%7CUint8Array%7CBuffer%7D%20array%20the%20array%20to%20transform.%0A%20*%20%40return%20%7BString%7D%20the%20result.%0A%20*%2F%0Afunction%20arrayLikeToString(array)%20%7B%0A%20%20%20%20%2F%2F%20Performances%20notes%20%3A%0A%20%20%20%20%2F%2F%20--------------------%0A%20%20%20%20%2F%2F%20String.fromCharCode.apply(null%2C%20array)%20is%20the%20fastest%2C%20see%0A%20%20%20%20%2F%2F%20see%20http%3A%2F%2Fjsperf.com%2Fconverting-a-uint8array-to-a-string%2F2%0A%20%20%20%20%2F%2F%20but%20the%20stack%20is%20limited%20(and%20we%20can%20get%20huge%20arrays%20!).%0A%20%20%20%20%2F%2F%0A%20%20%20%20%2F%2F%20result%20%2B%3D%20String.fromCharCode(array%5Bi%5D)%3B%20generate%20too%20many%20strings%20!%0A%20%20%20%20%2F%2F%0A%20%20%20%20%2F%2F%20This%20code%20is%20inspired%20by%20http%3A%2F%2Fjsperf.com%2Farraybuffer-to-string-apply-performance%2F2%0A%20%20%20%20var%20chunk%20%3D%2065536%3B%0A%20%20%20%20var%20result%20%3D%20%5B%5D%2C%0A%20%20%20%20%20%20%20%20len%20%3D%20array.length%2C%0A%20%20%20%20%20%20%20%20type%20%3D%20exports.getTypeOf(array)%2C%0A%20%20%20%20%20%20%20%20k%20%3D%200%2C%0A%20%20%20%20%20%20%20%20canUseApply%20%3D%20true%3B%0A%20%20%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20%20switch(type)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20case%20%22uint8array%22%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20String.fromCharCode.apply(null%2C%20new%20Uint8Array(0))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20case%20%22nodebuffer%22%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20String.fromCharCode.apply(null%2C%20nodeBuffer(0))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%20catch(e)%20%7B%0A%20%20%20%20%20%20%20%20%20canUseApply%20%3D%20false%3B%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%2F%2F%20no%20apply%20%3A%20slow%20and%20painful%20algorithm%0A%20%20%20%20%20%20%2F%2F%20default%20browser%20on%20android%204.*%0A%20%20%20%20%20%20if%20(!canUseApply)%20%7B%0A%20%20%20%20%20%20%20%20%20var%20resultStr%20%3D%20%22%22%3B%0A%20%20%20%20%20%20%20%20%20for(var%20i%20%3D%200%3B%20i%20%3C%20array.length%3Bi%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20resultStr%20%2B%3D%20String.fromCharCode(array%5Bi%5D)%3B%0A%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20return%20resultStr%3B%0A%20%20%20%20%7D%0A%20%20%20%20while%20(k%20%3C%20len%20%26%26%20chunk%20%3E%201)%20%7B%0A%20%20%20%20%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(type%20%3D%3D%3D%20%22array%22%20%7C%7C%20type%20%3D%3D%3D%20%22nodebuffer%22)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20result.push(String.fromCharCode.apply(null%2C%20array.slice(k%2C%20Math.min(k%20%2B%20chunk%2C%20len))))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20result.push(String.fromCharCode.apply(null%2C%20array.subarray(k%2C%20Math.min(k%20%2B%20chunk%2C%20len))))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20k%20%2B%3D%20chunk%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20catch%20(e)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20chunk%20%3D%20Math.floor(chunk%20%2F%202)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20return%20result.join(%22%22)%3B%0A%7D%0A%0Aexports.applyFromCharCode%20%3D%20arrayLikeToString%3B%0A%0A%0A%2F**%0A%20*%20Copy%20the%20data%20from%20an%20array-like%20to%20an%20other%20array-like.%0A%20*%20%40param%20%7BArray%7CArrayBuffer%7CUint8Array%7CBuffer%7D%20arrayFrom%20the%20origin%20array.%0A%20*%20%40param%20%7BArray%7CArrayBuffer%7CUint8Array%7CBuffer%7D%20arrayTo%20the%20destination%20array%20which%20will%20be%20mutated.%0A%20*%20%40return%20%7BArray%7CArrayBuffer%7CUint8Array%7CBuffer%7D%20the%20updated%20destination%20array.%0A%20*%2F%0Afunction%20arrayLikeToArrayLike(arrayFrom%2C%20arrayTo)%20%7B%0A%20%20%20%20for%20(var%20i%20%3D%200%3B%20i%20%3C%20arrayFrom.length%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20arrayTo%5Bi%5D%20%3D%20arrayFrom%5Bi%5D%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20arrayTo%3B%0A%7D%0A%0A%2F%2F%20a%20matrix%20containing%20functions%20to%20transform%20everything%20into%20everything.%0Avar%20transform%20%3D%20%7B%7D%3B%0A%0A%2F%2F%20string%20to%20%3F%0Atransform%5B%22string%22%5D%20%3D%20%7B%0A%20%20%20%20%22string%22%3A%20identity%2C%0A%20%20%20%20%22array%22%3A%20function(input)%20%7B%0A%20%20%20%20%20%20%20%20return%20stringToArrayLike(input%2C%20new%20Array(input.length))%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%22arraybuffer%22%3A%20function(input)%20%7B%0A%20%20%20%20%20%20%20%20return%20transform%5B%22string%22%5D%5B%22uint8array%22%5D(input).buffer%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%22uint8array%22%3A%20function(input)%20%7B%0A%20%20%20%20%20%20%20%20return%20stringToArrayLike(input%2C%20new%20Uint8Array(input.length))%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%22nodebuffer%22%3A%20function(input)%20%7B%0A%20%20%20%20%20%20%20%20return%20stringToArrayLike(input%2C%20nodeBuffer(input.length))%3B%0A%20%20%20%20%7D%0A%7D%3B%0A%0A%2F%2F%20array%20to%20%3F%0Atransform%5B%22array%22%5D%20%3D%20%7B%0A%20%20%20%20%22string%22%3A%20arrayLikeToString%2C%0A%20%20%20%20%22array%22%3A%20identity%2C%0A%20%20%20%20%22arraybuffer%22%3A%20function(input)%20%7B%0A%20%20%20%20%20%20%20%20return%20(new%20Uint8Array(input)).buffer%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%22uint8array%22%3A%20function(input)%20%7B%0A%20%20%20%20%20%20%20%20return%20new%20Uint8Array(input)%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%22nodebuffer%22%3A%20function(input)%20%7B%0A%20%20%20%20%20%20%20%20return%20nodeBuffer(input)%3B%0A%20%20%20%20%7D%0A%7D%3B%0A%0A%2F%2F%20arraybuffer%20to%20%3F%0Atransform%5B%22arraybuffer%22%5D%20%3D%20%7B%0A%20%20%20%20%22string%22%3A%20function(input)%20%7B%0A%20%20%20%20%20%20%20%20return%20arrayLikeToString(new%20Uint8Array(input))%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%22array%22%3A%20function(input)%20%7B%0A%20%20%20%20%20%20%20%20return%20arrayLikeToArrayLike(new%20Uint8Array(input)%2C%20new%20Array(input.byteLength))%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%22arraybuffer%22%3A%20identity%2C%0A%20%20%20%20%22uint8array%22%3A%20function(input)%20%7B%0A%20%20%20%20%20%20%20%20return%20new%20Uint8Array(input)%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%22nodebuffer%22%3A%20function(input)%20%7B%0A%20%20%20%20%20%20%20%20return%20nodeBuffer(new%20Uint8Array(input))%3B%0A%20%20%20%20%7D%0A%7D%3B%0A%0A%2F%2F%20uint8array%20to%20%3F%0Atransform%5B%22uint8array%22%5D%20%3D%20%7B%0A%20%20%20%20%22string%22%3A%20arrayLikeToString%2C%0A%20%20%20%20%22array%22%3A%20function(input)%20%7B%0A%20%20%20%20%20%20%20%20return%20arrayLikeToArrayLike(input%2C%20new%20Array(input.length))%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%22arraybuffer%22%3A%20function(input)%20%7B%0A%20%20%20%20%20%20%20%20return%20input.buffer%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%22uint8array%22%3A%20identity%2C%0A%20%20%20%20%22nodebuffer%22%3A%20function(input)%20%7B%0A%20%20%20%20%20%20%20%20return%20nodeBuffer(input)%3B%0A%20%20%20%20%7D%0A%7D%3B%0A%0A%2F%2F%20nodebuffer%20to%20%3F%0Atransform%5B%22nodebuffer%22%5D%20%3D%20%7B%0A%20%20%20%20%22string%22%3A%20arrayLikeToString%2C%0A%20%20%20%20%22array%22%3A%20function(input)%20%7B%0A%20%20%20%20%20%20%20%20return%20arrayLikeToArrayLike(input%2C%20new%20Array(input.length))%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%22arraybuffer%22%3A%20function(input)%20%7B%0A%20%20%20%20%20%20%20%20return%20transform%5B%22nodebuffer%22%5D%5B%22uint8array%22%5D(input).buffer%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%22uint8array%22%3A%20function(input)%20%7B%0A%20%20%20%20%20%20%20%20return%20arrayLikeToArrayLike(input%2C%20new%20Uint8Array(input.length))%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%22nodebuffer%22%3A%20identity%0A%7D%3B%0A%0A%2F**%0A%20*%20Transform%20an%20input%20into%20any%20type.%0A%20*%20The%20supported%20output%20type%20are%20%3A%20string%2C%20array%2C%20uint8array%2C%20arraybuffer%2C%20nodebuffer.%0A%20*%20If%20no%20output%20type%20is%20specified%2C%20the%20unmodified%20input%20will%20be%20returned.%0A%20*%20%40param%20%7BString%7D%20outputType%20the%20output%20type.%0A%20*%20%40param%20%7BString%7CArray%7CArrayBuffer%7CUint8Array%7CBuffer%7D%20input%20the%20input%20to%20convert.%0A%20*%20%40throws%20%7BError%7D%20an%20Error%20if%20the%20browser%20doesn't%20support%20the%20requested%20output%20type.%0A%20*%2F%0Aexports.transformTo%20%3D%20function(outputType%2C%20input)%20%7B%0A%20%20%20%20if%20(!input)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20undefined%2C%20null%2C%20etc%0A%20%20%20%20%20%20%20%20%2F%2F%20an%20empty%20string%20won't%20harm.%0A%20%20%20%20%20%20%20%20input%20%3D%20%22%22%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20(!outputType)%20%7B%0A%20%20%20%20%20%20%20%20return%20input%3B%0A%20%20%20%20%7D%0A%20%20%20%20exports.checkSupport(outputType)%3B%0A%20%20%20%20var%20inputType%20%3D%20exports.getTypeOf(input)%3B%0A%20%20%20%20var%20result%20%3D%20transform%5BinputType%5D%5BoutputType%5D(input)%3B%0A%20%20%20%20return%20result%3B%0A%7D%3B%0A%0A%2F**%0A%20*%20Return%20the%20type%20of%20the%20input.%0A%20*%20The%20type%20will%20be%20in%20a%20format%20valid%20for%20JSZip.utils.transformTo%20%3A%20string%2C%20array%2C%20uint8array%2C%20arraybuffer.%0A%20*%20%40param%20%7BObject%7D%20input%20the%20input%20to%20identify.%0A%20*%20%40return%20%7BString%7D%20the%20(lowercase)%20type%20of%20the%20input.%0A%20*%2F%0Aexports.getTypeOf%20%3D%20function(input)%20%7B%0A%20%20%20%20if%20(typeof%20input%20%3D%3D%3D%20%22string%22)%20%7B%0A%20%20%20%20%20%20%20%20return%20%22string%22%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20(Object.prototype.toString.call(input)%20%3D%3D%3D%20%22%5Bobject%20Array%5D%22)%20%7B%0A%20%20%20%20%20%20%20%20return%20%22array%22%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20(support.nodebuffer%20%26%26%20nodeBuffer.test(input))%20%7B%0A%20%20%20%20%20%20%20%20return%20%22nodebuffer%22%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20(support.uint8array%20%26%26%20input%20instanceof%20Uint8Array)%20%7B%0A%20%20%20%20%20%20%20%20return%20%22uint8array%22%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20(support.arraybuffer%20%26%26%20input%20instanceof%20ArrayBuffer)%20%7B%0A%20%20%20%20%20%20%20%20return%20%22arraybuffer%22%3B%0A%20%20%20%20%7D%0A%7D%3B%0A%0A%2F**%0A%20*%20Throw%20an%20exception%20if%20the%20type%20is%20not%20supported.%0A%20*%20%40param%20%7BString%7D%20type%20the%20type%20to%20check.%0A%20*%20%40throws%20%7BError%7D%20an%20Error%20if%20the%20browser%20doesn't%20support%20the%20requested%20type.%0A%20*%2F%0Aexports.checkSupport%20%3D%20function(type)%20%7B%0A%20%20%20%20var%20supported%20%3D%20support%5Btype.toLowerCase()%5D%3B%0A%20%20%20%20if%20(!supported)%20%7B%0A%20%20%20%20%20%20%20%20throw%20new%20Error(type%20%2B%20%22%20is%20not%20supported%20by%20this%20browser%22)%3B%0A%20%20%20%20%7D%0A%7D%3B%0Aexports.MAX_VALUE_16BITS%20%3D%2065535%3B%0Aexports.MAX_VALUE_32BITS%20%3D%20-1%3B%20%2F%2F%20well%2C%20%22%5CxFF%5CxFF%5CxFF%5CxFF%5CxFF%5CxFF%5CxFF%5CxFF%22%20is%20parsed%20as%20-1%0A%0A%2F**%0A%20*%20Prettify%20a%20string%20read%20as%20binary.%0A%20*%20%40param%20%7Bstring%7D%20str%20the%20string%20to%20prettify.%0A%20*%20%40return%20%7Bstring%7D%20a%20pretty%20string.%0A%20*%2F%0Aexports.pretty%20%3D%20function(str)%20%7B%0A%20%20%20%20var%20res%20%3D%20''%2C%0A%20%20%20%20%20%20%20%20code%2C%20i%3B%0A%20%20%20%20for%20(i%20%3D%200%3B%20i%20%3C%20(str%20%7C%7C%20%22%22).length%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20code%20%3D%20str.charCodeAt(i)%3B%0A%20%20%20%20%20%20%20%20res%20%2B%3D%20'%5C%5Cx'%20%2B%20(code%20%3C%2016%20%3F%20%220%22%20%3A%20%22%22)%20%2B%20code.toString(16).toUpperCase()%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20res%3B%0A%7D%3B%0A%0A%2F**%0A%20*%20Find%20a%20compression%20registered%20in%20JSZip.%0A%20*%20%40param%20%7Bstring%7D%20compressionMethod%20the%20method%20magic%20to%20find.%0A%20*%20%40return%20%7BObject%7Cnull%7D%20the%20JSZip%20compression%20object%2C%20null%20if%20none%20found.%0A%20*%2F%0Aexports.findCompression%20%3D%20function(compressionMethod)%20%7B%0A%20%20%20%20for%20(var%20method%20in%20compressions)%20%7B%0A%20%20%20%20%20%20%20%20if%20(!compressions.hasOwnProperty(method))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20continue%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20if%20(compressions%5Bmethod%5D.magic%20%3D%3D%3D%20compressionMethod)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20compressions%5Bmethod%5D%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20return%20null%3B%0A%7D%3B%0A%2F**%0A*%20Cross-window%2C%20cross-Node-context%20regular%20expression%20detection%0A*%20%40param%20%20%7BObject%7D%20%20object%20Anything%0A*%20%40return%20%7BBoolean%7D%20%20%20%20%20%20%20%20true%20if%20the%20object%20is%20a%20regular%20expression%2C%0A*%20false%20otherwise%0A*%2F%0Aexports.isRegExp%20%3D%20function%20(object)%20%7B%0A%20%20%20%20return%20Object.prototype.toString.call(object)%20%3D%3D%3D%20%22%5Bobject%20RegExp%5D%22%3B%0A%7D%3B%0A%0A%2F**%0A%20*%20Merge%20the%20objects%20passed%20as%20parameters%20into%20a%20new%20one.%0A%20*%20%40private%0A%20*%20%40param%20%7B...Object%7D%20var_args%20All%20objects%20to%20merge.%0A%20*%20%40return%20%7BObject%7D%20a%20new%20object%20with%20the%20data%20of%20the%20others.%0A%20*%2F%0Aexports.extend%20%3D%20function()%20%7B%0A%20%20%20%20var%20result%20%3D%20%7B%7D%2C%20i%2C%20attr%3B%0A%20%20%20%20for%20(i%20%3D%200%3B%20i%20%3C%20arguments.length%3B%20i%2B%2B)%20%7B%20%2F%2F%20arguments%20is%20not%20enumerable%20in%20some%20browsers%0A%20%20%20%20%20%20%20%20for%20(attr%20in%20arguments%5Bi%5D)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(arguments%5Bi%5D.hasOwnProperty(attr)%20%26%26%20typeof%20result%5Battr%5D%20%3D%3D%3D%20%22undefined%22)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20result%5Battr%5D%20%3D%20arguments%5Bi%5D%5Battr%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20return%20result%3B%0A%7D%3B%0A%0A%0A%7D%2C%7B%22.%2Fcompressions%22%3A4%2C%22.%2FnodeBuffer%22%3A12%2C%22.%2Fsupport%22%3A18%7D%5D%2C23%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0Avar%20StringReader%20%3D%20require('.%2FstringReader')%3B%0Avar%20NodeBufferReader%20%3D%20require('.%2FnodeBufferReader')%3B%0Avar%20Uint8ArrayReader%20%3D%20require('.%2Fuint8ArrayReader')%3B%0Avar%20ArrayReader%20%3D%20require('.%2FarrayReader')%3B%0Avar%20utils%20%3D%20require('.%2Futils')%3B%0Avar%20sig%20%3D%20require('.%2Fsignature')%3B%0Avar%20ZipEntry%20%3D%20require('.%2FzipEntry')%3B%0Avar%20support%20%3D%20require('.%2Fsupport')%3B%0Avar%20jszipProto%20%3D%20require('.%2Fobject')%3B%0A%2F%2F%20%20class%20ZipEntries%20%7B%7B%7B%0A%2F**%0A%20*%20All%20the%20entries%20in%20the%20zip%20file.%0A%20*%20%40constructor%0A%20*%20%40param%20%7BString%7CArrayBuffer%7CUint8Array%7D%20data%20the%20binary%20stream%20to%20load.%0A%20*%20%40param%20%7BObject%7D%20loadOptions%20Options%20for%20loading%20the%20stream.%0A%20*%2F%0Afunction%20ZipEntries(data%2C%20loadOptions)%20%7B%0A%20%20%20%20this.files%20%3D%20%5B%5D%3B%0A%20%20%20%20this.loadOptions%20%3D%20loadOptions%3B%0A%20%20%20%20if%20(data)%20%7B%0A%20%20%20%20%20%20%20%20this.load(data)%3B%0A%20%20%20%20%7D%0A%7D%0AZipEntries.prototype%20%3D%20%7B%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Check%20that%20the%20reader%20is%20on%20the%20speficied%20signature.%0A%20%20%20%20%20*%20%40param%20%7Bstring%7D%20expectedSignature%20the%20expected%20signature.%0A%20%20%20%20%20*%20%40throws%20%7BError%7D%20if%20it%20is%20an%20other%20signature.%0A%20%20%20%20%20*%2F%0A%20%20%20%20checkSignature%3A%20function(expectedSignature)%20%7B%0A%20%20%20%20%20%20%20%20var%20signature%20%3D%20this.reader.readString(4)%3B%0A%20%20%20%20%20%20%20%20if%20(signature%20!%3D%3D%20expectedSignature)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20Error(%22Corrupted%20zip%20or%20bug%20%3A%20unexpected%20signature%20%22%20%2B%20%22(%22%20%2B%20utils.pretty(signature)%20%2B%20%22%2C%20expected%20%22%20%2B%20utils.pretty(expectedSignature)%20%2B%20%22)%22)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Check%20if%20the%20given%20signature%20is%20at%20the%20given%20index.%0A%20%20%20%20%20*%20%40param%20%7Bnumber%7D%20askedIndex%20the%20index%20to%20check.%0A%20%20%20%20%20*%20%40param%20%7Bstring%7D%20expectedSignature%20the%20signature%20to%20expect.%0A%20%20%20%20%20*%20%40return%20%7Bboolean%7D%20true%20if%20the%20signature%20is%20here%2C%20false%20otherwise.%0A%20%20%20%20%20*%2F%0A%20%20%20%20isSignature%3A%20function(askedIndex%2C%20expectedSignature)%20%7B%0A%20%20%20%20%20%20%20%20var%20currentIndex%20%3D%20this.reader.index%3B%0A%20%20%20%20%20%20%20%20this.reader.setIndex(askedIndex)%3B%0A%20%20%20%20%20%20%20%20var%20signature%20%3D%20this.reader.readString(4)%3B%0A%20%20%20%20%20%20%20%20var%20result%20%3D%20signature%20%3D%3D%3D%20expectedSignature%3B%0A%20%20%20%20%20%20%20%20this.reader.setIndex(currentIndex)%3B%0A%20%20%20%20%20%20%20%20return%20result%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Read%20the%20end%20of%20the%20central%20directory.%0A%20%20%20%20%20*%2F%0A%20%20%20%20readBlockEndOfCentral%3A%20function()%20%7B%0A%20%20%20%20%20%20%20%20this.diskNumber%20%3D%20this.reader.readInt(2)%3B%0A%20%20%20%20%20%20%20%20this.diskWithCentralDirStart%20%3D%20this.reader.readInt(2)%3B%0A%20%20%20%20%20%20%20%20this.centralDirRecordsOnThisDisk%20%3D%20this.reader.readInt(2)%3B%0A%20%20%20%20%20%20%20%20this.centralDirRecords%20%3D%20this.reader.readInt(2)%3B%0A%20%20%20%20%20%20%20%20this.centralDirSize%20%3D%20this.reader.readInt(4)%3B%0A%20%20%20%20%20%20%20%20this.centralDirOffset%20%3D%20this.reader.readInt(4)%3B%0A%0A%20%20%20%20%20%20%20%20this.zipCommentLength%20%3D%20this.reader.readInt(2)%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20warning%20%3A%20the%20encoding%20depends%20of%20the%20system%20locale%0A%20%20%20%20%20%20%20%20%2F%2F%20On%20a%20linux%20machine%20with%20LANG%3Den_US.utf8%2C%20this%20field%20is%20utf8%20encoded.%0A%20%20%20%20%20%20%20%20%2F%2F%20On%20a%20windows%20machine%2C%20this%20field%20is%20encoded%20with%20the%20localized%20windows%20code%20page.%0A%20%20%20%20%20%20%20%20var%20zipComment%20%3D%20this.reader.readData(this.zipCommentLength)%3B%0A%20%20%20%20%20%20%20%20var%20decodeParamType%20%3D%20support.uint8array%20%3F%20%22uint8array%22%20%3A%20%22array%22%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20To%20get%20consistent%20behavior%20with%20the%20generation%20part%2C%20we%20will%20assume%20that%0A%20%20%20%20%20%20%20%20%2F%2F%20this%20is%20utf8%20encoded%20unless%20specified%20otherwise.%0A%20%20%20%20%20%20%20%20var%20decodeContent%20%3D%20utils.transformTo(decodeParamType%2C%20zipComment)%3B%0A%20%20%20%20%20%20%20%20this.zipComment%20%3D%20this.loadOptions.decodeFileName(decodeContent)%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Read%20the%20end%20of%20the%20Zip%2064%20central%20directory.%0A%20%20%20%20%20*%20Not%20merged%20with%20the%20method%20readEndOfCentral%20%3A%0A%20%20%20%20%20*%20The%20end%20of%20central%20can%20coexist%20with%20its%20Zip64%20brother%2C%0A%20%20%20%20%20*%20I%20don't%20want%20to%20read%20the%20wrong%20number%20of%20bytes%20!%0A%20%20%20%20%20*%2F%0A%20%20%20%20readBlockZip64EndOfCentral%3A%20function()%20%7B%0A%20%20%20%20%20%20%20%20this.zip64EndOfCentralSize%20%3D%20this.reader.readInt(8)%3B%0A%20%20%20%20%20%20%20%20this.versionMadeBy%20%3D%20this.reader.readString(2)%3B%0A%20%20%20%20%20%20%20%20this.versionNeeded%20%3D%20this.reader.readInt(2)%3B%0A%20%20%20%20%20%20%20%20this.diskNumber%20%3D%20this.reader.readInt(4)%3B%0A%20%20%20%20%20%20%20%20this.diskWithCentralDirStart%20%3D%20this.reader.readInt(4)%3B%0A%20%20%20%20%20%20%20%20this.centralDirRecordsOnThisDisk%20%3D%20this.reader.readInt(8)%3B%0A%20%20%20%20%20%20%20%20this.centralDirRecords%20%3D%20this.reader.readInt(8)%3B%0A%20%20%20%20%20%20%20%20this.centralDirSize%20%3D%20this.reader.readInt(8)%3B%0A%20%20%20%20%20%20%20%20this.centralDirOffset%20%3D%20this.reader.readInt(8)%3B%0A%0A%20%20%20%20%20%20%20%20this.zip64ExtensibleData%20%3D%20%7B%7D%3B%0A%20%20%20%20%20%20%20%20var%20extraDataSize%20%3D%20this.zip64EndOfCentralSize%20-%2044%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20index%20%3D%200%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20extraFieldId%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20extraFieldLength%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20extraFieldValue%3B%0A%20%20%20%20%20%20%20%20while%20(index%20%3C%20extraDataSize)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20extraFieldId%20%3D%20this.reader.readInt(2)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20extraFieldLength%20%3D%20this.reader.readInt(4)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20extraFieldValue%20%3D%20this.reader.readString(extraFieldLength)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.zip64ExtensibleData%5BextraFieldId%5D%20%3D%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20id%3A%20extraFieldId%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20length%3A%20extraFieldLength%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20value%3A%20extraFieldValue%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Read%20the%20end%20of%20the%20Zip%2064%20central%20directory%20locator.%0A%20%20%20%20%20*%2F%0A%20%20%20%20readBlockZip64EndOfCentralLocator%3A%20function()%20%7B%0A%20%20%20%20%20%20%20%20this.diskWithZip64CentralDirStart%20%3D%20this.reader.readInt(4)%3B%0A%20%20%20%20%20%20%20%20this.relativeOffsetEndOfZip64CentralDir%20%3D%20this.reader.readInt(8)%3B%0A%20%20%20%20%20%20%20%20this.disksCount%20%3D%20this.reader.readInt(4)%3B%0A%20%20%20%20%20%20%20%20if%20(this.disksCount%20%3E%201)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20Error(%22Multi-volumes%20zip%20are%20not%20supported%22)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Read%20the%20local%20files%2C%20based%20on%20the%20offset%20read%20in%20the%20central%20part.%0A%20%20%20%20%20*%2F%0A%20%20%20%20readLocalFiles%3A%20function()%20%7B%0A%20%20%20%20%20%20%20%20var%20i%2C%20file%3B%0A%20%20%20%20%20%20%20%20for%20(i%20%3D%200%3B%20i%20%3C%20this.files.length%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20file%20%3D%20this.files%5Bi%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.reader.setIndex(file.localHeaderOffset)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.checkSignature(sig.LOCAL_FILE_HEADER)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20file.readLocalPart(this.reader)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20file.handleUTF8()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20file.processAttributes()%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Read%20the%20central%20directory.%0A%20%20%20%20%20*%2F%0A%20%20%20%20readCentralDir%3A%20function()%20%7B%0A%20%20%20%20%20%20%20%20var%20file%3B%0A%0A%20%20%20%20%20%20%20%20this.reader.setIndex(this.centralDirOffset)%3B%0A%20%20%20%20%20%20%20%20while%20(this.reader.readString(4)%20%3D%3D%3D%20sig.CENTRAL_FILE_HEADER)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20file%20%3D%20new%20ZipEntry(%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20zip64%3A%20this.zip64%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%20this.loadOptions)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20file.readCentralPart(this.reader)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.files.push(file)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20if%20(this.centralDirRecords%20!%3D%3D%20this.files.length)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(this.centralDirRecords%20!%3D%3D%200%20%26%26%20this.files.length%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20We%20expected%20some%20records%20but%20couldn't%20find%20ANY.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20This%20is%20really%20suspicious%2C%20as%20if%20something%20went%20wrong.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20Error(%22Corrupted%20zip%20or%20bug%3A%20expected%20%22%20%2B%20this.centralDirRecords%20%2B%20%22%20records%20in%20central%20dir%2C%20got%20%22%20%2B%20this.files.length)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20We%20found%20some%20records%20but%20not%20all.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Something%20is%20wrong%20but%20we%20got%20something%20for%20the%20user%3A%20no%20error%20here.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20console.warn(%22expected%22%2C%20this.centralDirRecords%2C%20%22records%20in%20central%20dir%2C%20got%22%2C%20this.files.length)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Read%20the%20end%20of%20central%20directory.%0A%20%20%20%20%20*%2F%0A%20%20%20%20readEndOfCentral%3A%20function()%20%7B%0A%20%20%20%20%20%20%20%20var%20offset%20%3D%20this.reader.lastIndexOfSignature(sig.CENTRAL_DIRECTORY_END)%3B%0A%20%20%20%20%20%20%20%20if%20(offset%20%3C%200)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Check%20if%20the%20content%20is%20a%20truncated%20zip%20or%20complete%20garbage.%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20A%20%22LOCAL_FILE_HEADER%22%20is%20not%20required%20at%20the%20beginning%20(auto%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20extractible%20zip%20for%20example)%20but%20it%20can%20give%20a%20good%20hint.%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20If%20an%20ajax%20request%20was%20used%20without%20responseType%2C%20we%20will%20also%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20get%20unreadable%20data.%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20isGarbage%20%3D%20!this.isSignature(0%2C%20sig.LOCAL_FILE_HEADER)%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(isGarbage)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20Error(%22Can't%20find%20end%20of%20central%20directory%20%3A%20is%20this%20a%20zip%20file%20%3F%20%22%20%2B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22If%20it%20is%2C%20see%20http%3A%2F%2Fstuk.github.io%2Fjszip%2Fdocumentation%2Fhowto%2Fread_zip.html%22)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20Error(%22Corrupted%20zip%20%3A%20can't%20find%20end%20of%20central%20directory%22)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20this.reader.setIndex(offset)%3B%0A%20%20%20%20%20%20%20%20var%20endOfCentralDirOffset%20%3D%20offset%3B%0A%20%20%20%20%20%20%20%20this.checkSignature(sig.CENTRAL_DIRECTORY_END)%3B%0A%20%20%20%20%20%20%20%20this.readBlockEndOfCentral()%3B%0A%0A%0A%20%20%20%20%20%20%20%20%2F*%20extract%20from%20the%20zip%20spec%20%3A%0A%20%20%20%20%20%20%20%20%20%20%20%204)%20%20If%20one%20of%20the%20fields%20in%20the%20end%20of%20central%20directory%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20record%20is%20too%20small%20to%20hold%20required%20data%2C%20the%20field%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20should%20be%20set%20to%20-1%20(0xFFFF%20or%200xFFFFFFFF)%20and%20the%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ZIP64%20format%20record%20should%20be%20created.%0A%20%20%20%20%20%20%20%20%20%20%20%205)%20%20The%20end%20of%20central%20directory%20record%20and%20the%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Zip64%20end%20of%20central%20directory%20locator%20record%20must%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20reside%20on%20the%20same%20disk%20when%20splitting%20or%20spanning%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20an%20archive.%0A%20%20%20%20%20%20%20%20%20*%2F%0A%20%20%20%20%20%20%20%20if%20(this.diskNumber%20%3D%3D%3D%20utils.MAX_VALUE_16BITS%20%7C%7C%20this.diskWithCentralDirStart%20%3D%3D%3D%20utils.MAX_VALUE_16BITS%20%7C%7C%20this.centralDirRecordsOnThisDisk%20%3D%3D%3D%20utils.MAX_VALUE_16BITS%20%7C%7C%20this.centralDirRecords%20%3D%3D%3D%20utils.MAX_VALUE_16BITS%20%7C%7C%20this.centralDirSize%20%3D%3D%3D%20utils.MAX_VALUE_32BITS%20%7C%7C%20this.centralDirOffset%20%3D%3D%3D%20utils.MAX_VALUE_32BITS)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.zip64%20%3D%20true%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F*%0A%20%20%20%20%20%20%20%20%20%20%20%20Warning%20%3A%20the%20zip64%20extension%20is%20supported%2C%20but%20ONLY%20if%20the%2064bits%20integer%20read%20from%0A%20%20%20%20%20%20%20%20%20%20%20%20the%20zip%20file%20can%20fit%20into%20a%2032bits%20integer.%20This%20cannot%20be%20solved%20%3A%20Javascript%20represents%0A%20%20%20%20%20%20%20%20%20%20%20%20all%20numbers%20as%2064-bit%20double%20precision%20IEEE%20754%20floating%20point%20numbers.%0A%20%20%20%20%20%20%20%20%20%20%20%20So%2C%20we%20have%2053bits%20for%20integers%20and%20bitwise%20operations%20treat%20everything%20as%2032bits.%0A%20%20%20%20%20%20%20%20%20%20%20%20see%20https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FJavaScript%2FReference%2FOperators%2FBitwise_Operators%0A%20%20%20%20%20%20%20%20%20%20%20%20and%20http%3A%2F%2Fwww.ecma-international.org%2Fpublications%2Ffiles%2FECMA-ST%2FECMA-262.pdf%20section%208.5%0A%20%20%20%20%20%20%20%20%20%20%20%20*%2F%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20should%20look%20for%20a%20zip64%20EOCD%20locator%0A%20%20%20%20%20%20%20%20%20%20%20%20offset%20%3D%20this.reader.lastIndexOfSignature(sig.ZIP64_CENTRAL_DIRECTORY_LOCATOR)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(offset%20%3C%200)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20Error(%22Corrupted%20zip%20%3A%20can't%20find%20the%20ZIP64%20end%20of%20central%20directory%20locator%22)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20this.reader.setIndex(offset)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.checkSignature(sig.ZIP64_CENTRAL_DIRECTORY_LOCATOR)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.readBlockZip64EndOfCentralLocator()%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20now%20the%20zip64%20EOCD%20record%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(!this.isSignature(this.relativeOffsetEndOfZip64CentralDir%2C%20sig.ZIP64_CENTRAL_DIRECTORY_END))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20console.warn(%22ZIP64%20end%20of%20central%20directory%20not%20where%20expected.%22)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20this.relativeOffsetEndOfZip64CentralDir%20%3D%20this.reader.lastIndexOfSignature(sig.ZIP64_CENTRAL_DIRECTORY_END)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(this.relativeOffsetEndOfZip64CentralDir%20%3C%200)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20Error(%22Corrupted%20zip%20%3A%20can't%20find%20the%20ZIP64%20end%20of%20central%20directory%22)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.checkSignature(sig.ZIP64_CENTRAL_DIRECTORY_END)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.readBlockZip64EndOfCentral()%3B%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20var%20expectedEndOfCentralDirOffset%20%3D%20this.centralDirOffset%20%2B%20this.centralDirSize%3B%0A%20%20%20%20%20%20%20%20if%20(this.zip64)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20expectedEndOfCentralDirOffset%20%2B%3D%2020%3B%20%2F%2F%20end%20of%20central%20dir%2064%20locator%0A%20%20%20%20%20%20%20%20%20%20%20%20expectedEndOfCentralDirOffset%20%2B%3D%2012%20%2F*%20should%20not%20include%20the%20leading%2012%20bytes%20*%2F%20%2B%20this.zip64EndOfCentralSize%3B%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20var%20extraBytes%20%3D%20endOfCentralDirOffset%20-%20expectedEndOfCentralDirOffset%3B%0A%0A%20%20%20%20%20%20%20%20if%20(extraBytes%20%3E%200)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20console.warn(extraBytes%2C%20%22extra%20bytes%20at%20beginning%20or%20within%20zipfile%22)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(this.isSignature(endOfCentralDirOffset%2C%20sig.CENTRAL_FILE_HEADER))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20The%20offsets%20seem%20wrong%2C%20but%20we%20have%20something%20at%20the%20specified%20offset.%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20So%E2%80%A6%20we%20keep%20it.%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20the%20offset%20is%20wrong%2C%20update%20the%20%22zero%22%20of%20the%20reader%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20this%20happens%20if%20data%20has%20been%20prepended%20(crx%20files%20for%20example)%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20this.reader.zero%20%3D%20extraBytes%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%20else%20if%20(extraBytes%20%3C%200)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20Error(%22Corrupted%20zip%3A%20missing%20%22%20%2B%20Math.abs(extraBytes)%20%2B%20%22%20bytes.%22)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%2C%0A%20%20%20%20prepareReader%3A%20function(data)%20%7B%0A%20%20%20%20%20%20%20%20var%20type%20%3D%20utils.getTypeOf(data)%3B%0A%20%20%20%20%20%20%20%20utils.checkSupport(type)%3B%0A%20%20%20%20%20%20%20%20if%20(type%20%3D%3D%3D%20%22string%22%20%26%26%20!support.uint8array)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.reader%20%3D%20new%20StringReader(data%2C%20this.loadOptions.optimizedBinaryString)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20else%20if%20(type%20%3D%3D%3D%20%22nodebuffer%22)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.reader%20%3D%20new%20NodeBufferReader(data)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20else%20if%20(support.uint8array)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.reader%20%3D%20new%20Uint8ArrayReader(utils.transformTo(%22uint8array%22%2C%20data))%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20if%20(support.array)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.reader%20%3D%20new%20ArrayReader(utils.transformTo(%22array%22%2C%20data))%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20Error(%22Unexpected%20error%3A%20unsupported%20type%20'%22%20%2B%20type%20%2B%20%22'%22)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Read%20a%20zip%20file%20and%20create%20ZipEntries.%0A%20%20%20%20%20*%20%40param%20%7BString%7CArrayBuffer%7CUint8Array%7CBuffer%7D%20data%20the%20binary%20string%20representing%20a%20zip%20file.%0A%20%20%20%20%20*%2F%0A%20%20%20%20load%3A%20function(data)%20%7B%0A%20%20%20%20%20%20%20%20this.prepareReader(data)%3B%0A%20%20%20%20%20%20%20%20this.readEndOfCentral()%3B%0A%20%20%20%20%20%20%20%20this.readCentralDir()%3B%0A%20%20%20%20%20%20%20%20this.readLocalFiles()%3B%0A%20%20%20%20%7D%0A%7D%3B%0A%2F%2F%20%7D%7D%7D%20end%20of%20ZipEntries%0Amodule.exports%20%3D%20ZipEntries%3B%0A%0A%7D%2C%7B%22.%2FarrayReader%22%3A1%2C%22.%2FnodeBufferReader%22%3A13%2C%22.%2Fobject%22%3A14%2C%22.%2Fsignature%22%3A15%2C%22.%2FstringReader%22%3A16%2C%22.%2Fsupport%22%3A18%2C%22.%2Fuint8ArrayReader%22%3A19%2C%22.%2Futils%22%3A22%2C%22.%2FzipEntry%22%3A24%7D%5D%2C24%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0Avar%20StringReader%20%3D%20require('.%2FstringReader')%3B%0Avar%20utils%20%3D%20require('.%2Futils')%3B%0Avar%20CompressedObject%20%3D%20require('.%2FcompressedObject')%3B%0Avar%20jszipProto%20%3D%20require('.%2Fobject')%3B%0Avar%20support%20%3D%20require('.%2Fsupport')%3B%0A%0Avar%20MADE_BY_DOS%20%3D%200x00%3B%0Avar%20MADE_BY_UNIX%20%3D%200x03%3B%0A%0A%2F%2F%20class%20ZipEntry%20%7B%7B%7B%0A%2F**%0A%20*%20An%20entry%20in%20the%20zip%20file.%0A%20*%20%40constructor%0A%20*%20%40param%20%7BObject%7D%20options%20Options%20of%20the%20current%20file.%0A%20*%20%40param%20%7BObject%7D%20loadOptions%20Options%20for%20loading%20the%20stream.%0A%20*%2F%0Afunction%20ZipEntry(options%2C%20loadOptions)%20%7B%0A%20%20%20%20this.options%20%3D%20options%3B%0A%20%20%20%20this.loadOptions%20%3D%20loadOptions%3B%0A%7D%0AZipEntry.prototype%20%3D%20%7B%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20say%20if%20the%20file%20is%20encrypted.%0A%20%20%20%20%20*%20%40return%20%7Bboolean%7D%20true%20if%20the%20file%20is%20encrypted%2C%20false%20otherwise.%0A%20%20%20%20%20*%2F%0A%20%20%20%20isEncrypted%3A%20function()%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20bit%201%20is%20set%0A%20%20%20%20%20%20%20%20return%20(this.bitFlag%20%26%200x0001)%20%3D%3D%3D%200x0001%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20say%20if%20the%20file%20has%20utf-8%20filename%2Fcomment.%0A%20%20%20%20%20*%20%40return%20%7Bboolean%7D%20true%20if%20the%20filename%2Fcomment%20is%20in%20utf-8%2C%20false%20otherwise.%0A%20%20%20%20%20*%2F%0A%20%20%20%20useUTF8%3A%20function()%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20bit%2011%20is%20set%0A%20%20%20%20%20%20%20%20return%20(this.bitFlag%20%26%200x0800)%20%3D%3D%3D%200x0800%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Prepare%20the%20function%20used%20to%20generate%20the%20compressed%20content%20from%20this%20ZipFile.%0A%20%20%20%20%20*%20%40param%20%7BDataReader%7D%20reader%20the%20reader%20to%20use.%0A%20%20%20%20%20*%20%40param%20%7Bnumber%7D%20from%20the%20offset%20from%20where%20we%20should%20read%20the%20data.%0A%20%20%20%20%20*%20%40param%20%7Bnumber%7D%20length%20the%20length%20of%20the%20data%20to%20read.%0A%20%20%20%20%20*%20%40return%20%7BFunction%7D%20the%20callback%20to%20get%20the%20compressed%20content%20(the%20type%20depends%20of%20the%20DataReader%20class).%0A%20%20%20%20%20*%2F%0A%20%20%20%20prepareCompressedContent%3A%20function(reader%2C%20from%2C%20length)%20%7B%0A%20%20%20%20%20%20%20%20return%20function()%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20previousIndex%20%3D%20reader.index%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20reader.setIndex(from)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20compressedFileData%20%3D%20reader.readData(length)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20reader.setIndex(previousIndex)%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20compressedFileData%3B%0A%20%20%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Prepare%20the%20function%20used%20to%20generate%20the%20uncompressed%20content%20from%20this%20ZipFile.%0A%20%20%20%20%20*%20%40param%20%7BDataReader%7D%20reader%20the%20reader%20to%20use.%0A%20%20%20%20%20*%20%40param%20%7Bnumber%7D%20from%20the%20offset%20from%20where%20we%20should%20read%20the%20data.%0A%20%20%20%20%20*%20%40param%20%7Bnumber%7D%20length%20the%20length%20of%20the%20data%20to%20read.%0A%20%20%20%20%20*%20%40param%20%7BJSZip.compression%7D%20compression%20the%20compression%20used%20on%20this%20file.%0A%20%20%20%20%20*%20%40param%20%7Bnumber%7D%20uncompressedSize%20the%20uncompressed%20size%20to%20expect.%0A%20%20%20%20%20*%20%40return%20%7BFunction%7D%20the%20callback%20to%20get%20the%20uncompressed%20content%20(the%20type%20depends%20of%20the%20DataReader%20class).%0A%20%20%20%20%20*%2F%0A%20%20%20%20prepareContent%3A%20function(reader%2C%20from%2C%20length%2C%20compression%2C%20uncompressedSize)%20%7B%0A%20%20%20%20%20%20%20%20return%20function()%20%7B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20compressedFileData%20%3D%20utils.transformTo(compression.uncompressInputType%2C%20this.getCompressedContent())%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20uncompressedFileData%20%3D%20compression.uncompress(compressedFileData)%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(uncompressedFileData.length%20!%3D%3D%20uncompressedSize)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20Error(%22Bug%20%3A%20uncompressed%20data%20size%20mismatch%22)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20uncompressedFileData%3B%0A%20%20%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Read%20the%20local%20part%20of%20a%20zip%20file%20and%20add%20the%20info%20in%20this%20object.%0A%20%20%20%20%20*%20%40param%20%7BDataReader%7D%20reader%20the%20reader%20to%20use.%0A%20%20%20%20%20*%2F%0A%20%20%20%20readLocalPart%3A%20function(reader)%20%7B%0A%20%20%20%20%20%20%20%20var%20compression%2C%20localExtraFieldsLength%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20we%20already%20know%20everything%20from%20the%20central%20dir%20!%0A%20%20%20%20%20%20%20%20%2F%2F%20If%20the%20central%20dir%20data%20are%20false%2C%20we%20are%20doomed.%0A%20%20%20%20%20%20%20%20%2F%2F%20On%20the%20bright%20side%2C%20the%20local%20part%20is%20scary%20%20%3A%20zip64%2C%20data%20descriptors%2C%20both%2C%20etc.%0A%20%20%20%20%20%20%20%20%2F%2F%20The%20less%20data%20we%20get%20here%2C%20the%20more%20reliable%20this%20should%20be.%0A%20%20%20%20%20%20%20%20%2F%2F%20Let's%20skip%20the%20whole%20header%20and%20dash%20to%20the%20data%20!%0A%20%20%20%20%20%20%20%20reader.skip(22)%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20in%20some%20zip%20created%20on%20windows%2C%20the%20filename%20stored%20in%20the%20central%20dir%20contains%20%5C%20instead%20of%20%2F.%0A%20%20%20%20%20%20%20%20%2F%2F%20Strangely%2C%20the%20filename%20here%20is%20OK.%0A%20%20%20%20%20%20%20%20%2F%2F%20I%20would%20love%20to%20treat%20these%20zip%20files%20as%20corrupted%20(see%20http%3A%2F%2Fwww.info-zip.org%2FFAQ.html%23backslashes%0A%20%20%20%20%20%20%20%20%2F%2F%20or%20APPNOTE%234.4.17.1%2C%20%22All%20slashes%20MUST%20be%20forward%20slashes%20'%2F'%22)%20but%20there%20are%20a%20lot%20of%20bad%20zip%20generators...%0A%20%20%20%20%20%20%20%20%2F%2F%20Search%20%22unzip%20mismatching%20%22local%22%20filename%20continuing%20with%20%22central%22%20filename%20version%22%20on%0A%20%20%20%20%20%20%20%20%2F%2F%20the%20internet.%0A%20%20%20%20%20%20%20%20%2F%2F%0A%20%20%20%20%20%20%20%20%2F%2F%20I%20think%20I%20see%20the%20logic%20here%20%3A%20the%20central%20directory%20is%20used%20to%20display%0A%20%20%20%20%20%20%20%20%2F%2F%20content%20and%20the%20local%20directory%20is%20used%20to%20extract%20the%20files.%20Mixing%20%2F%20and%20%5C%0A%20%20%20%20%20%20%20%20%2F%2F%20may%20be%20used%20to%20display%20%5C%20to%20windows%20users%20and%20use%20%2F%20when%20extracting%20the%20files.%0A%20%20%20%20%20%20%20%20%2F%2F%20Unfortunately%2C%20this%20lead%20also%20to%20some%20issues%20%3A%20http%3A%2F%2Fseclists.org%2Ffulldisclosure%2F2009%2FSep%2F394%0A%20%20%20%20%20%20%20%20this.fileNameLength%20%3D%20reader.readInt(2)%3B%0A%20%20%20%20%20%20%20%20localExtraFieldsLength%20%3D%20reader.readInt(2)%3B%20%2F%2F%20can't%20be%20sure%20this%20will%20be%20the%20same%20as%20the%20central%20dir%0A%20%20%20%20%20%20%20%20this.fileName%20%3D%20reader.readData(this.fileNameLength)%3B%0A%20%20%20%20%20%20%20%20reader.skip(localExtraFieldsLength)%3B%0A%0A%20%20%20%20%20%20%20%20if%20(this.compressedSize%20%3D%3D%20-1%20%7C%7C%20this.uncompressedSize%20%3D%3D%20-1)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20Error(%22Bug%20or%20corrupted%20zip%20%3A%20didn't%20get%20enough%20informations%20from%20the%20central%20directory%20%22%20%2B%20%22(compressedSize%20%3D%3D%20-1%20%7C%7C%20uncompressedSize%20%3D%3D%20-1)%22)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20compression%20%3D%20utils.findCompression(this.compressionMethod)%3B%0A%20%20%20%20%20%20%20%20if%20(compression%20%3D%3D%3D%20null)%20%7B%20%2F%2F%20no%20compression%20found%0A%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20Error(%22Corrupted%20zip%20%3A%20compression%20%22%20%2B%20utils.pretty(this.compressionMethod)%20%2B%20%22%20unknown%20(inner%20file%20%3A%20%22%20%2B%20%20utils.transformTo(%22string%22%2C%20this.fileName)%20%2B%20%22)%22)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20this.decompressed%20%3D%20new%20CompressedObject()%3B%0A%20%20%20%20%20%20%20%20this.decompressed.compressedSize%20%3D%20this.compressedSize%3B%0A%20%20%20%20%20%20%20%20this.decompressed.uncompressedSize%20%3D%20this.uncompressedSize%3B%0A%20%20%20%20%20%20%20%20this.decompressed.crc32%20%3D%20this.crc32%3B%0A%20%20%20%20%20%20%20%20this.decompressed.compressionMethod%20%3D%20this.compressionMethod%3B%0A%20%20%20%20%20%20%20%20this.decompressed.getCompressedContent%20%3D%20this.prepareCompressedContent(reader%2C%20reader.index%2C%20this.compressedSize%2C%20compression)%3B%0A%20%20%20%20%20%20%20%20this.decompressed.getContent%20%3D%20this.prepareContent(reader%2C%20reader.index%2C%20this.compressedSize%2C%20compression%2C%20this.uncompressedSize)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20we%20need%20to%20compute%20the%20crc32...%0A%20%20%20%20%20%20%20%20if%20(this.loadOptions.checkCRC32)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.decompressed%20%3D%20utils.transformTo(%22string%22%2C%20this.decompressed.getContent())%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(jszipProto.crc32(this.decompressed)%20!%3D%3D%20this.crc32)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20Error(%22Corrupted%20zip%20%3A%20CRC32%20mismatch%22)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%2C%0A%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Read%20the%20central%20part%20of%20a%20zip%20file%20and%20add%20the%20info%20in%20this%20object.%0A%20%20%20%20%20*%20%40param%20%7BDataReader%7D%20reader%20the%20reader%20to%20use.%0A%20%20%20%20%20*%2F%0A%20%20%20%20readCentralPart%3A%20function(reader)%20%7B%0A%20%20%20%20%20%20%20%20this.versionMadeBy%20%3D%20reader.readInt(2)%3B%0A%20%20%20%20%20%20%20%20this.versionNeeded%20%3D%20reader.readInt(2)%3B%0A%20%20%20%20%20%20%20%20this.bitFlag%20%3D%20reader.readInt(2)%3B%0A%20%20%20%20%20%20%20%20this.compressionMethod%20%3D%20reader.readString(2)%3B%0A%20%20%20%20%20%20%20%20this.date%20%3D%20reader.readDate()%3B%0A%20%20%20%20%20%20%20%20this.crc32%20%3D%20reader.readInt(4)%3B%0A%20%20%20%20%20%20%20%20this.compressedSize%20%3D%20reader.readInt(4)%3B%0A%20%20%20%20%20%20%20%20this.uncompressedSize%20%3D%20reader.readInt(4)%3B%0A%20%20%20%20%20%20%20%20this.fileNameLength%20%3D%20reader.readInt(2)%3B%0A%20%20%20%20%20%20%20%20this.extraFieldsLength%20%3D%20reader.readInt(2)%3B%0A%20%20%20%20%20%20%20%20this.fileCommentLength%20%3D%20reader.readInt(2)%3B%0A%20%20%20%20%20%20%20%20this.diskNumberStart%20%3D%20reader.readInt(2)%3B%0A%20%20%20%20%20%20%20%20this.internalFileAttributes%20%3D%20reader.readInt(2)%3B%0A%20%20%20%20%20%20%20%20this.externalFileAttributes%20%3D%20reader.readInt(4)%3B%0A%20%20%20%20%20%20%20%20this.localHeaderOffset%20%3D%20reader.readInt(4)%3B%0A%0A%20%20%20%20%20%20%20%20if%20(this.isEncrypted())%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20throw%20new%20Error(%22Encrypted%20zip%20are%20not%20supported%22)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20this.fileName%20%3D%20reader.readData(this.fileNameLength)%3B%0A%20%20%20%20%20%20%20%20this.readExtraFields(reader)%3B%0A%20%20%20%20%20%20%20%20this.parseZIP64ExtraField(reader)%3B%0A%20%20%20%20%20%20%20%20this.fileComment%20%3D%20reader.readData(this.fileCommentLength)%3B%0A%20%20%20%20%7D%2C%0A%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Parse%20the%20external%20file%20attributes%20and%20get%20the%20unix%2Fdos%20permissions.%0A%20%20%20%20%20*%2F%0A%20%20%20%20processAttributes%3A%20function%20()%20%7B%0A%20%20%20%20%20%20%20%20this.unixPermissions%20%3D%20null%3B%0A%20%20%20%20%20%20%20%20this.dosPermissions%20%3D%20null%3B%0A%20%20%20%20%20%20%20%20var%20madeBy%20%3D%20this.versionMadeBy%20%3E%3E%208%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20Check%20if%20we%20have%20the%20DOS%20directory%20flag%20set.%0A%20%20%20%20%20%20%20%20%2F%2F%20We%20look%20for%20it%20in%20the%20DOS%20and%20UNIX%20permissions%0A%20%20%20%20%20%20%20%20%2F%2F%20but%20some%20unknown%20platform%20could%20set%20it%20as%20a%20compatibility%20flag.%0A%20%20%20%20%20%20%20%20this.dir%20%3D%20this.externalFileAttributes%20%26%200x0010%20%3F%20true%20%3A%20false%3B%0A%0A%20%20%20%20%20%20%20%20if(madeBy%20%3D%3D%3D%20MADE_BY_DOS)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20first%206%20bits%20(0%20to%205)%0A%20%20%20%20%20%20%20%20%20%20%20%20this.dosPermissions%20%3D%20this.externalFileAttributes%20%26%200x3F%3B%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20if(madeBy%20%3D%3D%3D%20MADE_BY_UNIX)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.unixPermissions%20%3D%20(this.externalFileAttributes%20%3E%3E%2016)%20%26%200xFFFF%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20the%20octal%20permissions%20are%20in%20(this.unixPermissions%20%26%200x01FF).toString(8)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20fail%20safe%20%3A%20if%20the%20name%20ends%20with%20a%20%2F%20it%20probably%20means%20a%20folder%0A%20%20%20%20%20%20%20%20if%20(!this.dir%20%26%26%20this.fileNameStr.slice(-1)%20%3D%3D%3D%20'%2F')%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.dir%20%3D%20true%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%2C%0A%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Parse%20the%20ZIP64%20extra%20field%20and%20merge%20the%20info%20in%20the%20current%20ZipEntry.%0A%20%20%20%20%20*%20%40param%20%7BDataReader%7D%20reader%20the%20reader%20to%20use.%0A%20%20%20%20%20*%2F%0A%20%20%20%20parseZIP64ExtraField%3A%20function(reader)%20%7B%0A%0A%20%20%20%20%20%20%20%20if%20(!this.extraFields%5B0x0001%5D)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%3B%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20should%20be%20something%2C%20preparing%20the%20extra%20reader%0A%20%20%20%20%20%20%20%20var%20extraReader%20%3D%20new%20StringReader(this.extraFields%5B0x0001%5D.value)%3B%0A%0A%20%20%20%20%20%20%20%20%2F%2F%20I%20really%20hope%20that%20these%2064bits%20integer%20can%20fit%20in%2032%20bits%20integer%2C%20because%20js%0A%20%20%20%20%20%20%20%20%2F%2F%20won't%20let%20us%20have%20more.%0A%20%20%20%20%20%20%20%20if%20(this.uncompressedSize%20%3D%3D%3D%20utils.MAX_VALUE_32BITS)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.uncompressedSize%20%3D%20extraReader.readInt(8)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20if%20(this.compressedSize%20%3D%3D%3D%20utils.MAX_VALUE_32BITS)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.compressedSize%20%3D%20extraReader.readInt(8)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20if%20(this.localHeaderOffset%20%3D%3D%3D%20utils.MAX_VALUE_32BITS)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.localHeaderOffset%20%3D%20extraReader.readInt(8)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20if%20(this.diskNumberStart%20%3D%3D%3D%20utils.MAX_VALUE_32BITS)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.diskNumberStart%20%3D%20extraReader.readInt(4)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Read%20the%20central%20part%20of%20a%20zip%20file%20and%20add%20the%20info%20in%20this%20object.%0A%20%20%20%20%20*%20%40param%20%7BDataReader%7D%20reader%20the%20reader%20to%20use.%0A%20%20%20%20%20*%2F%0A%20%20%20%20readExtraFields%3A%20function(reader)%20%7B%0A%20%20%20%20%20%20%20%20var%20start%20%3D%20reader.index%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20extraFieldId%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20extraFieldLength%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20extraFieldValue%3B%0A%0A%20%20%20%20%20%20%20%20this.extraFields%20%3D%20this.extraFields%20%7C%7C%20%7B%7D%3B%0A%0A%20%20%20%20%20%20%20%20while%20(reader.index%20%3C%20start%20%2B%20this.extraFieldsLength)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20extraFieldId%20%3D%20reader.readInt(2)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20extraFieldLength%20%3D%20reader.readInt(2)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20extraFieldValue%20%3D%20reader.readString(extraFieldLength)%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20this.extraFields%5BextraFieldId%5D%20%3D%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20id%3A%20extraFieldId%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20length%3A%20extraFieldLength%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20value%3A%20extraFieldValue%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Apply%20an%20UTF8%20transformation%20if%20needed.%0A%20%20%20%20%20*%2F%0A%20%20%20%20handleUTF8%3A%20function()%20%7B%0A%20%20%20%20%20%20%20%20var%20decodeParamType%20%3D%20support.uint8array%20%3F%20%22uint8array%22%20%3A%20%22array%22%3B%0A%20%20%20%20%20%20%20%20if%20(this.useUTF8())%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.fileNameStr%20%3D%20jszipProto.utf8decode(this.fileName)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20this.fileCommentStr%20%3D%20jszipProto.utf8decode(this.fileComment)%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20upath%20%3D%20this.findExtraFieldUnicodePath()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(upath%20!%3D%3D%20null)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20this.fileNameStr%20%3D%20upath%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20var%20fileNameByteArray%20%3D%20%20utils.transformTo(decodeParamType%2C%20this.fileName)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20this.fileNameStr%20%3D%20this.loadOptions.decodeFileName(fileNameByteArray)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20ucomment%20%3D%20this.findExtraFieldUnicodeComment()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(ucomment%20!%3D%3D%20null)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20this.fileCommentStr%20%3D%20ucomment%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20var%20commentByteArray%20%3D%20%20utils.transformTo(decodeParamType%2C%20this.fileComment)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20this.fileCommentStr%20%3D%20this.loadOptions.decodeFileName(commentByteArray)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%2C%0A%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Find%20the%20unicode%20path%20declared%20in%20the%20extra%20field%2C%20if%20any.%0A%20%20%20%20%20*%20%40return%20%7BString%7D%20the%20unicode%20path%2C%20null%20otherwise.%0A%20%20%20%20%20*%2F%0A%20%20%20%20findExtraFieldUnicodePath%3A%20function()%20%7B%0A%20%20%20%20%20%20%20%20var%20upathField%20%3D%20this.extraFields%5B0x7075%5D%3B%0A%20%20%20%20%20%20%20%20if%20(upathField)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20extraReader%20%3D%20new%20StringReader(upathField.value)%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20wrong%20version%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(extraReader.readInt(1)%20!%3D%3D%201)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20null%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20the%20crc%20of%20the%20filename%20changed%2C%20this%20field%20is%20out%20of%20date.%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(jszipProto.crc32(this.fileName)%20!%3D%3D%20extraReader.readInt(4))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20null%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20jszipProto.utf8decode(extraReader.readString(upathField.length%20-%205))%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20null%3B%0A%20%20%20%20%7D%2C%0A%0A%20%20%20%20%2F**%0A%20%20%20%20%20*%20Find%20the%20unicode%20comment%20declared%20in%20the%20extra%20field%2C%20if%20any.%0A%20%20%20%20%20*%20%40return%20%7BString%7D%20the%20unicode%20comment%2C%20null%20otherwise.%0A%20%20%20%20%20*%2F%0A%20%20%20%20findExtraFieldUnicodeComment%3A%20function()%20%7B%0A%20%20%20%20%20%20%20%20var%20ucommentField%20%3D%20this.extraFields%5B0x6375%5D%3B%0A%20%20%20%20%20%20%20%20if%20(ucommentField)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20extraReader%20%3D%20new%20StringReader(ucommentField.value)%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20wrong%20version%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(extraReader.readInt(1)%20!%3D%3D%201)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20null%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20the%20crc%20of%20the%20comment%20changed%2C%20this%20field%20is%20out%20of%20date.%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(jszipProto.crc32(this.fileComment)%20!%3D%3D%20extraReader.readInt(4))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20null%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20jszipProto.utf8decode(extraReader.readString(ucommentField.length%20-%205))%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20null%3B%0A%20%20%20%20%7D%0A%7D%3B%0Amodule.exports%20%3D%20ZipEntry%3B%0A%0A%7D%2C%7B%22.%2FcompressedObject%22%3A3%2C%22.%2Fobject%22%3A14%2C%22.%2FstringReader%22%3A16%2C%22.%2Fsupport%22%3A18%2C%22.%2Futils%22%3A22%7D%5D%2C25%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A%2F%2F%20Top%20level%20file%20is%20just%20a%20mixin%20of%20submodules%20%26%20constants%0A'use%20strict'%3B%0A%0Avar%20assign%20%20%20%20%3D%20require('.%2Flib%2Futils%2Fcommon').assign%3B%0A%0Avar%20deflate%20%20%20%3D%20require('.%2Flib%2Fdeflate')%3B%0Avar%20inflate%20%20%20%3D%20require('.%2Flib%2Finflate')%3B%0Avar%20constants%20%3D%20require('.%2Flib%2Fzlib%2Fconstants')%3B%0A%0Avar%20pako%20%3D%20%7B%7D%3B%0A%0Aassign(pako%2C%20deflate%2C%20inflate%2C%20constants)%3B%0A%0Amodule.exports%20%3D%20pako%3B%0A%0A%7D%2C%7B%22.%2Flib%2Fdeflate%22%3A26%2C%22.%2Flib%2Finflate%22%3A27%2C%22.%2Flib%2Futils%2Fcommon%22%3A28%2C%22.%2Flib%2Fzlib%2Fconstants%22%3A31%7D%5D%2C26%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0A%0A%0Avar%20zlib_deflate%20%3D%20require('.%2Fzlib%2Fdeflate')%3B%0Avar%20utils%20%20%20%20%20%20%20%20%3D%20require('.%2Futils%2Fcommon')%3B%0Avar%20strings%20%20%20%20%20%20%3D%20require('.%2Futils%2Fstrings')%3B%0Avar%20msg%20%20%20%20%20%20%20%20%20%20%3D%20require('.%2Fzlib%2Fmessages')%3B%0Avar%20ZStream%20%20%20%20%20%20%3D%20require('.%2Fzlib%2Fzstream')%3B%0A%0Avar%20toString%20%3D%20Object.prototype.toString%3B%0A%0A%2F*%20Public%20constants%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D*%2F%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D*%2F%0A%0Avar%20Z_NO_FLUSH%20%20%20%20%20%20%3D%200%3B%0Avar%20Z_FINISH%20%20%20%20%20%20%20%20%3D%204%3B%0A%0Avar%20Z_OK%20%20%20%20%20%20%20%20%20%20%20%20%3D%200%3B%0Avar%20Z_STREAM_END%20%20%20%20%3D%201%3B%0Avar%20Z_SYNC_FLUSH%20%20%20%20%3D%202%3B%0A%0Avar%20Z_DEFAULT_COMPRESSION%20%3D%20-1%3B%0A%0Avar%20Z_DEFAULT_STRATEGY%20%20%20%20%3D%200%3B%0A%0Avar%20Z_DEFLATED%20%20%3D%208%3B%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D*%2F%0A%0A%0A%2F**%0A%20*%20class%20Deflate%0A%20*%0A%20*%20Generic%20JS-style%20wrapper%20for%20zlib%20calls.%20If%20you%20don't%20need%0A%20*%20streaming%20behaviour%20-%20use%20more%20simple%20functions%3A%20%5B%5Bdeflate%5D%5D%2C%0A%20*%20%5B%5BdeflateRaw%5D%5D%20and%20%5B%5Bgzip%5D%5D.%0A%20**%2F%0A%0A%2F*%20internal%0A%20*%20Deflate.chunks%20-%3E%20Array%0A%20*%0A%20*%20Chunks%20of%20output%20data%2C%20if%20%5B%5BDeflate%23onData%5D%5D%20not%20overriden.%0A%20**%2F%0A%0A%2F**%0A%20*%20Deflate.result%20-%3E%20Uint8Array%7CArray%0A%20*%0A%20*%20Compressed%20result%2C%20generated%20by%20default%20%5B%5BDeflate%23onData%5D%5D%0A%20*%20and%20%5B%5BDeflate%23onEnd%5D%5D%20handlers.%20Filled%20after%20you%20push%20last%20chunk%0A%20*%20(call%20%5B%5BDeflate%23push%5D%5D%20with%20%60Z_FINISH%60%20%2F%20%60true%60%20param)%20%20or%20if%20you%0A%20*%20push%20a%20chunk%20with%20explicit%20flush%20(call%20%5B%5BDeflate%23push%5D%5D%20with%0A%20*%20%60Z_SYNC_FLUSH%60%20param).%0A%20**%2F%0A%0A%2F**%0A%20*%20Deflate.err%20-%3E%20Number%0A%20*%0A%20*%20Error%20code%20after%20deflate%20finished.%200%20(Z_OK)%20on%20success.%0A%20*%20You%20will%20not%20need%20it%20in%20real%20life%2C%20because%20deflate%20errors%0A%20*%20are%20possible%20only%20on%20wrong%20options%20or%20bad%20%60onData%60%20%2F%20%60onEnd%60%0A%20*%20custom%20handlers.%0A%20**%2F%0A%0A%2F**%0A%20*%20Deflate.msg%20-%3E%20String%0A%20*%0A%20*%20Error%20message%2C%20if%20%5B%5BDeflate.err%5D%5D%20!%3D%200%0A%20**%2F%0A%0A%0A%2F**%0A%20*%20new%20Deflate(options)%0A%20*%20-%20options%20(Object)%3A%20zlib%20deflate%20options.%0A%20*%0A%20*%20Creates%20new%20deflator%20instance%20with%20specified%20params.%20Throws%20exception%0A%20*%20on%20bad%20params.%20Supported%20options%3A%0A%20*%0A%20*%20-%20%60level%60%0A%20*%20-%20%60windowBits%60%0A%20*%20-%20%60memLevel%60%0A%20*%20-%20%60strategy%60%0A%20*%0A%20*%20%5Bhttp%3A%2F%2Fzlib.net%2Fmanual.html%23Advanced%5D(http%3A%2F%2Fzlib.net%2Fmanual.html%23Advanced)%0A%20*%20for%20more%20information%20on%20these.%0A%20*%0A%20*%20Additional%20options%2C%20for%20internal%20needs%3A%0A%20*%0A%20*%20-%20%60chunkSize%60%20-%20size%20of%20generated%20data%20chunks%20(16K%20by%20default)%0A%20*%20-%20%60raw%60%20(Boolean)%20-%20do%20raw%20deflate%0A%20*%20-%20%60gzip%60%20(Boolean)%20-%20create%20gzip%20wrapper%0A%20*%20-%20%60to%60%20(String)%20-%20if%20equal%20to%20'string'%2C%20then%20result%20will%20be%20%22binary%20string%22%0A%20*%20%20%20%20(each%20char%20code%20%5B0..255%5D)%0A%20*%20-%20%60header%60%20(Object)%20-%20custom%20header%20for%20gzip%0A%20*%20%20%20-%20%60text%60%20(Boolean)%20-%20true%20if%20compressed%20data%20believed%20to%20be%20text%0A%20*%20%20%20-%20%60time%60%20(Number)%20-%20modification%20time%2C%20unix%20timestamp%0A%20*%20%20%20-%20%60os%60%20(Number)%20-%20operation%20system%20code%0A%20*%20%20%20-%20%60extra%60%20(Array)%20-%20array%20of%20bytes%20with%20extra%20data%20(max%2065536)%0A%20*%20%20%20-%20%60name%60%20(String)%20-%20file%20name%20(binary%20string)%0A%20*%20%20%20-%20%60comment%60%20(String)%20-%20comment%20(binary%20string)%0A%20*%20%20%20-%20%60hcrc%60%20(Boolean)%20-%20true%20if%20header%20crc%20should%20be%20added%0A%20*%0A%20*%20%23%23%23%23%23%20Example%3A%0A%20*%0A%20*%20%60%60%60javascript%0A%20*%20var%20pako%20%3D%20require('pako')%0A%20*%20%20%20%2C%20chunk1%20%3D%20Uint8Array(%5B1%2C2%2C3%2C4%2C5%2C6%2C7%2C8%2C9%5D)%0A%20*%20%20%20%2C%20chunk2%20%3D%20Uint8Array(%5B10%2C11%2C12%2C13%2C14%2C15%2C16%2C17%2C18%2C19%5D)%3B%0A%20*%0A%20*%20var%20deflate%20%3D%20new%20pako.Deflate(%7B%20level%3A%203%7D)%3B%0A%20*%0A%20*%20deflate.push(chunk1%2C%20false)%3B%0A%20*%20deflate.push(chunk2%2C%20true)%3B%20%20%2F%2F%20true%20-%3E%20last%20chunk%0A%20*%0A%20*%20if%20(deflate.err)%20%7B%20throw%20new%20Error(deflate.err)%3B%20%7D%0A%20*%0A%20*%20console.log(deflate.result)%3B%0A%20*%20%60%60%60%0A%20**%2F%0Afunction%20Deflate(options)%20%7B%0A%20%20if%20(!(this%20instanceof%20Deflate))%20return%20new%20Deflate(options)%3B%0A%0A%20%20this.options%20%3D%20utils.assign(%7B%0A%20%20%20%20level%3A%20Z_DEFAULT_COMPRESSION%2C%0A%20%20%20%20method%3A%20Z_DEFLATED%2C%0A%20%20%20%20chunkSize%3A%2016384%2C%0A%20%20%20%20windowBits%3A%2015%2C%0A%20%20%20%20memLevel%3A%208%2C%0A%20%20%20%20strategy%3A%20Z_DEFAULT_STRATEGY%2C%0A%20%20%20%20to%3A%20''%0A%20%20%7D%2C%20options%20%7C%7C%20%7B%7D)%3B%0A%0A%20%20var%20opt%20%3D%20this.options%3B%0A%0A%20%20if%20(opt.raw%20%26%26%20(opt.windowBits%20%3E%200))%20%7B%0A%20%20%20%20opt.windowBits%20%3D%20-opt.windowBits%3B%0A%20%20%7D%0A%0A%20%20else%20if%20(opt.gzip%20%26%26%20(opt.windowBits%20%3E%200)%20%26%26%20(opt.windowBits%20%3C%2016))%20%7B%0A%20%20%20%20opt.windowBits%20%2B%3D%2016%3B%0A%20%20%7D%0A%0A%20%20this.err%20%20%20%20%3D%200%3B%20%20%20%20%20%20%2F%2F%20error%20code%2C%20if%20happens%20(0%20%3D%20Z_OK)%0A%20%20this.msg%20%20%20%20%3D%20''%3B%20%20%20%20%20%2F%2F%20error%20message%0A%20%20this.ended%20%20%3D%20false%3B%20%20%2F%2F%20used%20to%20avoid%20multiple%20onEnd()%20calls%0A%20%20this.chunks%20%3D%20%5B%5D%3B%20%20%20%20%20%2F%2F%20chunks%20of%20compressed%20data%0A%0A%20%20this.strm%20%3D%20new%20ZStream()%3B%0A%20%20this.strm.avail_out%20%3D%200%3B%0A%0A%20%20var%20status%20%3D%20zlib_deflate.deflateInit2(%0A%20%20%20%20this.strm%2C%0A%20%20%20%20opt.level%2C%0A%20%20%20%20opt.method%2C%0A%20%20%20%20opt.windowBits%2C%0A%20%20%20%20opt.memLevel%2C%0A%20%20%20%20opt.strategy%0A%20%20)%3B%0A%0A%20%20if%20(status%20!%3D%3D%20Z_OK)%20%7B%0A%20%20%20%20throw%20new%20Error(msg%5Bstatus%5D)%3B%0A%20%20%7D%0A%0A%20%20if%20(opt.header)%20%7B%0A%20%20%20%20zlib_deflate.deflateSetHeader(this.strm%2C%20opt.header)%3B%0A%20%20%7D%0A%7D%0A%0A%2F**%0A%20*%20Deflate%23push(data%5B%2C%20mode%5D)%20-%3E%20Boolean%0A%20*%20-%20data%20(Uint8Array%7CArray%7CArrayBuffer%7CString)%3A%20input%20data.%20Strings%20will%20be%0A%20*%20%20%20converted%20to%20utf8%20byte%20sequence.%0A%20*%20-%20mode%20(Number%7CBoolean)%3A%200..6%20for%20corresponding%20Z_NO_FLUSH..Z_TREE%20modes.%0A%20*%20%20%20See%20constants.%20Skipped%20or%20%60false%60%20means%20Z_NO_FLUSH%2C%20%60true%60%20meansh%20Z_FINISH.%0A%20*%0A%20*%20Sends%20input%20data%20to%20deflate%20pipe%2C%20generating%20%5B%5BDeflate%23onData%5D%5D%20calls%20with%0A%20*%20new%20compressed%20chunks.%20Returns%20%60true%60%20on%20success.%20The%20last%20data%20block%20must%20have%0A%20*%20mode%20Z_FINISH%20(or%20%60true%60).%20That%20will%20flush%20internal%20pending%20buffers%20and%20call%0A%20*%20%5B%5BDeflate%23onEnd%5D%5D.%20For%20interim%20explicit%20flushes%20(without%20ending%20the%20stream)%20you%0A%20*%20can%20use%20mode%20Z_SYNC_FLUSH%2C%20keeping%20the%20compression%20context.%0A%20*%0A%20*%20On%20fail%20call%20%5B%5BDeflate%23onEnd%5D%5D%20with%20error%20code%20and%20return%20false.%0A%20*%0A%20*%20We%20strongly%20recommend%20to%20use%20%60Uint8Array%60%20on%20input%20for%20best%20speed%20(output%0A%20*%20array%20format%20is%20detected%20automatically).%20Also%2C%20don't%20skip%20last%20param%20and%20always%0A%20*%20use%20the%20same%20type%20in%20your%20code%20(boolean%20or%20number).%20That%20will%20improve%20JS%20speed.%0A%20*%0A%20*%20For%20regular%20%60Array%60-s%20make%20sure%20all%20elements%20are%20%5B0..255%5D.%0A%20*%0A%20*%20%23%23%23%23%23%20Example%0A%20*%0A%20*%20%60%60%60javascript%0A%20*%20push(chunk%2C%20false)%3B%20%2F%2F%20push%20one%20of%20data%20chunks%0A%20*%20...%0A%20*%20push(chunk%2C%20true)%3B%20%20%2F%2F%20push%20last%20chunk%0A%20*%20%60%60%60%0A%20**%2F%0ADeflate.prototype.push%20%3D%20function%20(data%2C%20mode)%20%7B%0A%20%20var%20strm%20%3D%20this.strm%3B%0A%20%20var%20chunkSize%20%3D%20this.options.chunkSize%3B%0A%20%20var%20status%2C%20_mode%3B%0A%0A%20%20if%20(this.ended)%20%7B%20return%20false%3B%20%7D%0A%0A%20%20_mode%20%3D%20(mode%20%3D%3D%3D%20~~mode)%20%3F%20mode%20%3A%20((mode%20%3D%3D%3D%20true)%20%3F%20Z_FINISH%20%3A%20Z_NO_FLUSH)%3B%0A%0A%20%20%2F%2F%20Convert%20data%20if%20needed%0A%20%20if%20(typeof%20data%20%3D%3D%3D%20'string')%20%7B%0A%20%20%20%20%2F%2F%20If%20we%20need%20to%20compress%20text%2C%20change%20encoding%20to%20utf8.%0A%20%20%20%20strm.input%20%3D%20strings.string2buf(data)%3B%0A%20%20%7D%20else%20if%20(toString.call(data)%20%3D%3D%3D%20'%5Bobject%20ArrayBuffer%5D')%20%7B%0A%20%20%20%20strm.input%20%3D%20new%20Uint8Array(data)%3B%0A%20%20%7D%20else%20%7B%0A%20%20%20%20strm.input%20%3D%20data%3B%0A%20%20%7D%0A%0A%20%20strm.next_in%20%3D%200%3B%0A%20%20strm.avail_in%20%3D%20strm.input.length%3B%0A%0A%20%20do%20%7B%0A%20%20%20%20if%20(strm.avail_out%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20strm.output%20%3D%20new%20utils.Buf8(chunkSize)%3B%0A%20%20%20%20%20%20strm.next_out%20%3D%200%3B%0A%20%20%20%20%20%20strm.avail_out%20%3D%20chunkSize%3B%0A%20%20%20%20%7D%0A%20%20%20%20status%20%3D%20zlib_deflate.deflate(strm%2C%20_mode)%3B%20%20%20%20%2F*%20no%20bad%20return%20value%20*%2F%0A%0A%20%20%20%20if%20(status%20!%3D%3D%20Z_STREAM_END%20%26%26%20status%20!%3D%3D%20Z_OK)%20%7B%0A%20%20%20%20%20%20this.onEnd(status)%3B%0A%20%20%20%20%20%20this.ended%20%3D%20true%3B%0A%20%20%20%20%20%20return%20false%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20(strm.avail_out%20%3D%3D%3D%200%20%7C%7C%20(strm.avail_in%20%3D%3D%3D%200%20%26%26%20(_mode%20%3D%3D%3D%20Z_FINISH%20%7C%7C%20_mode%20%3D%3D%3D%20Z_SYNC_FLUSH)))%20%7B%0A%20%20%20%20%20%20if%20(this.options.to%20%3D%3D%3D%20'string')%20%7B%0A%20%20%20%20%20%20%20%20this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output%2C%20strm.next_out)))%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20this.onData(utils.shrinkBuf(strm.output%2C%20strm.next_out))%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%20while%20((strm.avail_in%20%3E%200%20%7C%7C%20strm.avail_out%20%3D%3D%3D%200)%20%26%26%20status%20!%3D%3D%20Z_STREAM_END)%3B%0A%0A%20%20%2F%2F%20Finalize%20on%20the%20last%20chunk.%0A%20%20if%20(_mode%20%3D%3D%3D%20Z_FINISH)%20%7B%0A%20%20%20%20status%20%3D%20zlib_deflate.deflateEnd(this.strm)%3B%0A%20%20%20%20this.onEnd(status)%3B%0A%20%20%20%20this.ended%20%3D%20true%3B%0A%20%20%20%20return%20status%20%3D%3D%3D%20Z_OK%3B%0A%20%20%7D%0A%0A%20%20%2F%2F%20callback%20interim%20results%20if%20Z_SYNC_FLUSH.%0A%20%20if%20(_mode%20%3D%3D%3D%20Z_SYNC_FLUSH)%20%7B%0A%20%20%20%20this.onEnd(Z_OK)%3B%0A%20%20%20%20strm.avail_out%20%3D%200%3B%0A%20%20%20%20return%20true%3B%0A%20%20%7D%0A%0A%20%20return%20true%3B%0A%7D%3B%0A%0A%0A%2F**%0A%20*%20Deflate%23onData(chunk)%20-%3E%20Void%0A%20*%20-%20chunk%20(Uint8Array%7CArray%7CString)%3A%20ouput%20data.%20Type%20of%20array%20depends%0A%20*%20%20%20on%20js%20engine%20support.%20When%20string%20output%20requested%2C%20each%20chunk%0A%20*%20%20%20will%20be%20string.%0A%20*%0A%20*%20By%20default%2C%20stores%20data%20blocks%20in%20%60chunks%5B%5D%60%20property%20and%20glue%0A%20*%20those%20in%20%60onEnd%60.%20Override%20this%20handler%2C%20if%20you%20need%20another%20behaviour.%0A%20**%2F%0ADeflate.prototype.onData%20%3D%20function%20(chunk)%20%7B%0A%20%20this.chunks.push(chunk)%3B%0A%7D%3B%0A%0A%0A%2F**%0A%20*%20Deflate%23onEnd(status)%20-%3E%20Void%0A%20*%20-%20status%20(Number)%3A%20deflate%20status.%200%20(Z_OK)%20on%20success%2C%0A%20*%20%20%20other%20if%20not.%0A%20*%0A%20*%20Called%20once%20after%20you%20tell%20deflate%20that%20the%20input%20stream%20is%0A%20*%20complete%20(Z_FINISH)%20or%20should%20be%20flushed%20(Z_SYNC_FLUSH)%0A%20*%20or%20if%20an%20error%20happened.%20By%20default%20-%20join%20collected%20chunks%2C%0A%20*%20free%20memory%20and%20fill%20%60results%60%20%2F%20%60err%60%20properties.%0A%20**%2F%0ADeflate.prototype.onEnd%20%3D%20function%20(status)%20%7B%0A%20%20%2F%2F%20On%20success%20-%20join%0A%20%20if%20(status%20%3D%3D%3D%20Z_OK)%20%7B%0A%20%20%20%20if%20(this.options.to%20%3D%3D%3D%20'string')%20%7B%0A%20%20%20%20%20%20this.result%20%3D%20this.chunks.join('')%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20this.result%20%3D%20utils.flattenChunks(this.chunks)%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20this.chunks%20%3D%20%5B%5D%3B%0A%20%20this.err%20%3D%20status%3B%0A%20%20this.msg%20%3D%20this.strm.msg%3B%0A%7D%3B%0A%0A%0A%2F**%0A%20*%20deflate(data%5B%2C%20options%5D)%20-%3E%20Uint8Array%7CArray%7CString%0A%20*%20-%20data%20(Uint8Array%7CArray%7CString)%3A%20input%20data%20to%20compress.%0A%20*%20-%20options%20(Object)%3A%20zlib%20deflate%20options.%0A%20*%0A%20*%20Compress%20%60data%60%20with%20deflate%20algorithm%20and%20%60options%60.%0A%20*%0A%20*%20Supported%20options%20are%3A%0A%20*%0A%20*%20-%20level%0A%20*%20-%20windowBits%0A%20*%20-%20memLevel%0A%20*%20-%20strategy%0A%20*%0A%20*%20%5Bhttp%3A%2F%2Fzlib.net%2Fmanual.html%23Advanced%5D(http%3A%2F%2Fzlib.net%2Fmanual.html%23Advanced)%0A%20*%20for%20more%20information%20on%20these.%0A%20*%0A%20*%20Sugar%20(options)%3A%0A%20*%0A%20*%20-%20%60raw%60%20(Boolean)%20-%20say%20that%20we%20work%20with%20raw%20stream%2C%20if%20you%20don't%20wish%20to%20specify%0A%20*%20%20%20negative%20windowBits%20implicitly.%0A%20*%20-%20%60to%60%20(String)%20-%20if%20equal%20to%20'string'%2C%20then%20result%20will%20be%20%22binary%20string%22%0A%20*%20%20%20%20(each%20char%20code%20%5B0..255%5D)%0A%20*%0A%20*%20%23%23%23%23%23%20Example%3A%0A%20*%0A%20*%20%60%60%60javascript%0A%20*%20var%20pako%20%3D%20require('pako')%0A%20*%20%20%20%2C%20data%20%3D%20Uint8Array(%5B1%2C2%2C3%2C4%2C5%2C6%2C7%2C8%2C9%5D)%3B%0A%20*%0A%20*%20console.log(pako.deflate(data))%3B%0A%20*%20%60%60%60%0A%20**%2F%0Afunction%20deflate(input%2C%20options)%20%7B%0A%20%20var%20deflator%20%3D%20new%20Deflate(options)%3B%0A%0A%20%20deflator.push(input%2C%20true)%3B%0A%0A%20%20%2F%2F%20That%20will%20never%20happens%2C%20if%20you%20don't%20cheat%20with%20options%20%3A)%0A%20%20if%20(deflator.err)%20%7B%20throw%20deflator.msg%3B%20%7D%0A%0A%20%20return%20deflator.result%3B%0A%7D%0A%0A%0A%2F**%0A%20*%20deflateRaw(data%5B%2C%20options%5D)%20-%3E%20Uint8Array%7CArray%7CString%0A%20*%20-%20data%20(Uint8Array%7CArray%7CString)%3A%20input%20data%20to%20compress.%0A%20*%20-%20options%20(Object)%3A%20zlib%20deflate%20options.%0A%20*%0A%20*%20The%20same%20as%20%5B%5Bdeflate%5D%5D%2C%20but%20creates%20raw%20data%2C%20without%20wrapper%0A%20*%20(header%20and%20adler32%20crc).%0A%20**%2F%0Afunction%20deflateRaw(input%2C%20options)%20%7B%0A%20%20options%20%3D%20options%20%7C%7C%20%7B%7D%3B%0A%20%20options.raw%20%3D%20true%3B%0A%20%20return%20deflate(input%2C%20options)%3B%0A%7D%0A%0A%0A%2F**%0A%20*%20gzip(data%5B%2C%20options%5D)%20-%3E%20Uint8Array%7CArray%7CString%0A%20*%20-%20data%20(Uint8Array%7CArray%7CString)%3A%20input%20data%20to%20compress.%0A%20*%20-%20options%20(Object)%3A%20zlib%20deflate%20options.%0A%20*%0A%20*%20The%20same%20as%20%5B%5Bdeflate%5D%5D%2C%20but%20create%20gzip%20wrapper%20instead%20of%0A%20*%20deflate%20one.%0A%20**%2F%0Afunction%20gzip(input%2C%20options)%20%7B%0A%20%20options%20%3D%20options%20%7C%7C%20%7B%7D%3B%0A%20%20options.gzip%20%3D%20true%3B%0A%20%20return%20deflate(input%2C%20options)%3B%0A%7D%0A%0A%0Aexports.Deflate%20%3D%20Deflate%3B%0Aexports.deflate%20%3D%20deflate%3B%0Aexports.deflateRaw%20%3D%20deflateRaw%3B%0Aexports.gzip%20%3D%20gzip%3B%0A%0A%7D%2C%7B%22.%2Futils%2Fcommon%22%3A28%2C%22.%2Futils%2Fstrings%22%3A29%2C%22.%2Fzlib%2Fdeflate%22%3A33%2C%22.%2Fzlib%2Fmessages%22%3A38%2C%22.%2Fzlib%2Fzstream%22%3A40%7D%5D%2C27%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0A%0A%0Avar%20zlib_inflate%20%3D%20require('.%2Fzlib%2Finflate')%3B%0Avar%20utils%20%20%20%20%20%20%20%20%3D%20require('.%2Futils%2Fcommon')%3B%0Avar%20strings%20%20%20%20%20%20%3D%20require('.%2Futils%2Fstrings')%3B%0Avar%20c%20%20%20%20%20%20%20%20%20%20%20%20%3D%20require('.%2Fzlib%2Fconstants')%3B%0Avar%20msg%20%20%20%20%20%20%20%20%20%20%3D%20require('.%2Fzlib%2Fmessages')%3B%0Avar%20ZStream%20%20%20%20%20%20%3D%20require('.%2Fzlib%2Fzstream')%3B%0Avar%20GZheader%20%20%20%20%20%3D%20require('.%2Fzlib%2Fgzheader')%3B%0A%0Avar%20toString%20%3D%20Object.prototype.toString%3B%0A%0A%2F**%0A%20*%20class%20Inflate%0A%20*%0A%20*%20Generic%20JS-style%20wrapper%20for%20zlib%20calls.%20If%20you%20don't%20need%0A%20*%20streaming%20behaviour%20-%20use%20more%20simple%20functions%3A%20%5B%5Binflate%5D%5D%0A%20*%20and%20%5B%5BinflateRaw%5D%5D.%0A%20**%2F%0A%0A%2F*%20internal%0A%20*%20inflate.chunks%20-%3E%20Array%0A%20*%0A%20*%20Chunks%20of%20output%20data%2C%20if%20%5B%5BInflate%23onData%5D%5D%20not%20overriden.%0A%20**%2F%0A%0A%2F**%0A%20*%20Inflate.result%20-%3E%20Uint8Array%7CArray%7CString%0A%20*%0A%20*%20Uncompressed%20result%2C%20generated%20by%20default%20%5B%5BInflate%23onData%5D%5D%0A%20*%20and%20%5B%5BInflate%23onEnd%5D%5D%20handlers.%20Filled%20after%20you%20push%20last%20chunk%0A%20*%20(call%20%5B%5BInflate%23push%5D%5D%20with%20%60Z_FINISH%60%20%2F%20%60true%60%20param)%20or%20if%20you%0A%20*%20push%20a%20chunk%20with%20explicit%20flush%20(call%20%5B%5BInflate%23push%5D%5D%20with%0A%20*%20%60Z_SYNC_FLUSH%60%20param).%0A%20**%2F%0A%0A%2F**%0A%20*%20Inflate.err%20-%3E%20Number%0A%20*%0A%20*%20Error%20code%20after%20inflate%20finished.%200%20(Z_OK)%20on%20success.%0A%20*%20Should%20be%20checked%20if%20broken%20data%20possible.%0A%20**%2F%0A%0A%2F**%0A%20*%20Inflate.msg%20-%3E%20String%0A%20*%0A%20*%20Error%20message%2C%20if%20%5B%5BInflate.err%5D%5D%20!%3D%200%0A%20**%2F%0A%0A%0A%2F**%0A%20*%20new%20Inflate(options)%0A%20*%20-%20options%20(Object)%3A%20zlib%20inflate%20options.%0A%20*%0A%20*%20Creates%20new%20inflator%20instance%20with%20specified%20params.%20Throws%20exception%0A%20*%20on%20bad%20params.%20Supported%20options%3A%0A%20*%0A%20*%20-%20%60windowBits%60%0A%20*%0A%20*%20%5Bhttp%3A%2F%2Fzlib.net%2Fmanual.html%23Advanced%5D(http%3A%2F%2Fzlib.net%2Fmanual.html%23Advanced)%0A%20*%20for%20more%20information%20on%20these.%0A%20*%0A%20*%20Additional%20options%2C%20for%20internal%20needs%3A%0A%20*%0A%20*%20-%20%60chunkSize%60%20-%20size%20of%20generated%20data%20chunks%20(16K%20by%20default)%0A%20*%20-%20%60raw%60%20(Boolean)%20-%20do%20raw%20inflate%0A%20*%20-%20%60to%60%20(String)%20-%20if%20equal%20to%20'string'%2C%20then%20result%20will%20be%20converted%0A%20*%20%20%20from%20utf8%20to%20utf16%20(javascript)%20string.%20When%20string%20output%20requested%2C%0A%20*%20%20%20chunk%20length%20can%20differ%20from%20%60chunkSize%60%2C%20depending%20on%20content.%0A%20*%0A%20*%20By%20default%2C%20when%20no%20options%20set%2C%20autodetect%20deflate%2Fgzip%20data%20format%20via%0A%20*%20wrapper%20header.%0A%20*%0A%20*%20%23%23%23%23%23%20Example%3A%0A%20*%0A%20*%20%60%60%60javascript%0A%20*%20var%20pako%20%3D%20require('pako')%0A%20*%20%20%20%2C%20chunk1%20%3D%20Uint8Array(%5B1%2C2%2C3%2C4%2C5%2C6%2C7%2C8%2C9%5D)%0A%20*%20%20%20%2C%20chunk2%20%3D%20Uint8Array(%5B10%2C11%2C12%2C13%2C14%2C15%2C16%2C17%2C18%2C19%5D)%3B%0A%20*%0A%20*%20var%20inflate%20%3D%20new%20pako.Inflate(%7B%20level%3A%203%7D)%3B%0A%20*%0A%20*%20inflate.push(chunk1%2C%20false)%3B%0A%20*%20inflate.push(chunk2%2C%20true)%3B%20%20%2F%2F%20true%20-%3E%20last%20chunk%0A%20*%0A%20*%20if%20(inflate.err)%20%7B%20throw%20new%20Error(inflate.err)%3B%20%7D%0A%20*%0A%20*%20console.log(inflate.result)%3B%0A%20*%20%60%60%60%0A%20**%2F%0Afunction%20Inflate(options)%20%7B%0A%20%20if%20(!(this%20instanceof%20Inflate))%20return%20new%20Inflate(options)%3B%0A%0A%20%20this.options%20%3D%20utils.assign(%7B%0A%20%20%20%20chunkSize%3A%2016384%2C%0A%20%20%20%20windowBits%3A%200%2C%0A%20%20%20%20to%3A%20''%0A%20%20%7D%2C%20options%20%7C%7C%20%7B%7D)%3B%0A%0A%20%20var%20opt%20%3D%20this.options%3B%0A%0A%20%20%2F%2F%20Force%20window%20size%20for%20%60raw%60%20data%2C%20if%20not%20set%20directly%2C%0A%20%20%2F%2F%20because%20we%20have%20no%20header%20for%20autodetect.%0A%20%20if%20(opt.raw%20%26%26%20(opt.windowBits%20%3E%3D%200)%20%26%26%20(opt.windowBits%20%3C%2016))%20%7B%0A%20%20%20%20opt.windowBits%20%3D%20-opt.windowBits%3B%0A%20%20%20%20if%20(opt.windowBits%20%3D%3D%3D%200)%20%7B%20opt.windowBits%20%3D%20-15%3B%20%7D%0A%20%20%7D%0A%0A%20%20%2F%2F%20If%20%60windowBits%60%20not%20defined%20(and%20mode%20not%20raw)%20-%20set%20autodetect%20flag%20for%20gzip%2Fdeflate%0A%20%20if%20((opt.windowBits%20%3E%3D%200)%20%26%26%20(opt.windowBits%20%3C%2016)%20%26%26%0A%20%20%20%20%20%20!(options%20%26%26%20options.windowBits))%20%7B%0A%20%20%20%20opt.windowBits%20%2B%3D%2032%3B%0A%20%20%7D%0A%0A%20%20%2F%2F%20Gzip%20header%20has%20no%20info%20about%20windows%20size%2C%20we%20can%20do%20autodetect%20only%0A%20%20%2F%2F%20for%20deflate.%20So%2C%20if%20window%20size%20not%20set%2C%20force%20it%20to%20max%20when%20gzip%20possible%0A%20%20if%20((opt.windowBits%20%3E%2015)%20%26%26%20(opt.windowBits%20%3C%2048))%20%7B%0A%20%20%20%20%2F%2F%20bit%203%20(16)%20-%3E%20gzipped%20data%0A%20%20%20%20%2F%2F%20bit%204%20(32)%20-%3E%20autodetect%20gzip%2Fdeflate%0A%20%20%20%20if%20((opt.windowBits%20%26%2015)%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20opt.windowBits%20%7C%3D%2015%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20this.err%20%20%20%20%3D%200%3B%20%20%20%20%20%20%2F%2F%20error%20code%2C%20if%20happens%20(0%20%3D%20Z_OK)%0A%20%20this.msg%20%20%20%20%3D%20''%3B%20%20%20%20%20%2F%2F%20error%20message%0A%20%20this.ended%20%20%3D%20false%3B%20%20%2F%2F%20used%20to%20avoid%20multiple%20onEnd()%20calls%0A%20%20this.chunks%20%3D%20%5B%5D%3B%20%20%20%20%20%2F%2F%20chunks%20of%20compressed%20data%0A%0A%20%20this.strm%20%20%20%3D%20new%20ZStream()%3B%0A%20%20this.strm.avail_out%20%3D%200%3B%0A%0A%20%20var%20status%20%20%3D%20zlib_inflate.inflateInit2(%0A%20%20%20%20this.strm%2C%0A%20%20%20%20opt.windowBits%0A%20%20)%3B%0A%0A%20%20if%20(status%20!%3D%3D%20c.Z_OK)%20%7B%0A%20%20%20%20throw%20new%20Error(msg%5Bstatus%5D)%3B%0A%20%20%7D%0A%0A%20%20this.header%20%3D%20new%20GZheader()%3B%0A%0A%20%20zlib_inflate.inflateGetHeader(this.strm%2C%20this.header)%3B%0A%7D%0A%0A%2F**%0A%20*%20Inflate%23push(data%5B%2C%20mode%5D)%20-%3E%20Boolean%0A%20*%20-%20data%20(Uint8Array%7CArray%7CArrayBuffer%7CString)%3A%20input%20data%0A%20*%20-%20mode%20(Number%7CBoolean)%3A%200..6%20for%20corresponding%20Z_NO_FLUSH..Z_TREE%20modes.%0A%20*%20%20%20See%20constants.%20Skipped%20or%20%60false%60%20means%20Z_NO_FLUSH%2C%20%60true%60%20meansh%20Z_FINISH.%0A%20*%0A%20*%20Sends%20input%20data%20to%20inflate%20pipe%2C%20generating%20%5B%5BInflate%23onData%5D%5D%20calls%20with%0A%20*%20new%20output%20chunks.%20Returns%20%60true%60%20on%20success.%20The%20last%20data%20block%20must%20have%0A%20*%20mode%20Z_FINISH%20(or%20%60true%60).%20That%20will%20flush%20internal%20pending%20buffers%20and%20call%0A%20*%20%5B%5BInflate%23onEnd%5D%5D.%20For%20interim%20explicit%20flushes%20(without%20ending%20the%20stream)%20you%0A%20*%20can%20use%20mode%20Z_SYNC_FLUSH%2C%20keeping%20the%20decompression%20context.%0A%20*%0A%20*%20On%20fail%20call%20%5B%5BInflate%23onEnd%5D%5D%20with%20error%20code%20and%20return%20false.%0A%20*%0A%20*%20We%20strongly%20recommend%20to%20use%20%60Uint8Array%60%20on%20input%20for%20best%20speed%20(output%0A%20*%20format%20is%20detected%20automatically).%20Also%2C%20don't%20skip%20last%20param%20and%20always%0A%20*%20use%20the%20same%20type%20in%20your%20code%20(boolean%20or%20number).%20That%20will%20improve%20JS%20speed.%0A%20*%0A%20*%20For%20regular%20%60Array%60-s%20make%20sure%20all%20elements%20are%20%5B0..255%5D.%0A%20*%0A%20*%20%23%23%23%23%23%20Example%0A%20*%0A%20*%20%60%60%60javascript%0A%20*%20push(chunk%2C%20false)%3B%20%2F%2F%20push%20one%20of%20data%20chunks%0A%20*%20...%0A%20*%20push(chunk%2C%20true)%3B%20%20%2F%2F%20push%20last%20chunk%0A%20*%20%60%60%60%0A%20**%2F%0AInflate.prototype.push%20%3D%20function%20(data%2C%20mode)%20%7B%0A%20%20var%20strm%20%3D%20this.strm%3B%0A%20%20var%20chunkSize%20%3D%20this.options.chunkSize%3B%0A%20%20var%20status%2C%20_mode%3B%0A%20%20var%20next_out_utf8%2C%20tail%2C%20utf8str%3B%0A%0A%20%20%2F%2F%20Flag%20to%20properly%20process%20Z_BUF_ERROR%20on%20testing%20inflate%20call%0A%20%20%2F%2F%20when%20we%20check%20that%20all%20output%20data%20was%20flushed.%0A%20%20var%20allowBufError%20%3D%20false%3B%0A%0A%20%20if%20(this.ended)%20%7B%20return%20false%3B%20%7D%0A%20%20_mode%20%3D%20(mode%20%3D%3D%3D%20~~mode)%20%3F%20mode%20%3A%20((mode%20%3D%3D%3D%20true)%20%3F%20c.Z_FINISH%20%3A%20c.Z_NO_FLUSH)%3B%0A%0A%20%20%2F%2F%20Convert%20data%20if%20needed%0A%20%20if%20(typeof%20data%20%3D%3D%3D%20'string')%20%7B%0A%20%20%20%20%2F%2F%20Only%20binary%20strings%20can%20be%20decompressed%20on%20practice%0A%20%20%20%20strm.input%20%3D%20strings.binstring2buf(data)%3B%0A%20%20%7D%20else%20if%20(toString.call(data)%20%3D%3D%3D%20'%5Bobject%20ArrayBuffer%5D')%20%7B%0A%20%20%20%20strm.input%20%3D%20new%20Uint8Array(data)%3B%0A%20%20%7D%20else%20%7B%0A%20%20%20%20strm.input%20%3D%20data%3B%0A%20%20%7D%0A%0A%20%20strm.next_in%20%3D%200%3B%0A%20%20strm.avail_in%20%3D%20strm.input.length%3B%0A%0A%20%20do%20%7B%0A%20%20%20%20if%20(strm.avail_out%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20strm.output%20%3D%20new%20utils.Buf8(chunkSize)%3B%0A%20%20%20%20%20%20strm.next_out%20%3D%200%3B%0A%20%20%20%20%20%20strm.avail_out%20%3D%20chunkSize%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20status%20%3D%20zlib_inflate.inflate(strm%2C%20c.Z_NO_FLUSH)%3B%20%20%20%20%2F*%20no%20bad%20return%20value%20*%2F%0A%0A%20%20%20%20if%20(status%20%3D%3D%3D%20c.Z_BUF_ERROR%20%26%26%20allowBufError%20%3D%3D%3D%20true)%20%7B%0A%20%20%20%20%20%20status%20%3D%20c.Z_OK%3B%0A%20%20%20%20%20%20allowBufError%20%3D%20false%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if%20(status%20!%3D%3D%20c.Z_STREAM_END%20%26%26%20status%20!%3D%3D%20c.Z_OK)%20%7B%0A%20%20%20%20%20%20this.onEnd(status)%3B%0A%20%20%20%20%20%20this.ended%20%3D%20true%3B%0A%20%20%20%20%20%20return%20false%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if%20(strm.next_out)%20%7B%0A%20%20%20%20%20%20if%20(strm.avail_out%20%3D%3D%3D%200%20%7C%7C%20status%20%3D%3D%3D%20c.Z_STREAM_END%20%7C%7C%20(strm.avail_in%20%3D%3D%3D%200%20%26%26%20(_mode%20%3D%3D%3D%20c.Z_FINISH%20%7C%7C%20_mode%20%3D%3D%3D%20c.Z_SYNC_FLUSH)))%20%7B%0A%0A%20%20%20%20%20%20%20%20if%20(this.options.to%20%3D%3D%3D%20'string')%20%7B%0A%0A%20%20%20%20%20%20%20%20%20%20next_out_utf8%20%3D%20strings.utf8border(strm.output%2C%20strm.next_out)%3B%0A%0A%20%20%20%20%20%20%20%20%20%20tail%20%3D%20strm.next_out%20-%20next_out_utf8%3B%0A%20%20%20%20%20%20%20%20%20%20utf8str%20%3D%20strings.buf2string(strm.output%2C%20next_out_utf8)%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20move%20tail%0A%20%20%20%20%20%20%20%20%20%20strm.next_out%20%3D%20tail%3B%0A%20%20%20%20%20%20%20%20%20%20strm.avail_out%20%3D%20chunkSize%20-%20tail%3B%0A%20%20%20%20%20%20%20%20%20%20if%20(tail)%20%7B%20utils.arraySet(strm.output%2C%20strm.output%2C%20next_out_utf8%2C%20tail%2C%200)%3B%20%7D%0A%0A%20%20%20%20%20%20%20%20%20%20this.onData(utf8str)%3B%0A%0A%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20this.onData(utils.shrinkBuf(strm.output%2C%20strm.next_out))%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20When%20no%20more%20input%20data%2C%20we%20should%20check%20that%20internal%20inflate%20buffers%0A%20%20%20%20%2F%2F%20are%20flushed.%20The%20only%20way%20to%20do%20it%20when%20avail_out%20%3D%200%20-%20run%20one%20more%0A%20%20%20%20%2F%2F%20inflate%20pass.%20But%20if%20output%20data%20not%20exists%2C%20inflate%20return%20Z_BUF_ERROR.%0A%20%20%20%20%2F%2F%20Here%20we%20set%20flag%20to%20process%20this%20error%20properly.%0A%20%20%20%20%2F%2F%0A%20%20%20%20%2F%2F%20NOTE.%20Deflate%20does%20not%20return%20error%20in%20this%20case%20and%20does%20not%20needs%20such%0A%20%20%20%20%2F%2F%20logic.%0A%20%20%20%20if%20(strm.avail_in%20%3D%3D%3D%200%20%26%26%20strm.avail_out%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20allowBufError%20%3D%20true%3B%0A%20%20%20%20%7D%0A%0A%20%20%7D%20while%20((strm.avail_in%20%3E%200%20%7C%7C%20strm.avail_out%20%3D%3D%3D%200)%20%26%26%20status%20!%3D%3D%20c.Z_STREAM_END)%3B%0A%0A%20%20if%20(status%20%3D%3D%3D%20c.Z_STREAM_END)%20%7B%0A%20%20%20%20_mode%20%3D%20c.Z_FINISH%3B%0A%20%20%7D%0A%0A%20%20%2F%2F%20Finalize%20on%20the%20last%20chunk.%0A%20%20if%20(_mode%20%3D%3D%3D%20c.Z_FINISH)%20%7B%0A%20%20%20%20status%20%3D%20zlib_inflate.inflateEnd(this.strm)%3B%0A%20%20%20%20this.onEnd(status)%3B%0A%20%20%20%20this.ended%20%3D%20true%3B%0A%20%20%20%20return%20status%20%3D%3D%3D%20c.Z_OK%3B%0A%20%20%7D%0A%0A%20%20%2F%2F%20callback%20interim%20results%20if%20Z_SYNC_FLUSH.%0A%20%20if%20(_mode%20%3D%3D%3D%20c.Z_SYNC_FLUSH)%20%7B%0A%20%20%20%20this.onEnd(c.Z_OK)%3B%0A%20%20%20%20strm.avail_out%20%3D%200%3B%0A%20%20%20%20return%20true%3B%0A%20%20%7D%0A%0A%20%20return%20true%3B%0A%7D%3B%0A%0A%0A%2F**%0A%20*%20Inflate%23onData(chunk)%20-%3E%20Void%0A%20*%20-%20chunk%20(Uint8Array%7CArray%7CString)%3A%20ouput%20data.%20Type%20of%20array%20depends%0A%20*%20%20%20on%20js%20engine%20support.%20When%20string%20output%20requested%2C%20each%20chunk%0A%20*%20%20%20will%20be%20string.%0A%20*%0A%20*%20By%20default%2C%20stores%20data%20blocks%20in%20%60chunks%5B%5D%60%20property%20and%20glue%0A%20*%20those%20in%20%60onEnd%60.%20Override%20this%20handler%2C%20if%20you%20need%20another%20behaviour.%0A%20**%2F%0AInflate.prototype.onData%20%3D%20function%20(chunk)%20%7B%0A%20%20this.chunks.push(chunk)%3B%0A%7D%3B%0A%0A%0A%2F**%0A%20*%20Inflate%23onEnd(status)%20-%3E%20Void%0A%20*%20-%20status%20(Number)%3A%20inflate%20status.%200%20(Z_OK)%20on%20success%2C%0A%20*%20%20%20other%20if%20not.%0A%20*%0A%20*%20Called%20either%20after%20you%20tell%20inflate%20that%20the%20input%20stream%20is%0A%20*%20complete%20(Z_FINISH)%20or%20should%20be%20flushed%20(Z_SYNC_FLUSH)%0A%20*%20or%20if%20an%20error%20happened.%20By%20default%20-%20join%20collected%20chunks%2C%0A%20*%20free%20memory%20and%20fill%20%60results%60%20%2F%20%60err%60%20properties.%0A%20**%2F%0AInflate.prototype.onEnd%20%3D%20function%20(status)%20%7B%0A%20%20%2F%2F%20On%20success%20-%20join%0A%20%20if%20(status%20%3D%3D%3D%20c.Z_OK)%20%7B%0A%20%20%20%20if%20(this.options.to%20%3D%3D%3D%20'string')%20%7B%0A%20%20%20%20%20%20%2F%2F%20Glue%20%26%20convert%20here%2C%20until%20we%20teach%20pako%20to%20send%0A%20%20%20%20%20%20%2F%2F%20utf8%20alligned%20strings%20to%20onData%0A%20%20%20%20%20%20this.result%20%3D%20this.chunks.join('')%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20this.result%20%3D%20utils.flattenChunks(this.chunks)%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20this.chunks%20%3D%20%5B%5D%3B%0A%20%20this.err%20%3D%20status%3B%0A%20%20this.msg%20%3D%20this.strm.msg%3B%0A%7D%3B%0A%0A%0A%2F**%0A%20*%20inflate(data%5B%2C%20options%5D)%20-%3E%20Uint8Array%7CArray%7CString%0A%20*%20-%20data%20(Uint8Array%7CArray%7CString)%3A%20input%20data%20to%20decompress.%0A%20*%20-%20options%20(Object)%3A%20zlib%20inflate%20options.%0A%20*%0A%20*%20Decompress%20%60data%60%20with%20inflate%2Fungzip%20and%20%60options%60.%20Autodetect%0A%20*%20format%20via%20wrapper%20header%20by%20default.%20That's%20why%20we%20don't%20provide%0A%20*%20separate%20%60ungzip%60%20method.%0A%20*%0A%20*%20Supported%20options%20are%3A%0A%20*%0A%20*%20-%20windowBits%0A%20*%0A%20*%20%5Bhttp%3A%2F%2Fzlib.net%2Fmanual.html%23Advanced%5D(http%3A%2F%2Fzlib.net%2Fmanual.html%23Advanced)%0A%20*%20for%20more%20information.%0A%20*%0A%20*%20Sugar%20(options)%3A%0A%20*%0A%20*%20-%20%60raw%60%20(Boolean)%20-%20say%20that%20we%20work%20with%20raw%20stream%2C%20if%20you%20don't%20wish%20to%20specify%0A%20*%20%20%20negative%20windowBits%20implicitly.%0A%20*%20-%20%60to%60%20(String)%20-%20if%20equal%20to%20'string'%2C%20then%20result%20will%20be%20converted%0A%20*%20%20%20from%20utf8%20to%20utf16%20(javascript)%20string.%20When%20string%20output%20requested%2C%0A%20*%20%20%20chunk%20length%20can%20differ%20from%20%60chunkSize%60%2C%20depending%20on%20content.%0A%20*%0A%20*%0A%20*%20%23%23%23%23%23%20Example%3A%0A%20*%0A%20*%20%60%60%60javascript%0A%20*%20var%20pako%20%3D%20require('pako')%0A%20*%20%20%20%2C%20input%20%3D%20pako.deflate(%5B1%2C2%2C3%2C4%2C5%2C6%2C7%2C8%2C9%5D)%0A%20*%20%20%20%2C%20output%3B%0A%20*%0A%20*%20try%20%7B%0A%20*%20%20%20output%20%3D%20pako.inflate(input)%3B%0A%20*%20%7D%20catch%20(err)%0A%20*%20%20%20console.log(err)%3B%0A%20*%20%7D%0A%20*%20%60%60%60%0A%20**%2F%0Afunction%20inflate(input%2C%20options)%20%7B%0A%20%20var%20inflator%20%3D%20new%20Inflate(options)%3B%0A%0A%20%20inflator.push(input%2C%20true)%3B%0A%0A%20%20%2F%2F%20That%20will%20never%20happens%2C%20if%20you%20don't%20cheat%20with%20options%20%3A)%0A%20%20if%20(inflator.err)%20%7B%20throw%20inflator.msg%3B%20%7D%0A%0A%20%20return%20inflator.result%3B%0A%7D%0A%0A%0A%2F**%0A%20*%20inflateRaw(data%5B%2C%20options%5D)%20-%3E%20Uint8Array%7CArray%7CString%0A%20*%20-%20data%20(Uint8Array%7CArray%7CString)%3A%20input%20data%20to%20decompress.%0A%20*%20-%20options%20(Object)%3A%20zlib%20inflate%20options.%0A%20*%0A%20*%20The%20same%20as%20%5B%5Binflate%5D%5D%2C%20but%20creates%20raw%20data%2C%20without%20wrapper%0A%20*%20(header%20and%20adler32%20crc).%0A%20**%2F%0Afunction%20inflateRaw(input%2C%20options)%20%7B%0A%20%20options%20%3D%20options%20%7C%7C%20%7B%7D%3B%0A%20%20options.raw%20%3D%20true%3B%0A%20%20return%20inflate(input%2C%20options)%3B%0A%7D%0A%0A%0A%2F**%0A%20*%20ungzip(data%5B%2C%20options%5D)%20-%3E%20Uint8Array%7CArray%7CString%0A%20*%20-%20data%20(Uint8Array%7CArray%7CString)%3A%20input%20data%20to%20decompress.%0A%20*%20-%20options%20(Object)%3A%20zlib%20inflate%20options.%0A%20*%0A%20*%20Just%20shortcut%20to%20%5B%5Binflate%5D%5D%2C%20because%20it%20autodetects%20format%0A%20*%20by%20header.content.%20Done%20for%20convenience.%0A%20**%2F%0A%0A%0Aexports.Inflate%20%3D%20Inflate%3B%0Aexports.inflate%20%3D%20inflate%3B%0Aexports.inflateRaw%20%3D%20inflateRaw%3B%0Aexports.ungzip%20%20%3D%20inflate%3B%0A%0A%7D%2C%7B%22.%2Futils%2Fcommon%22%3A28%2C%22.%2Futils%2Fstrings%22%3A29%2C%22.%2Fzlib%2Fconstants%22%3A31%2C%22.%2Fzlib%2Fgzheader%22%3A34%2C%22.%2Fzlib%2Finflate%22%3A36%2C%22.%2Fzlib%2Fmessages%22%3A38%2C%22.%2Fzlib%2Fzstream%22%3A40%7D%5D%2C28%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0A%0A%0Avar%20TYPED_OK%20%3D%20%20(typeof%20Uint8Array%20!%3D%3D%20'undefined')%20%26%26%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(typeof%20Uint16Array%20!%3D%3D%20'undefined')%20%26%26%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(typeof%20Int32Array%20!%3D%3D%20'undefined')%3B%0A%0A%0Aexports.assign%20%3D%20function%20(obj%20%2F*from1%2C%20from2%2C%20from3%2C%20...*%2F)%20%7B%0A%20%20var%20sources%20%3D%20Array.prototype.slice.call(arguments%2C%201)%3B%0A%20%20while%20(sources.length)%20%7B%0A%20%20%20%20var%20source%20%3D%20sources.shift()%3B%0A%20%20%20%20if%20(!source)%20%7B%20continue%3B%20%7D%0A%0A%20%20%20%20if%20(typeof%20source%20!%3D%3D%20'object')%20%7B%0A%20%20%20%20%20%20throw%20new%20TypeError(source%20%2B%20'must%20be%20non-object')%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20for%20(var%20p%20in%20source)%20%7B%0A%20%20%20%20%20%20if%20(source.hasOwnProperty(p))%20%7B%0A%20%20%20%20%20%20%20%20obj%5Bp%5D%20%3D%20source%5Bp%5D%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20return%20obj%3B%0A%7D%3B%0A%0A%0A%2F%2F%20reduce%20buffer%20size%2C%20avoiding%20mem%20copy%0Aexports.shrinkBuf%20%3D%20function%20(buf%2C%20size)%20%7B%0A%20%20if%20(buf.length%20%3D%3D%3D%20size)%20%7B%20return%20buf%3B%20%7D%0A%20%20if%20(buf.subarray)%20%7B%20return%20buf.subarray(0%2C%20size)%3B%20%7D%0A%20%20buf.length%20%3D%20size%3B%0A%20%20return%20buf%3B%0A%7D%3B%0A%0A%0Avar%20fnTyped%20%3D%20%7B%0A%20%20arraySet%3A%20function%20(dest%2C%20src%2C%20src_offs%2C%20len%2C%20dest_offs)%20%7B%0A%20%20%20%20if%20(src.subarray%20%26%26%20dest.subarray)%20%7B%0A%20%20%20%20%20%20dest.set(src.subarray(src_offs%2C%20src_offs%20%2B%20len)%2C%20dest_offs)%3B%0A%20%20%20%20%20%20return%3B%0A%20%20%20%20%7D%0A%20%20%20%20%2F%2F%20Fallback%20to%20ordinary%20array%0A%20%20%20%20for%20(var%20i%20%3D%200%3B%20i%20%3C%20len%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20dest%5Bdest_offs%20%2B%20i%5D%20%3D%20src%5Bsrc_offs%20%2B%20i%5D%3B%0A%20%20%20%20%7D%0A%20%20%7D%2C%0A%20%20%2F%2F%20Join%20array%20of%20chunks%20to%20single%20array.%0A%20%20flattenChunks%3A%20function%20(chunks)%20%7B%0A%20%20%20%20var%20i%2C%20l%2C%20len%2C%20pos%2C%20chunk%2C%20result%3B%0A%0A%20%20%20%20%2F%2F%20calculate%20data%20length%0A%20%20%20%20len%20%3D%200%3B%0A%20%20%20%20for%20(i%20%3D%200%2C%20l%20%3D%20chunks.length%3B%20i%20%3C%20l%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20len%20%2B%3D%20chunks%5Bi%5D.length%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20join%20chunks%0A%20%20%20%20result%20%3D%20new%20Uint8Array(len)%3B%0A%20%20%20%20pos%20%3D%200%3B%0A%20%20%20%20for%20(i%20%3D%200%2C%20l%20%3D%20chunks.length%3B%20i%20%3C%20l%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20chunk%20%3D%20chunks%5Bi%5D%3B%0A%20%20%20%20%20%20result.set(chunk%2C%20pos)%3B%0A%20%20%20%20%20%20pos%20%2B%3D%20chunk.length%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20return%20result%3B%0A%20%20%7D%0A%7D%3B%0A%0Avar%20fnUntyped%20%3D%20%7B%0A%20%20arraySet%3A%20function%20(dest%2C%20src%2C%20src_offs%2C%20len%2C%20dest_offs)%20%7B%0A%20%20%20%20for%20(var%20i%20%3D%200%3B%20i%20%3C%20len%3B%20i%2B%2B)%20%7B%0A%20%20%20%20%20%20dest%5Bdest_offs%20%2B%20i%5D%20%3D%20src%5Bsrc_offs%20%2B%20i%5D%3B%0A%20%20%20%20%7D%0A%20%20%7D%2C%0A%20%20%2F%2F%20Join%20array%20of%20chunks%20to%20single%20array.%0A%20%20flattenChunks%3A%20function%20(chunks)%20%7B%0A%20%20%20%20return%20%5B%5D.concat.apply(%5B%5D%2C%20chunks)%3B%0A%20%20%7D%0A%7D%3B%0A%0A%0A%2F%2F%20Enable%2FDisable%20typed%20arrays%20use%2C%20for%20testing%0A%2F%2F%0Aexports.setTyped%20%3D%20function%20(on)%20%7B%0A%20%20if%20(on)%20%7B%0A%20%20%20%20exports.Buf8%20%20%3D%20Uint8Array%3B%0A%20%20%20%20exports.Buf16%20%3D%20Uint16Array%3B%0A%20%20%20%20exports.Buf32%20%3D%20Int32Array%3B%0A%20%20%20%20exports.assign(exports%2C%20fnTyped)%3B%0A%20%20%7D%20else%20%7B%0A%20%20%20%20exports.Buf8%20%20%3D%20Array%3B%0A%20%20%20%20exports.Buf16%20%3D%20Array%3B%0A%20%20%20%20exports.Buf32%20%3D%20Array%3B%0A%20%20%20%20exports.assign(exports%2C%20fnUntyped)%3B%0A%20%20%7D%0A%7D%3B%0A%0Aexports.setTyped(TYPED_OK)%3B%0A%0A%7D%2C%7B%7D%5D%2C29%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A%2F%2F%20String%20encode%2Fdecode%20helpers%0A'use%20strict'%3B%0A%0A%0Avar%20utils%20%3D%20require('.%2Fcommon')%3B%0A%0A%0A%2F%2F%20Quick%20check%20if%20we%20can%20use%20fast%20array%20to%20bin%20string%20conversion%0A%2F%2F%0A%2F%2F%20-%20apply(Array)%20can%20fail%20on%20Android%202.2%0A%2F%2F%20-%20apply(Uint8Array)%20can%20fail%20on%20iOS%205.1%20Safary%0A%2F%2F%0Avar%20STR_APPLY_OK%20%3D%20true%3B%0Avar%20STR_APPLY_UIA_OK%20%3D%20true%3B%0A%0Atry%20%7B%20String.fromCharCode.apply(null%2C%20%5B%200%20%5D)%3B%20%7D%20catch%20(__)%20%7B%20STR_APPLY_OK%20%3D%20false%3B%20%7D%0Atry%20%7B%20String.fromCharCode.apply(null%2C%20new%20Uint8Array(1))%3B%20%7D%20catch%20(__)%20%7B%20STR_APPLY_UIA_OK%20%3D%20false%3B%20%7D%0A%0A%0A%2F%2F%20Table%20with%20utf8%20lengths%20(calculated%20by%20first%20byte%20of%20sequence)%0A%2F%2F%20Note%2C%20that%205%20%26%206-byte%20values%20and%20some%204-byte%20values%20can%20not%20be%20represented%20in%20JS%2C%0A%2F%2F%20because%20max%20possible%20codepoint%20is%200x10ffff%0Avar%20_utf8len%20%3D%20new%20utils.Buf8(256)%3B%0Afor%20(var%20q%20%3D%200%3B%20q%20%3C%20256%3B%20q%2B%2B)%20%7B%0A%20%20_utf8len%5Bq%5D%20%3D%20(q%20%3E%3D%20252%20%3F%206%20%3A%20q%20%3E%3D%20248%20%3F%205%20%3A%20q%20%3E%3D%20240%20%3F%204%20%3A%20q%20%3E%3D%20224%20%3F%203%20%3A%20q%20%3E%3D%20192%20%3F%202%20%3A%201)%3B%0A%7D%0A_utf8len%5B254%5D%20%3D%20_utf8len%5B254%5D%20%3D%201%3B%20%2F%2F%20Invalid%20sequence%20start%0A%0A%0A%2F%2F%20convert%20string%20to%20array%20(typed%2C%20when%20possible)%0Aexports.string2buf%20%3D%20function%20(str)%20%7B%0A%20%20var%20buf%2C%20c%2C%20c2%2C%20m_pos%2C%20i%2C%20str_len%20%3D%20str.length%2C%20buf_len%20%3D%200%3B%0A%0A%20%20%2F%2F%20count%20binary%20size%0A%20%20for%20(m_pos%20%3D%200%3B%20m_pos%20%3C%20str_len%3B%20m_pos%2B%2B)%20%7B%0A%20%20%20%20c%20%3D%20str.charCodeAt(m_pos)%3B%0A%20%20%20%20if%20((c%20%26%200xfc00)%20%3D%3D%3D%200xd800%20%26%26%20(m_pos%20%2B%201%20%3C%20str_len))%20%7B%0A%20%20%20%20%20%20c2%20%3D%20str.charCodeAt(m_pos%20%2B%201)%3B%0A%20%20%20%20%20%20if%20((c2%20%26%200xfc00)%20%3D%3D%3D%200xdc00)%20%7B%0A%20%20%20%20%20%20%20%20c%20%3D%200x10000%20%2B%20((c%20-%200xd800)%20%3C%3C%2010)%20%2B%20(c2%20-%200xdc00)%3B%0A%20%20%20%20%20%20%20%20m_pos%2B%2B%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20buf_len%20%2B%3D%20c%20%3C%200x80%20%3F%201%20%3A%20c%20%3C%200x800%20%3F%202%20%3A%20c%20%3C%200x10000%20%3F%203%20%3A%204%3B%0A%20%20%7D%0A%0A%20%20%2F%2F%20allocate%20buffer%0A%20%20buf%20%3D%20new%20utils.Buf8(buf_len)%3B%0A%0A%20%20%2F%2F%20convert%0A%20%20for%20(i%20%3D%200%2C%20m_pos%20%3D%200%3B%20i%20%3C%20buf_len%3B%20m_pos%2B%2B)%20%7B%0A%20%20%20%20c%20%3D%20str.charCodeAt(m_pos)%3B%0A%20%20%20%20if%20((c%20%26%200xfc00)%20%3D%3D%3D%200xd800%20%26%26%20(m_pos%20%2B%201%20%3C%20str_len))%20%7B%0A%20%20%20%20%20%20c2%20%3D%20str.charCodeAt(m_pos%20%2B%201)%3B%0A%20%20%20%20%20%20if%20((c2%20%26%200xfc00)%20%3D%3D%3D%200xdc00)%20%7B%0A%20%20%20%20%20%20%20%20c%20%3D%200x10000%20%2B%20((c%20-%200xd800)%20%3C%3C%2010)%20%2B%20(c2%20-%200xdc00)%3B%0A%20%20%20%20%20%20%20%20m_pos%2B%2B%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20if%20(c%20%3C%200x80)%20%7B%0A%20%20%20%20%20%20%2F*%20one%20byte%20*%2F%0A%20%20%20%20%20%20buf%5Bi%2B%2B%5D%20%3D%20c%3B%0A%20%20%20%20%7D%20else%20if%20(c%20%3C%200x800)%20%7B%0A%20%20%20%20%20%20%2F*%20two%20bytes%20*%2F%0A%20%20%20%20%20%20buf%5Bi%2B%2B%5D%20%3D%200xC0%20%7C%20(c%20%3E%3E%3E%206)%3B%0A%20%20%20%20%20%20buf%5Bi%2B%2B%5D%20%3D%200x80%20%7C%20(c%20%26%200x3f)%3B%0A%20%20%20%20%7D%20else%20if%20(c%20%3C%200x10000)%20%7B%0A%20%20%20%20%20%20%2F*%20three%20bytes%20*%2F%0A%20%20%20%20%20%20buf%5Bi%2B%2B%5D%20%3D%200xE0%20%7C%20(c%20%3E%3E%3E%2012)%3B%0A%20%20%20%20%20%20buf%5Bi%2B%2B%5D%20%3D%200x80%20%7C%20(c%20%3E%3E%3E%206%20%26%200x3f)%3B%0A%20%20%20%20%20%20buf%5Bi%2B%2B%5D%20%3D%200x80%20%7C%20(c%20%26%200x3f)%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%2F*%20four%20bytes%20*%2F%0A%20%20%20%20%20%20buf%5Bi%2B%2B%5D%20%3D%200xf0%20%7C%20(c%20%3E%3E%3E%2018)%3B%0A%20%20%20%20%20%20buf%5Bi%2B%2B%5D%20%3D%200x80%20%7C%20(c%20%3E%3E%3E%2012%20%26%200x3f)%3B%0A%20%20%20%20%20%20buf%5Bi%2B%2B%5D%20%3D%200x80%20%7C%20(c%20%3E%3E%3E%206%20%26%200x3f)%3B%0A%20%20%20%20%20%20buf%5Bi%2B%2B%5D%20%3D%200x80%20%7C%20(c%20%26%200x3f)%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20return%20buf%3B%0A%7D%3B%0A%0A%2F%2F%20Helper%20(used%20in%202%20places)%0Afunction%20buf2binstring(buf%2C%20len)%20%7B%0A%20%20%2F%2F%20use%20fallback%20for%20big%20arrays%20to%20avoid%20stack%20overflow%0A%20%20if%20(len%20%3C%2065537)%20%7B%0A%20%20%20%20if%20((buf.subarray%20%26%26%20STR_APPLY_UIA_OK)%20%7C%7C%20(!buf.subarray%20%26%26%20STR_APPLY_OK))%20%7B%0A%20%20%20%20%20%20return%20String.fromCharCode.apply(null%2C%20utils.shrinkBuf(buf%2C%20len))%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20var%20result%20%3D%20''%3B%0A%20%20for%20(var%20i%20%3D%200%3B%20i%20%3C%20len%3B%20i%2B%2B)%20%7B%0A%20%20%20%20result%20%2B%3D%20String.fromCharCode(buf%5Bi%5D)%3B%0A%20%20%7D%0A%20%20return%20result%3B%0A%7D%0A%0A%0A%2F%2F%20Convert%20byte%20array%20to%20binary%20string%0Aexports.buf2binstring%20%3D%20function%20(buf)%20%7B%0A%20%20return%20buf2binstring(buf%2C%20buf.length)%3B%0A%7D%3B%0A%0A%0A%2F%2F%20Convert%20binary%20string%20(typed%2C%20when%20possible)%0Aexports.binstring2buf%20%3D%20function%20(str)%20%7B%0A%20%20var%20buf%20%3D%20new%20utils.Buf8(str.length)%3B%0A%20%20for%20(var%20i%20%3D%200%2C%20len%20%3D%20buf.length%3B%20i%20%3C%20len%3B%20i%2B%2B)%20%7B%0A%20%20%20%20buf%5Bi%5D%20%3D%20str.charCodeAt(i)%3B%0A%20%20%7D%0A%20%20return%20buf%3B%0A%7D%3B%0A%0A%0A%2F%2F%20convert%20array%20to%20string%0Aexports.buf2string%20%3D%20function%20(buf%2C%20max)%20%7B%0A%20%20var%20i%2C%20out%2C%20c%2C%20c_len%3B%0A%20%20var%20len%20%3D%20max%20%7C%7C%20buf.length%3B%0A%0A%20%20%2F%2F%20Reserve%20max%20possible%20length%20(2%20words%20per%20char)%0A%20%20%2F%2F%20NB%3A%20by%20unknown%20reasons%2C%20Array%20is%20significantly%20faster%20for%0A%20%20%2F%2F%20%20%20%20%20String.fromCharCode.apply%20than%20Uint16Array.%0A%20%20var%20utf16buf%20%3D%20new%20Array(len%20*%202)%3B%0A%0A%20%20for%20(out%20%3D%200%2C%20i%20%3D%200%3B%20i%20%3C%20len%3B)%20%7B%0A%20%20%20%20c%20%3D%20buf%5Bi%2B%2B%5D%3B%0A%20%20%20%20%2F%2F%20quick%20process%20ascii%0A%20%20%20%20if%20(c%20%3C%200x80)%20%7B%20utf16buf%5Bout%2B%2B%5D%20%3D%20c%3B%20continue%3B%20%7D%0A%0A%20%20%20%20c_len%20%3D%20_utf8len%5Bc%5D%3B%0A%20%20%20%20%2F%2F%20skip%205%20%26%206%20byte%20codes%0A%20%20%20%20if%20(c_len%20%3E%204)%20%7B%20utf16buf%5Bout%2B%2B%5D%20%3D%200xfffd%3B%20i%20%2B%3D%20c_len%20-%201%3B%20continue%3B%20%7D%0A%0A%20%20%20%20%2F%2F%20apply%20mask%20on%20first%20byte%0A%20%20%20%20c%20%26%3D%20c_len%20%3D%3D%3D%202%20%3F%200x1f%20%3A%20c_len%20%3D%3D%3D%203%20%3F%200x0f%20%3A%200x07%3B%0A%20%20%20%20%2F%2F%20join%20the%20rest%0A%20%20%20%20while%20(c_len%20%3E%201%20%26%26%20i%20%3C%20len)%20%7B%0A%20%20%20%20%20%20c%20%3D%20(c%20%3C%3C%206)%20%7C%20(buf%5Bi%2B%2B%5D%20%26%200x3f)%3B%0A%20%20%20%20%20%20c_len--%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F%2F%20terminated%20by%20end%20of%20string%3F%0A%20%20%20%20if%20(c_len%20%3E%201)%20%7B%20utf16buf%5Bout%2B%2B%5D%20%3D%200xfffd%3B%20continue%3B%20%7D%0A%0A%20%20%20%20if%20(c%20%3C%200x10000)%20%7B%0A%20%20%20%20%20%20utf16buf%5Bout%2B%2B%5D%20%3D%20c%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20c%20-%3D%200x10000%3B%0A%20%20%20%20%20%20utf16buf%5Bout%2B%2B%5D%20%3D%200xd800%20%7C%20((c%20%3E%3E%2010)%20%26%200x3ff)%3B%0A%20%20%20%20%20%20utf16buf%5Bout%2B%2B%5D%20%3D%200xdc00%20%7C%20(c%20%26%200x3ff)%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20return%20buf2binstring(utf16buf%2C%20out)%3B%0A%7D%3B%0A%0A%0A%2F%2F%20Calculate%20max%20possible%20position%20in%20utf8%20buffer%2C%0A%2F%2F%20that%20will%20not%20break%20sequence.%20If%20that's%20not%20possible%0A%2F%2F%20-%20(very%20small%20limits)%20return%20max%20size%20as%20is.%0A%2F%2F%0A%2F%2F%20buf%5B%5D%20-%20utf8%20bytes%20array%0A%2F%2F%20max%20%20%20-%20length%20limit%20(mandatory)%3B%0Aexports.utf8border%20%3D%20function%20(buf%2C%20max)%20%7B%0A%20%20var%20pos%3B%0A%0A%20%20max%20%3D%20max%20%7C%7C%20buf.length%3B%0A%20%20if%20(max%20%3E%20buf.length)%20%7B%20max%20%3D%20buf.length%3B%20%7D%0A%0A%20%20%2F%2F%20go%20back%20from%20last%20position%2C%20until%20start%20of%20sequence%20found%0A%20%20pos%20%3D%20max%20-%201%3B%0A%20%20while%20(pos%20%3E%3D%200%20%26%26%20(buf%5Bpos%5D%20%26%200xC0)%20%3D%3D%3D%200x80)%20%7B%20pos--%3B%20%7D%0A%0A%20%20%2F%2F%20butterflyup%20-%20very%20small%20and%20broken%20sequence%2C%0A%20%20%2F%2F%20return%20max%2C%20because%20we%20should%20return%20something%20anyway.%0A%20%20if%20(pos%20%3C%200)%20%7B%20return%20max%3B%20%7D%0A%0A%20%20%2F%2F%20If%20we%20came%20to%20start%20of%20buffer%20-%20that%20means%20vuffer%20is%20too%20small%2C%0A%20%20%2F%2F%20return%20max%20too.%0A%20%20if%20(pos%20%3D%3D%3D%200)%20%7B%20return%20max%3B%20%7D%0A%0A%20%20return%20(pos%20%2B%20_utf8len%5Bbuf%5Bpos%5D%5D%20%3E%20max)%20%3F%20pos%20%3A%20max%3B%0A%7D%3B%0A%0A%7D%2C%7B%22.%2Fcommon%22%3A28%7D%5D%2C30%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0A%0A%2F%2F%20Note%3A%20adler32%20takes%2012%25%20for%20level%200%20and%202%25%20for%20level%206.%0A%2F%2F%20It%20doesn't%20worth%20to%20make%20additional%20optimizationa%20as%20in%20original.%0A%2F%2F%20Small%20size%20is%20preferable.%0A%0Afunction%20adler32(adler%2C%20buf%2C%20len%2C%20pos)%20%7B%0A%20%20var%20s1%20%3D%20(adler%20%26%200xffff)%20%7C0%2C%0A%20%20%20%20%20%20s2%20%3D%20((adler%20%3E%3E%3E%2016)%20%26%200xffff)%20%7C0%2C%0A%20%20%20%20%20%20n%20%3D%200%3B%0A%0A%20%20while%20(len%20!%3D%3D%200)%20%7B%0A%20%20%20%20%2F%2F%20Set%20limit%20~%20twice%20less%20than%205552%2C%20to%20keep%0A%20%20%20%20%2F%2F%20s2%20in%2031-bits%2C%20because%20we%20force%20signed%20ints.%0A%20%20%20%20%2F%2F%20in%20other%20case%20%25%3D%20will%20fail.%0A%20%20%20%20n%20%3D%20len%20%3E%202000%20%3F%202000%20%3A%20len%3B%0A%20%20%20%20len%20-%3D%20n%3B%0A%0A%20%20%20%20do%20%7B%0A%20%20%20%20%20%20s1%20%3D%20(s1%20%2B%20buf%5Bpos%2B%2B%5D)%20%7C0%3B%0A%20%20%20%20%20%20s2%20%3D%20(s2%20%2B%20s1)%20%7C0%3B%0A%20%20%20%20%7D%20while%20(--n)%3B%0A%0A%20%20%20%20s1%20%25%3D%2065521%3B%0A%20%20%20%20s2%20%25%3D%2065521%3B%0A%20%20%7D%0A%0A%20%20return%20(s1%20%7C%20(s2%20%3C%3C%2016))%20%7C0%3B%0A%7D%0A%0A%0Amodule.exports%20%3D%20adler32%3B%0A%0A%7D%2C%7B%7D%5D%2C31%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0A%0A%0Amodule.exports%20%3D%20%7B%0A%0A%20%20%2F*%20Allowed%20flush%20values%3B%20see%20deflate()%20and%20inflate()%20below%20for%20details%20*%2F%0A%20%20Z_NO_FLUSH%3A%20%20%20%20%20%20%20%20%200%2C%0A%20%20Z_PARTIAL_FLUSH%3A%20%20%20%201%2C%0A%20%20Z_SYNC_FLUSH%3A%20%20%20%20%20%20%202%2C%0A%20%20Z_FULL_FLUSH%3A%20%20%20%20%20%20%203%2C%0A%20%20Z_FINISH%3A%20%20%20%20%20%20%20%20%20%20%204%2C%0A%20%20Z_BLOCK%3A%20%20%20%20%20%20%20%20%20%20%20%205%2C%0A%20%20Z_TREES%3A%20%20%20%20%20%20%20%20%20%20%20%206%2C%0A%0A%20%20%2F*%20Return%20codes%20for%20the%20compression%2Fdecompression%20functions.%20Negative%20values%0A%20%20*%20are%20errors%2C%20positive%20values%20are%20used%20for%20special%20but%20normal%20events.%0A%20%20*%2F%0A%20%20Z_OK%3A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%200%2C%0A%20%20Z_STREAM_END%3A%20%20%20%20%20%20%201%2C%0A%20%20Z_NEED_DICT%3A%20%20%20%20%20%20%20%202%2C%0A%20%20Z_ERRNO%3A%20%20%20%20%20%20%20%20%20%20%20-1%2C%0A%20%20Z_STREAM_ERROR%3A%20%20%20%20-2%2C%0A%20%20Z_DATA_ERROR%3A%20%20%20%20%20%20-3%2C%0A%20%20%2F%2FZ_MEM_ERROR%3A%20%20%20%20%20-4%2C%0A%20%20Z_BUF_ERROR%3A%20%20%20%20%20%20%20-5%2C%0A%20%20%2F%2FZ_VERSION_ERROR%3A%20-6%2C%0A%0A%20%20%2F*%20compression%20levels%20*%2F%0A%20%20Z_NO_COMPRESSION%3A%20%20%20%20%20%20%20%20%200%2C%0A%20%20Z_BEST_SPEED%3A%20%20%20%20%20%20%20%20%20%20%20%20%201%2C%0A%20%20Z_BEST_COMPRESSION%3A%20%20%20%20%20%20%209%2C%0A%20%20Z_DEFAULT_COMPRESSION%3A%20%20%20-1%2C%0A%0A%0A%20%20Z_FILTERED%3A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%201%2C%0A%20%20Z_HUFFMAN_ONLY%3A%20%20%20%20%20%20%20%20%20%20%202%2C%0A%20%20Z_RLE%3A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%203%2C%0A%20%20Z_FIXED%3A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%204%2C%0A%20%20Z_DEFAULT_STRATEGY%3A%20%20%20%20%20%20%200%2C%0A%0A%20%20%2F*%20Possible%20values%20of%20the%20data_type%20field%20(though%20see%20inflate())%20*%2F%0A%20%20Z_BINARY%3A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%200%2C%0A%20%20Z_TEXT%3A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%201%2C%0A%20%20%2F%2FZ_ASCII%3A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%201%2C%20%2F%2F%20%3D%20Z_TEXT%20(deprecated)%0A%20%20Z_UNKNOWN%3A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%202%2C%0A%0A%20%20%2F*%20The%20deflate%20compression%20method%20*%2F%0A%20%20Z_DEFLATED%3A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%208%0A%20%20%2F%2FZ_NULL%3A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20null%20%2F%2F%20Use%20-1%20or%20null%20inline%2C%20depending%20on%20var%20type%0A%7D%3B%0A%0A%7D%2C%7B%7D%5D%2C32%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0A%0A%2F%2F%20Note%3A%20we%20can't%20get%20significant%20speed%20boost%20here.%0A%2F%2F%20So%20write%20code%20to%20minimize%20size%20-%20no%20pregenerated%20tables%0A%2F%2F%20and%20array%20tools%20dependencies.%0A%0A%0A%2F%2F%20Use%20ordinary%20array%2C%20since%20untyped%20makes%20no%20boost%20here%0Afunction%20makeTable()%20%7B%0A%20%20var%20c%2C%20table%20%3D%20%5B%5D%3B%0A%0A%20%20for%20(var%20n%20%3D%200%3B%20n%20%3C%20256%3B%20n%2B%2B)%20%7B%0A%20%20%20%20c%20%3D%20n%3B%0A%20%20%20%20for%20(var%20k%20%3D%200%3B%20k%20%3C%208%3B%20k%2B%2B)%20%7B%0A%20%20%20%20%20%20c%20%3D%20((c%20%26%201)%20%3F%20(0xEDB88320%20%5E%20(c%20%3E%3E%3E%201))%20%3A%20(c%20%3E%3E%3E%201))%3B%0A%20%20%20%20%7D%0A%20%20%20%20table%5Bn%5D%20%3D%20c%3B%0A%20%20%7D%0A%0A%20%20return%20table%3B%0A%7D%0A%0A%2F%2F%20Create%20table%20on%20load.%20Just%20255%20signed%20longs.%20Not%20a%20problem.%0Avar%20crcTable%20%3D%20makeTable()%3B%0A%0A%0Afunction%20crc32(crc%2C%20buf%2C%20len%2C%20pos)%20%7B%0A%20%20var%20t%20%3D%20crcTable%2C%0A%20%20%20%20%20%20end%20%3D%20pos%20%2B%20len%3B%0A%0A%20%20crc%20%5E%3D%20-1%3B%0A%0A%20%20for%20(var%20i%20%3D%20pos%3B%20i%20%3C%20end%3B%20i%2B%2B)%20%7B%0A%20%20%20%20crc%20%3D%20(crc%20%3E%3E%3E%208)%20%5E%20t%5B(crc%20%5E%20buf%5Bi%5D)%20%26%200xFF%5D%3B%0A%20%20%7D%0A%0A%20%20return%20(crc%20%5E%20(-1))%3B%20%2F%2F%20%3E%3E%3E%200%3B%0A%7D%0A%0A%0Amodule.exports%20%3D%20crc32%3B%0A%0A%7D%2C%7B%7D%5D%2C33%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0A%0Avar%20utils%20%20%20%3D%20require('..%2Futils%2Fcommon')%3B%0Avar%20trees%20%20%20%3D%20require('.%2Ftrees')%3B%0Avar%20adler32%20%3D%20require('.%2Fadler32')%3B%0Avar%20crc32%20%20%20%3D%20require('.%2Fcrc32')%3B%0Avar%20msg%20%20%20%20%20%3D%20require('.%2Fmessages')%3B%0A%0A%2F*%20Public%20constants%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D*%2F%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D*%2F%0A%0A%0A%2F*%20Allowed%20flush%20values%3B%20see%20deflate()%20and%20inflate()%20below%20for%20details%20*%2F%0Avar%20Z_NO_FLUSH%20%20%20%20%20%20%3D%200%3B%0Avar%20Z_PARTIAL_FLUSH%20%3D%201%3B%0A%2F%2Fvar%20Z_SYNC_FLUSH%20%20%20%20%3D%202%3B%0Avar%20Z_FULL_FLUSH%20%20%20%20%3D%203%3B%0Avar%20Z_FINISH%20%20%20%20%20%20%20%20%3D%204%3B%0Avar%20Z_BLOCK%20%20%20%20%20%20%20%20%20%3D%205%3B%0A%2F%2Fvar%20Z_TREES%20%20%20%20%20%20%20%20%20%3D%206%3B%0A%0A%0A%2F*%20Return%20codes%20for%20the%20compression%2Fdecompression%20functions.%20Negative%20values%0A%20*%20are%20errors%2C%20positive%20values%20are%20used%20for%20special%20but%20normal%20events.%0A%20*%2F%0Avar%20Z_OK%20%20%20%20%20%20%20%20%20%20%20%20%3D%200%3B%0Avar%20Z_STREAM_END%20%20%20%20%3D%201%3B%0A%2F%2Fvar%20Z_NEED_DICT%20%20%20%20%20%3D%202%3B%0A%2F%2Fvar%20Z_ERRNO%20%20%20%20%20%20%20%20%20%3D%20-1%3B%0Avar%20Z_STREAM_ERROR%20%20%3D%20-2%3B%0Avar%20Z_DATA_ERROR%20%20%20%20%3D%20-3%3B%0A%2F%2Fvar%20Z_MEM_ERROR%20%20%20%20%20%3D%20-4%3B%0Avar%20Z_BUF_ERROR%20%20%20%20%20%3D%20-5%3B%0A%2F%2Fvar%20Z_VERSION_ERROR%20%3D%20-6%3B%0A%0A%0A%2F*%20compression%20levels%20*%2F%0A%2F%2Fvar%20Z_NO_COMPRESSION%20%20%20%20%20%20%3D%200%3B%0A%2F%2Fvar%20Z_BEST_SPEED%20%20%20%20%20%20%20%20%20%20%3D%201%3B%0A%2F%2Fvar%20Z_BEST_COMPRESSION%20%20%20%20%3D%209%3B%0Avar%20Z_DEFAULT_COMPRESSION%20%3D%20-1%3B%0A%0A%0Avar%20Z_FILTERED%20%20%20%20%20%20%20%20%20%20%20%20%3D%201%3B%0Avar%20Z_HUFFMAN_ONLY%20%20%20%20%20%20%20%20%3D%202%3B%0Avar%20Z_RLE%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%203%3B%0Avar%20Z_FIXED%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%204%3B%0Avar%20Z_DEFAULT_STRATEGY%20%20%20%20%3D%200%3B%0A%0A%2F*%20Possible%20values%20of%20the%20data_type%20field%20(though%20see%20inflate())%20*%2F%0A%2F%2Fvar%20Z_BINARY%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%200%3B%0A%2F%2Fvar%20Z_TEXT%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%201%3B%0A%2F%2Fvar%20Z_ASCII%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%201%3B%20%2F%2F%20%3D%20Z_TEXT%0Avar%20Z_UNKNOWN%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%202%3B%0A%0A%0A%2F*%20The%20deflate%20compression%20method%20*%2F%0Avar%20Z_DEFLATED%20%20%3D%208%3B%0A%0A%2F*%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D*%2F%0A%0A%0Avar%20MAX_MEM_LEVEL%20%3D%209%3B%0A%2F*%20Maximum%20value%20for%20memLevel%20in%20deflateInit2%20*%2F%0Avar%20MAX_WBITS%20%3D%2015%3B%0A%2F*%2032K%20LZ77%20window%20*%2F%0Avar%20DEF_MEM_LEVEL%20%3D%208%3B%0A%0A%0Avar%20LENGTH_CODES%20%20%3D%2029%3B%0A%2F*%20number%20of%20length%20codes%2C%20not%20counting%20the%20special%20END_BLOCK%20code%20*%2F%0Avar%20LITERALS%20%20%20%20%20%20%3D%20256%3B%0A%2F*%20number%20of%20literal%20bytes%200..255%20*%2F%0Avar%20L_CODES%20%20%20%20%20%20%20%3D%20LITERALS%20%2B%201%20%2B%20LENGTH_CODES%3B%0A%2F*%20number%20of%20Literal%20or%20Length%20codes%2C%20including%20the%20END_BLOCK%20code%20*%2F%0Avar%20D_CODES%20%20%20%20%20%20%20%3D%2030%3B%0A%2F*%20number%20of%20distance%20codes%20*%2F%0Avar%20BL_CODES%20%20%20%20%20%20%3D%2019%3B%0A%2F*%20number%20of%20codes%20used%20to%20transfer%20the%20bit%20lengths%20*%2F%0Avar%20HEAP_SIZE%20%20%20%20%20%3D%202%20*%20L_CODES%20%2B%201%3B%0A%2F*%20maximum%20heap%20size%20*%2F%0Avar%20MAX_BITS%20%20%3D%2015%3B%0A%2F*%20All%20codes%20must%20not%20exceed%20MAX_BITS%20bits%20*%2F%0A%0Avar%20MIN_MATCH%20%3D%203%3B%0Avar%20MAX_MATCH%20%3D%20258%3B%0Avar%20MIN_LOOKAHEAD%20%3D%20(MAX_MATCH%20%2B%20MIN_MATCH%20%2B%201)%3B%0A%0Avar%20PRESET_DICT%20%3D%200x20%3B%0A%0Avar%20INIT_STATE%20%3D%2042%3B%0Avar%20EXTRA_STATE%20%3D%2069%3B%0Avar%20NAME_STATE%20%3D%2073%3B%0Avar%20COMMENT_STATE%20%3D%2091%3B%0Avar%20HCRC_STATE%20%3D%20103%3B%0Avar%20BUSY_STATE%20%3D%20113%3B%0Avar%20FINISH_STATE%20%3D%20666%3B%0A%0Avar%20BS_NEED_MORE%20%20%20%20%20%20%3D%201%3B%20%2F*%20block%20not%20completed%2C%20need%20more%20input%20or%20more%20output%20*%2F%0Avar%20BS_BLOCK_DONE%20%20%20%20%20%3D%202%3B%20%2F*%20block%20flush%20performed%20*%2F%0Avar%20BS_FINISH_STARTED%20%3D%203%3B%20%2F*%20finish%20started%2C%20need%20only%20more%20output%20at%20next%20deflate%20*%2F%0Avar%20BS_FINISH_DONE%20%20%20%20%3D%204%3B%20%2F*%20finish%20done%2C%20accept%20no%20more%20input%20or%20output%20*%2F%0A%0Avar%20OS_CODE%20%3D%200x03%3B%20%2F%2F%20Unix%20%3A)%20.%20Don't%20detect%2C%20use%20this%20default.%0A%0Afunction%20err(strm%2C%20errorCode)%20%7B%0A%20%20strm.msg%20%3D%20msg%5BerrorCode%5D%3B%0A%20%20return%20errorCode%3B%0A%7D%0A%0Afunction%20rank(f)%20%7B%0A%20%20return%20((f)%20%3C%3C%201)%20-%20((f)%20%3E%204%20%3F%209%20%3A%200)%3B%0A%7D%0A%0Afunction%20zero(buf)%20%7B%20var%20len%20%3D%20buf.length%3B%20while%20(--len%20%3E%3D%200)%20%7B%20buf%5Blen%5D%20%3D%200%3B%20%7D%20%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Flush%20as%20much%20pending%20output%20as%20possible.%20All%20deflate()%20output%20goes%0A%20*%20through%20this%20function%20so%20some%20applications%20may%20wish%20to%20modify%20it%0A%20*%20to%20avoid%20allocating%20a%20large%20strm-%3Eoutput%20buffer%20and%20copying%20into%20it.%0A%20*%20(See%20also%20read_buf()).%0A%20*%2F%0Afunction%20flush_pending(strm)%20%7B%0A%20%20var%20s%20%3D%20strm.state%3B%0A%0A%20%20%2F%2F_tr_flush_bits(s)%3B%0A%20%20var%20len%20%3D%20s.pending%3B%0A%20%20if%20(len%20%3E%20strm.avail_out)%20%7B%0A%20%20%20%20len%20%3D%20strm.avail_out%3B%0A%20%20%7D%0A%20%20if%20(len%20%3D%3D%3D%200)%20%7B%20return%3B%20%7D%0A%0A%20%20utils.arraySet(strm.output%2C%20s.pending_buf%2C%20s.pending_out%2C%20len%2C%20strm.next_out)%3B%0A%20%20strm.next_out%20%2B%3D%20len%3B%0A%20%20s.pending_out%20%2B%3D%20len%3B%0A%20%20strm.total_out%20%2B%3D%20len%3B%0A%20%20strm.avail_out%20-%3D%20len%3B%0A%20%20s.pending%20-%3D%20len%3B%0A%20%20if%20(s.pending%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20s.pending_out%20%3D%200%3B%0A%20%20%7D%0A%7D%0A%0A%0Afunction%20flush_block_only(s%2C%20last)%20%7B%0A%20%20trees._tr_flush_block(s%2C%20(s.block_start%20%3E%3D%200%20%3F%20s.block_start%20%3A%20-1)%2C%20s.strstart%20-%20s.block_start%2C%20last)%3B%0A%20%20s.block_start%20%3D%20s.strstart%3B%0A%20%20flush_pending(s.strm)%3B%0A%7D%0A%0A%0Afunction%20put_byte(s%2C%20b)%20%7B%0A%20%20s.pending_buf%5Bs.pending%2B%2B%5D%20%3D%20b%3B%0A%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Put%20a%20short%20in%20the%20pending%20buffer.%20The%2016-bit%20value%20is%20put%20in%20MSB%20order.%0A%20*%20IN%20assertion%3A%20the%20stream%20state%20is%20correct%20and%20there%20is%20enough%20room%20in%0A%20*%20pending_buf.%0A%20*%2F%0Afunction%20putShortMSB(s%2C%20b)%20%7B%0A%2F%2F%20%20put_byte(s%2C%20(Byte)(b%20%3E%3E%208))%3B%0A%2F%2F%20%20put_byte(s%2C%20(Byte)(b%20%26%200xff))%3B%0A%20%20s.pending_buf%5Bs.pending%2B%2B%5D%20%3D%20(b%20%3E%3E%3E%208)%20%26%200xff%3B%0A%20%20s.pending_buf%5Bs.pending%2B%2B%5D%20%3D%20b%20%26%200xff%3B%0A%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Read%20a%20new%20buffer%20from%20the%20current%20input%20stream%2C%20update%20the%20adler32%0A%20*%20and%20total%20number%20of%20bytes%20read.%20%20All%20deflate()%20input%20goes%20through%0A%20*%20this%20function%20so%20some%20applications%20may%20wish%20to%20modify%20it%20to%20avoid%0A%20*%20allocating%20a%20large%20strm-%3Einput%20buffer%20and%20copying%20from%20it.%0A%20*%20(See%20also%20flush_pending()).%0A%20*%2F%0Afunction%20read_buf(strm%2C%20buf%2C%20start%2C%20size)%20%7B%0A%20%20var%20len%20%3D%20strm.avail_in%3B%0A%0A%20%20if%20(len%20%3E%20size)%20%7B%20len%20%3D%20size%3B%20%7D%0A%20%20if%20(len%20%3D%3D%3D%200)%20%7B%20return%200%3B%20%7D%0A%0A%20%20strm.avail_in%20-%3D%20len%3B%0A%0A%20%20utils.arraySet(buf%2C%20strm.input%2C%20strm.next_in%2C%20len%2C%20start)%3B%0A%20%20if%20(strm.state.wrap%20%3D%3D%3D%201)%20%7B%0A%20%20%20%20strm.adler%20%3D%20adler32(strm.adler%2C%20buf%2C%20len%2C%20start)%3B%0A%20%20%7D%0A%0A%20%20else%20if%20(strm.state.wrap%20%3D%3D%3D%202)%20%7B%0A%20%20%20%20strm.adler%20%3D%20crc32(strm.adler%2C%20buf%2C%20len%2C%20start)%3B%0A%20%20%7D%0A%0A%20%20strm.next_in%20%2B%3D%20len%3B%0A%20%20strm.total_in%20%2B%3D%20len%3B%0A%0A%20%20return%20len%3B%0A%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Set%20match_start%20to%20the%20longest%20match%20starting%20at%20the%20given%20string%20and%0A%20*%20return%20its%20length.%20Matches%20shorter%20or%20equal%20to%20prev_length%20are%20discarded%2C%0A%20*%20in%20which%20case%20the%20result%20is%20equal%20to%20prev_length%20and%20match_start%20is%0A%20*%20garbage.%0A%20*%20IN%20assertions%3A%20cur_match%20is%20the%20head%20of%20the%20hash%20chain%20for%20the%20current%0A%20*%20%20%20string%20(strstart)%20and%20its%20distance%20is%20%3C%3D%20MAX_DIST%2C%20and%20prev_length%20%3E%3D%201%0A%20*%20OUT%20assertion%3A%20the%20match%20length%20is%20not%20greater%20than%20s-%3Elookahead.%0A%20*%2F%0Afunction%20longest_match(s%2C%20cur_match)%20%7B%0A%20%20var%20chain_length%20%3D%20s.max_chain_length%3B%20%20%20%20%20%20%2F*%20max%20hash%20chain%20length%20*%2F%0A%20%20var%20scan%20%3D%20s.strstart%3B%20%2F*%20current%20string%20*%2F%0A%20%20var%20match%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20matched%20string%20*%2F%0A%20%20var%20len%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20length%20of%20current%20match%20*%2F%0A%20%20var%20best_len%20%3D%20s.prev_length%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20best%20match%20length%20so%20far%20*%2F%0A%20%20var%20nice_match%20%3D%20s.nice_match%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20stop%20if%20match%20long%20enough%20*%2F%0A%20%20var%20limit%20%3D%20(s.strstart%20%3E%20(s.w_size%20-%20MIN_LOOKAHEAD))%20%3F%0A%20%20%20%20%20%20s.strstart%20-%20(s.w_size%20-%20MIN_LOOKAHEAD)%20%3A%200%2F*NIL*%2F%3B%0A%0A%20%20var%20_win%20%3D%20s.window%3B%20%2F%2F%20shortcut%0A%0A%20%20var%20wmask%20%3D%20s.w_mask%3B%0A%20%20var%20prev%20%20%3D%20s.prev%3B%0A%0A%20%20%2F*%20Stop%20when%20cur_match%20becomes%20%3C%3D%20limit.%20To%20simplify%20the%20code%2C%0A%20%20%20*%20we%20prevent%20matches%20with%20the%20string%20of%20window%20index%200.%0A%20%20%20*%2F%0A%0A%20%20var%20strend%20%3D%20s.strstart%20%2B%20MAX_MATCH%3B%0A%20%20var%20scan_end1%20%20%3D%20_win%5Bscan%20%2B%20best_len%20-%201%5D%3B%0A%20%20var%20scan_end%20%20%20%3D%20_win%5Bscan%20%2B%20best_len%5D%3B%0A%0A%20%20%2F*%20The%20code%20is%20optimized%20for%20HASH_BITS%20%3E%3D%208%20and%20MAX_MATCH-2%20multiple%20of%2016.%0A%20%20%20*%20It%20is%20easy%20to%20get%20rid%20of%20this%20optimization%20if%20necessary.%0A%20%20%20*%2F%0A%20%20%2F%2F%20Assert(s-%3Ehash_bits%20%3E%3D%208%20%26%26%20MAX_MATCH%20%3D%3D%20258%2C%20%22Code%20too%20clever%22)%3B%0A%0A%20%20%2F*%20Do%20not%20waste%20too%20much%20time%20if%20we%20already%20have%20a%20good%20match%3A%20*%2F%0A%20%20if%20(s.prev_length%20%3E%3D%20s.good_match)%20%7B%0A%20%20%20%20chain_length%20%3E%3E%3D%202%3B%0A%20%20%7D%0A%20%20%2F*%20Do%20not%20look%20for%20matches%20beyond%20the%20end%20of%20the%20input.%20This%20is%20necessary%0A%20%20%20*%20to%20make%20deflate%20deterministic.%0A%20%20%20*%2F%0A%20%20if%20(nice_match%20%3E%20s.lookahead)%20%7B%20nice_match%20%3D%20s.lookahead%3B%20%7D%0A%0A%20%20%2F%2F%20Assert((ulg)s-%3Estrstart%20%3C%3D%20s-%3Ewindow_size-MIN_LOOKAHEAD%2C%20%22need%20lookahead%22)%3B%0A%0A%20%20do%20%7B%0A%20%20%20%20%2F%2F%20Assert(cur_match%20%3C%20s-%3Estrstart%2C%20%22no%20future%22)%3B%0A%20%20%20%20match%20%3D%20cur_match%3B%0A%0A%20%20%20%20%2F*%20Skip%20to%20next%20match%20if%20the%20match%20length%20cannot%20increase%0A%20%20%20%20%20*%20or%20if%20the%20match%20length%20is%20less%20than%202.%20%20Note%20that%20the%20checks%20below%0A%20%20%20%20%20*%20for%20insufficient%20lookahead%20only%20occur%20occasionally%20for%20performance%0A%20%20%20%20%20*%20reasons.%20%20Therefore%20uninitialized%20memory%20will%20be%20accessed%2C%20and%0A%20%20%20%20%20*%20conditional%20jumps%20will%20be%20made%20that%20depend%20on%20those%20values.%0A%20%20%20%20%20*%20However%20the%20length%20of%20the%20match%20is%20limited%20to%20the%20lookahead%2C%20so%0A%20%20%20%20%20*%20the%20output%20of%20deflate%20is%20not%20affected%20by%20the%20uninitialized%20values.%0A%20%20%20%20%20*%2F%0A%0A%20%20%20%20if%20(_win%5Bmatch%20%2B%20best_len%5D%20%20%20%20%20!%3D%3D%20scan_end%20%20%7C%7C%0A%20%20%20%20%20%20%20%20_win%5Bmatch%20%2B%20best_len%20-%201%5D%20!%3D%3D%20scan_end1%20%7C%7C%0A%20%20%20%20%20%20%20%20_win%5Bmatch%5D%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20!%3D%3D%20_win%5Bscan%5D%20%7C%7C%0A%20%20%20%20%20%20%20%20_win%5B%2B%2Bmatch%5D%20%20%20%20%20%20%20%20%20%20%20%20%20%20!%3D%3D%20_win%5Bscan%20%2B%201%5D)%20%7B%0A%20%20%20%20%20%20continue%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F*%20The%20check%20at%20best_len-1%20can%20be%20removed%20because%20it%20will%20be%20made%0A%20%20%20%20%20*%20again%20later.%20(This%20heuristic%20is%20not%20always%20a%20win.)%0A%20%20%20%20%20*%20It%20is%20not%20necessary%20to%20compare%20scan%5B2%5D%20and%20match%5B2%5D%20since%20they%0A%20%20%20%20%20*%20are%20always%20equal%20when%20the%20other%20bytes%20match%2C%20given%20that%0A%20%20%20%20%20*%20the%20hash%20keys%20are%20equal%20and%20that%20HASH_BITS%20%3E%3D%208.%0A%20%20%20%20%20*%2F%0A%20%20%20%20scan%20%2B%3D%202%3B%0A%20%20%20%20match%2B%2B%3B%0A%20%20%20%20%2F%2F%20Assert(*scan%20%3D%3D%20*match%2C%20%22match%5B2%5D%3F%22)%3B%0A%0A%20%20%20%20%2F*%20We%20check%20for%20insufficient%20lookahead%20only%20every%208th%20comparison%3B%0A%20%20%20%20%20*%20the%20256th%20check%20will%20be%20made%20at%20strstart%2B258.%0A%20%20%20%20%20*%2F%0A%20%20%20%20do%20%7B%0A%20%20%20%20%20%20%2F*jshint%20noempty%3Afalse*%2F%0A%20%20%20%20%7D%20while%20(_win%5B%2B%2Bscan%5D%20%3D%3D%3D%20_win%5B%2B%2Bmatch%5D%20%26%26%20_win%5B%2B%2Bscan%5D%20%3D%3D%3D%20_win%5B%2B%2Bmatch%5D%20%26%26%0A%20%20%20%20%20%20%20%20%20%20%20%20%20_win%5B%2B%2Bscan%5D%20%3D%3D%3D%20_win%5B%2B%2Bmatch%5D%20%26%26%20_win%5B%2B%2Bscan%5D%20%3D%3D%3D%20_win%5B%2B%2Bmatch%5D%20%26%26%0A%20%20%20%20%20%20%20%20%20%20%20%20%20_win%5B%2B%2Bscan%5D%20%3D%3D%3D%20_win%5B%2B%2Bmatch%5D%20%26%26%20_win%5B%2B%2Bscan%5D%20%3D%3D%3D%20_win%5B%2B%2Bmatch%5D%20%26%26%0A%20%20%20%20%20%20%20%20%20%20%20%20%20_win%5B%2B%2Bscan%5D%20%3D%3D%3D%20_win%5B%2B%2Bmatch%5D%20%26%26%20_win%5B%2B%2Bscan%5D%20%3D%3D%3D%20_win%5B%2B%2Bmatch%5D%20%26%26%0A%20%20%20%20%20%20%20%20%20%20%20%20%20scan%20%3C%20strend)%3B%0A%0A%20%20%20%20%2F%2F%20Assert(scan%20%3C%3D%20s-%3Ewindow%2B(unsigned)(s-%3Ewindow_size-1)%2C%20%22wild%20scan%22)%3B%0A%0A%20%20%20%20len%20%3D%20MAX_MATCH%20-%20(strend%20-%20scan)%3B%0A%20%20%20%20scan%20%3D%20strend%20-%20MAX_MATCH%3B%0A%0A%20%20%20%20if%20(len%20%3E%20best_len)%20%7B%0A%20%20%20%20%20%20s.match_start%20%3D%20cur_match%3B%0A%20%20%20%20%20%20best_len%20%3D%20len%3B%0A%20%20%20%20%20%20if%20(len%20%3E%3D%20nice_match)%20%7B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20scan_end1%20%20%3D%20_win%5Bscan%20%2B%20best_len%20-%201%5D%3B%0A%20%20%20%20%20%20scan_end%20%20%20%3D%20_win%5Bscan%20%2B%20best_len%5D%3B%0A%20%20%20%20%7D%0A%20%20%7D%20while%20((cur_match%20%3D%20prev%5Bcur_match%20%26%20wmask%5D)%20%3E%20limit%20%26%26%20--chain_length%20!%3D%3D%200)%3B%0A%0A%20%20if%20(best_len%20%3C%3D%20s.lookahead)%20%7B%0A%20%20%20%20return%20best_len%3B%0A%20%20%7D%0A%20%20return%20s.lookahead%3B%0A%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Fill%20the%20window%20when%20the%20lookahead%20becomes%20insufficient.%0A%20*%20Updates%20strstart%20and%20lookahead.%0A%20*%0A%20*%20IN%20assertion%3A%20lookahead%20%3C%20MIN_LOOKAHEAD%0A%20*%20OUT%20assertions%3A%20strstart%20%3C%3D%20window_size-MIN_LOOKAHEAD%0A%20*%20%20%20%20At%20least%20one%20byte%20has%20been%20read%2C%20or%20avail_in%20%3D%3D%200%3B%20reads%20are%0A%20*%20%20%20%20performed%20for%20at%20least%20two%20bytes%20(required%20for%20the%20zip%20translate_eol%0A%20*%20%20%20%20option%20--%20not%20supported%20here).%0A%20*%2F%0Afunction%20fill_window(s)%20%7B%0A%20%20var%20_w_size%20%3D%20s.w_size%3B%0A%20%20var%20p%2C%20n%2C%20m%2C%20more%2C%20str%3B%0A%0A%20%20%2F%2FAssert(s-%3Elookahead%20%3C%20MIN_LOOKAHEAD%2C%20%22already%20enough%20lookahead%22)%3B%0A%0A%20%20do%20%7B%0A%20%20%20%20more%20%3D%20s.window_size%20-%20s.lookahead%20-%20s.strstart%3B%0A%0A%20%20%20%20%2F%2F%20JS%20ints%20have%2032%20bit%2C%20block%20below%20not%20needed%0A%20%20%20%20%2F*%20Deal%20with%20!%40%23%24%25%2064K%20limit%3A%20*%2F%0A%20%20%20%20%2F%2Fif%20(sizeof(int)%20%3C%3D%202)%20%7B%0A%20%20%20%20%2F%2F%20%20%20%20if%20(more%20%3D%3D%200%20%26%26%20s-%3Estrstart%20%3D%3D%200%20%26%26%20s-%3Elookahead%20%3D%3D%200)%20%7B%0A%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20more%20%3D%20wsize%3B%0A%20%20%20%20%2F%2F%0A%20%20%20%20%2F%2F%20%20%7D%20else%20if%20(more%20%3D%3D%20(unsigned)(-1))%20%7B%0A%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20%2F*%20Very%20unlikely%2C%20but%20possible%20on%2016%20bit%20machine%20if%0A%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20%20*%20strstart%20%3D%3D%200%20%26%26%20lookahead%20%3D%3D%201%20(input%20done%20a%20byte%20at%20time)%0A%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20%20*%2F%0A%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20more--%3B%0A%20%20%20%20%2F%2F%20%20%20%20%7D%0A%20%20%20%20%2F%2F%7D%0A%0A%0A%20%20%20%20%2F*%20If%20the%20window%20is%20almost%20full%20and%20there%20is%20insufficient%20lookahead%2C%0A%20%20%20%20%20*%20move%20the%20upper%20half%20to%20the%20lower%20one%20to%20make%20room%20in%20the%20upper%20half.%0A%20%20%20%20%20*%2F%0A%20%20%20%20if%20(s.strstart%20%3E%3D%20_w_size%20%2B%20(_w_size%20-%20MIN_LOOKAHEAD))%20%7B%0A%0A%20%20%20%20%20%20utils.arraySet(s.window%2C%20s.window%2C%20_w_size%2C%20_w_size%2C%200)%3B%0A%20%20%20%20%20%20s.match_start%20-%3D%20_w_size%3B%0A%20%20%20%20%20%20s.strstart%20-%3D%20_w_size%3B%0A%20%20%20%20%20%20%2F*%20we%20now%20have%20strstart%20%3E%3D%20MAX_DIST%20*%2F%0A%20%20%20%20%20%20s.block_start%20-%3D%20_w_size%3B%0A%0A%20%20%20%20%20%20%2F*%20Slide%20the%20hash%20table%20(could%20be%20avoided%20with%2032%20bit%20values%0A%20%20%20%20%20%20%20at%20the%20expense%20of%20memory%20usage).%20We%20slide%20even%20when%20level%20%3D%3D%200%0A%20%20%20%20%20%20%20to%20keep%20the%20hash%20table%20consistent%20if%20we%20switch%20back%20to%20level%20%3E%200%0A%20%20%20%20%20%20%20later.%20(Using%20level%200%20permanently%20is%20not%20an%20optimal%20usage%20of%0A%20%20%20%20%20%20%20zlib%2C%20so%20we%20don't%20care%20about%20this%20pathological%20case.)%0A%20%20%20%20%20%20%20*%2F%0A%0A%20%20%20%20%20%20n%20%3D%20s.hash_size%3B%0A%20%20%20%20%20%20p%20%3D%20n%3B%0A%20%20%20%20%20%20do%20%7B%0A%20%20%20%20%20%20%20%20m%20%3D%20s.head%5B--p%5D%3B%0A%20%20%20%20%20%20%20%20s.head%5Bp%5D%20%3D%20(m%20%3E%3D%20_w_size%20%3F%20m%20-%20_w_size%20%3A%200)%3B%0A%20%20%20%20%20%20%7D%20while%20(--n)%3B%0A%0A%20%20%20%20%20%20n%20%3D%20_w_size%3B%0A%20%20%20%20%20%20p%20%3D%20n%3B%0A%20%20%20%20%20%20do%20%7B%0A%20%20%20%20%20%20%20%20m%20%3D%20s.prev%5B--p%5D%3B%0A%20%20%20%20%20%20%20%20s.prev%5Bp%5D%20%3D%20(m%20%3E%3D%20_w_size%20%3F%20m%20-%20_w_size%20%3A%200)%3B%0A%20%20%20%20%20%20%20%20%2F*%20If%20n%20is%20not%20on%20any%20hash%20chain%2C%20prev%5Bn%5D%20is%20garbage%20but%0A%20%20%20%20%20%20%20%20%20*%20its%20value%20will%20never%20be%20used.%0A%20%20%20%20%20%20%20%20%20*%2F%0A%20%20%20%20%20%20%7D%20while%20(--n)%3B%0A%0A%20%20%20%20%20%20more%20%2B%3D%20_w_size%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20(s.strm.avail_in%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20break%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F*%20If%20there%20was%20no%20sliding%3A%0A%20%20%20%20%20*%20%20%20%20strstart%20%3C%3D%20WSIZE%2BMAX_DIST-1%20%26%26%20lookahead%20%3C%3D%20MIN_LOOKAHEAD%20-%201%20%26%26%0A%20%20%20%20%20*%20%20%20%20more%20%3D%3D%20window_size%20-%20lookahead%20-%20strstart%0A%20%20%20%20%20*%20%3D%3E%20more%20%3E%3D%20window_size%20-%20(MIN_LOOKAHEAD-1%20%2B%20WSIZE%20%2B%20MAX_DIST-1)%0A%20%20%20%20%20*%20%3D%3E%20more%20%3E%3D%20window_size%20-%202*WSIZE%20%2B%202%0A%20%20%20%20%20*%20In%20the%20BIG_MEM%20or%20MMAP%20case%20(not%20yet%20supported)%2C%0A%20%20%20%20%20*%20%20%20window_size%20%3D%3D%20input_size%20%2B%20MIN_LOOKAHEAD%20%20%26%26%0A%20%20%20%20%20*%20%20%20strstart%20%2B%20s-%3Elookahead%20%3C%3D%20input_size%20%3D%3E%20more%20%3E%3D%20MIN_LOOKAHEAD.%0A%20%20%20%20%20*%20Otherwise%2C%20window_size%20%3D%3D%202*WSIZE%20so%20more%20%3E%3D%202.%0A%20%20%20%20%20*%20If%20there%20was%20sliding%2C%20more%20%3E%3D%20WSIZE.%20So%20in%20all%20cases%2C%20more%20%3E%3D%202.%0A%20%20%20%20%20*%2F%0A%20%20%20%20%2F%2FAssert(more%20%3E%3D%202%2C%20%22more%20%3C%202%22)%3B%0A%20%20%20%20n%20%3D%20read_buf(s.strm%2C%20s.window%2C%20s.strstart%20%2B%20s.lookahead%2C%20more)%3B%0A%20%20%20%20s.lookahead%20%2B%3D%20n%3B%0A%0A%20%20%20%20%2F*%20Initialize%20the%20hash%20value%20now%20that%20we%20have%20some%20input%3A%20*%2F%0A%20%20%20%20if%20(s.lookahead%20%2B%20s.insert%20%3E%3D%20MIN_MATCH)%20%7B%0A%20%20%20%20%20%20str%20%3D%20s.strstart%20-%20s.insert%3B%0A%20%20%20%20%20%20s.ins_h%20%3D%20s.window%5Bstr%5D%3B%0A%0A%20%20%20%20%20%20%2F*%20UPDATE_HASH(s%2C%20s-%3Eins_h%2C%20s-%3Ewindow%5Bstr%20%2B%201%5D)%3B%20*%2F%0A%20%20%20%20%20%20s.ins_h%20%3D%20((s.ins_h%20%3C%3C%20s.hash_shift)%20%5E%20s.window%5Bstr%20%2B%201%5D)%20%26%20s.hash_mask%3B%0A%2F%2F%23if%20MIN_MATCH%20!%3D%203%0A%2F%2F%20%20%20%20%20%20%20%20Call%20update_hash()%20MIN_MATCH-3%20more%20times%0A%2F%2F%23endif%0A%20%20%20%20%20%20while%20(s.insert)%20%7B%0A%20%20%20%20%20%20%20%20%2F*%20UPDATE_HASH(s%2C%20s-%3Eins_h%2C%20s-%3Ewindow%5Bstr%20%2B%20MIN_MATCH-1%5D)%3B%20*%2F%0A%20%20%20%20%20%20%20%20s.ins_h%20%3D%20((s.ins_h%20%3C%3C%20s.hash_shift)%20%5E%20s.window%5Bstr%20%2B%20MIN_MATCH%20-%201%5D)%20%26%20s.hash_mask%3B%0A%0A%20%20%20%20%20%20%20%20s.prev%5Bstr%20%26%20s.w_mask%5D%20%3D%20s.head%5Bs.ins_h%5D%3B%0A%20%20%20%20%20%20%20%20s.head%5Bs.ins_h%5D%20%3D%20str%3B%0A%20%20%20%20%20%20%20%20str%2B%2B%3B%0A%20%20%20%20%20%20%20%20s.insert--%3B%0A%20%20%20%20%20%20%20%20if%20(s.lookahead%20%2B%20s.insert%20%3C%20MIN_MATCH)%20%7B%0A%20%20%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20%2F*%20If%20the%20whole%20input%20has%20less%20than%20MIN_MATCH%20bytes%2C%20ins_h%20is%20garbage%2C%0A%20%20%20%20%20*%20but%20this%20is%20not%20important%20since%20only%20literal%20bytes%20will%20be%20emitted.%0A%20%20%20%20%20*%2F%0A%0A%20%20%7D%20while%20(s.lookahead%20%3C%20MIN_LOOKAHEAD%20%26%26%20s.strm.avail_in%20!%3D%3D%200)%3B%0A%0A%20%20%2F*%20If%20the%20WIN_INIT%20bytes%20after%20the%20end%20of%20the%20current%20data%20have%20never%20been%0A%20%20%20*%20written%2C%20then%20zero%20those%20bytes%20in%20order%20to%20avoid%20memory%20check%20reports%20of%0A%20%20%20*%20the%20use%20of%20uninitialized%20(or%20uninitialised%20as%20Julian%20writes)%20bytes%20by%0A%20%20%20*%20the%20longest%20match%20routines.%20%20Update%20the%20high%20water%20mark%20for%20the%20next%0A%20%20%20*%20time%20through%20here.%20%20WIN_INIT%20is%20set%20to%20MAX_MATCH%20since%20the%20longest%20match%0A%20%20%20*%20routines%20allow%20scanning%20to%20strstart%20%2B%20MAX_MATCH%2C%20ignoring%20lookahead.%0A%20%20%20*%2F%0A%2F%2F%20%20if%20(s.high_water%20%3C%20s.window_size)%20%7B%0A%2F%2F%20%20%20%20var%20curr%20%3D%20s.strstart%20%2B%20s.lookahead%3B%0A%2F%2F%20%20%20%20var%20init%20%3D%200%3B%0A%2F%2F%0A%2F%2F%20%20%20%20if%20(s.high_water%20%3C%20curr)%20%7B%0A%2F%2F%20%20%20%20%20%20%2F*%20Previous%20high%20water%20mark%20below%20current%20data%20--%20zero%20WIN_INIT%0A%2F%2F%20%20%20%20%20%20%20*%20bytes%20or%20up%20to%20end%20of%20window%2C%20whichever%20is%20less.%0A%2F%2F%20%20%20%20%20%20%20*%2F%0A%2F%2F%20%20%20%20%20%20init%20%3D%20s.window_size%20-%20curr%3B%0A%2F%2F%20%20%20%20%20%20if%20(init%20%3E%20WIN_INIT)%0A%2F%2F%20%20%20%20%20%20%20%20init%20%3D%20WIN_INIT%3B%0A%2F%2F%20%20%20%20%20%20zmemzero(s-%3Ewindow%20%2B%20curr%2C%20(unsigned)init)%3B%0A%2F%2F%20%20%20%20%20%20s-%3Ehigh_water%20%3D%20curr%20%2B%20init%3B%0A%2F%2F%20%20%20%20%7D%0A%2F%2F%20%20%20%20else%20if%20(s-%3Ehigh_water%20%3C%20(ulg)curr%20%2B%20WIN_INIT)%20%7B%0A%2F%2F%20%20%20%20%20%20%2F*%20High%20water%20mark%20at%20or%20above%20current%20data%2C%20but%20below%20current%20data%0A%2F%2F%20%20%20%20%20%20%20*%20plus%20WIN_INIT%20--%20zero%20out%20to%20current%20data%20plus%20WIN_INIT%2C%20or%20up%0A%2F%2F%20%20%20%20%20%20%20*%20to%20end%20of%20window%2C%20whichever%20is%20less.%0A%2F%2F%20%20%20%20%20%20%20*%2F%0A%2F%2F%20%20%20%20%20%20init%20%3D%20(ulg)curr%20%2B%20WIN_INIT%20-%20s-%3Ehigh_water%3B%0A%2F%2F%20%20%20%20%20%20if%20(init%20%3E%20s-%3Ewindow_size%20-%20s-%3Ehigh_water)%0A%2F%2F%20%20%20%20%20%20%20%20init%20%3D%20s-%3Ewindow_size%20-%20s-%3Ehigh_water%3B%0A%2F%2F%20%20%20%20%20%20zmemzero(s-%3Ewindow%20%2B%20s-%3Ehigh_water%2C%20(unsigned)init)%3B%0A%2F%2F%20%20%20%20%20%20s-%3Ehigh_water%20%2B%3D%20init%3B%0A%2F%2F%20%20%20%20%7D%0A%2F%2F%20%20%7D%0A%2F%2F%0A%2F%2F%20%20Assert((ulg)s-%3Estrstart%20%3C%3D%20s-%3Ewindow_size%20-%20MIN_LOOKAHEAD%2C%0A%2F%2F%20%20%20%20%22not%20enough%20room%20for%20search%22)%3B%0A%7D%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Copy%20without%20compression%20as%20much%20as%20possible%20from%20the%20input%20stream%2C%20return%0A%20*%20the%20current%20block%20state.%0A%20*%20This%20function%20does%20not%20insert%20new%20strings%20in%20the%20dictionary%20since%0A%20*%20uncompressible%20data%20is%20probably%20not%20useful.%20This%20function%20is%20used%0A%20*%20only%20for%20the%20level%3D0%20compression%20option.%0A%20*%20NOTE%3A%20this%20function%20should%20be%20optimized%20to%20avoid%20extra%20copying%20from%0A%20*%20window%20to%20pending_buf.%0A%20*%2F%0Afunction%20deflate_stored(s%2C%20flush)%20%7B%0A%20%20%2F*%20Stored%20blocks%20are%20limited%20to%200xffff%20bytes%2C%20pending_buf%20is%20limited%0A%20%20%20*%20to%20pending_buf_size%2C%20and%20each%20stored%20block%20has%20a%205%20byte%20header%3A%0A%20%20%20*%2F%0A%20%20var%20max_block_size%20%3D%200xffff%3B%0A%0A%20%20if%20(max_block_size%20%3E%20s.pending_buf_size%20-%205)%20%7B%0A%20%20%20%20max_block_size%20%3D%20s.pending_buf_size%20-%205%3B%0A%20%20%7D%0A%0A%20%20%2F*%20Copy%20as%20much%20as%20possible%20from%20input%20to%20output%3A%20*%2F%0A%20%20for%20(%3B%3B)%20%7B%0A%20%20%20%20%2F*%20Fill%20the%20window%20as%20much%20as%20possible%3A%20*%2F%0A%20%20%20%20if%20(s.lookahead%20%3C%3D%201)%20%7B%0A%0A%20%20%20%20%20%20%2F%2FAssert(s-%3Estrstart%20%3C%20s-%3Ew_size%2BMAX_DIST(s)%20%7C%7C%0A%20%20%20%20%20%20%2F%2F%20%20s-%3Eblock_start%20%3E%3D%20(long)s-%3Ew_size%2C%20%22slide%20too%20late%22)%3B%0A%2F%2F%20%20%20%20%20%20if%20(!(s.strstart%20%3C%20s.w_size%20%2B%20(s.w_size%20-%20MIN_LOOKAHEAD)%20%7C%7C%0A%2F%2F%20%20%20%20%20%20%20%20s.block_start%20%3E%3D%20s.w_size))%20%7B%0A%2F%2F%20%20%20%20%20%20%20%20throw%20%20new%20Error(%22slide%20too%20late%22)%3B%0A%2F%2F%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20fill_window(s)%3B%0A%20%20%20%20%20%20if%20(s.lookahead%20%3D%3D%3D%200%20%26%26%20flush%20%3D%3D%3D%20Z_NO_FLUSH)%20%7B%0A%20%20%20%20%20%20%20%20return%20BS_NEED_MORE%3B%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20if%20(s.lookahead%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F*%20flush%20the%20current%20block%20*%2F%0A%20%20%20%20%7D%0A%20%20%20%20%2F%2FAssert(s-%3Eblock_start%20%3E%3D%200L%2C%20%22block%20gone%22)%3B%0A%2F%2F%20%20%20%20if%20(s.block_start%20%3C%200)%20throw%20new%20Error(%22block%20gone%22)%3B%0A%0A%20%20%20%20s.strstart%20%2B%3D%20s.lookahead%3B%0A%20%20%20%20s.lookahead%20%3D%200%3B%0A%0A%20%20%20%20%2F*%20Emit%20a%20stored%20block%20if%20pending_buf%20will%20be%20full%3A%20*%2F%0A%20%20%20%20var%20max_start%20%3D%20s.block_start%20%2B%20max_block_size%3B%0A%0A%20%20%20%20if%20(s.strstart%20%3D%3D%3D%200%20%7C%7C%20s.strstart%20%3E%3D%20max_start)%20%7B%0A%20%20%20%20%20%20%2F*%20strstart%20%3D%3D%200%20is%20possible%20when%20wraparound%20on%2016-bit%20machine%20*%2F%0A%20%20%20%20%20%20s.lookahead%20%3D%20s.strstart%20-%20max_start%3B%0A%20%20%20%20%20%20s.strstart%20%3D%20max_start%3B%0A%20%20%20%20%20%20%2F***%20FLUSH_BLOCK(s%2C%200)%3B%20***%2F%0A%20%20%20%20%20%20flush_block_only(s%2C%20false)%3B%0A%20%20%20%20%20%20if%20(s.strm.avail_out%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20return%20BS_NEED_MORE%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F***%2F%0A%0A%0A%20%20%20%20%7D%0A%20%20%20%20%2F*%20Flush%20if%20we%20may%20have%20to%20slide%2C%20otherwise%20block_start%20may%20become%0A%20%20%20%20%20*%20negative%20and%20the%20data%20will%20be%20gone%3A%0A%20%20%20%20%20*%2F%0A%20%20%20%20if%20(s.strstart%20-%20s.block_start%20%3E%3D%20(s.w_size%20-%20MIN_LOOKAHEAD))%20%7B%0A%20%20%20%20%20%20%2F***%20FLUSH_BLOCK(s%2C%200)%3B%20***%2F%0A%20%20%20%20%20%20flush_block_only(s%2C%20false)%3B%0A%20%20%20%20%20%20if%20(s.strm.avail_out%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20return%20BS_NEED_MORE%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F***%2F%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20s.insert%20%3D%200%3B%0A%0A%20%20if%20(flush%20%3D%3D%3D%20Z_FINISH)%20%7B%0A%20%20%20%20%2F***%20FLUSH_BLOCK(s%2C%201)%3B%20***%2F%0A%20%20%20%20flush_block_only(s%2C%20true)%3B%0A%20%20%20%20if%20(s.strm.avail_out%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20return%20BS_FINISH_STARTED%3B%0A%20%20%20%20%7D%0A%20%20%20%20%2F***%2F%0A%20%20%20%20return%20BS_FINISH_DONE%3B%0A%20%20%7D%0A%0A%20%20if%20(s.strstart%20%3E%20s.block_start)%20%7B%0A%20%20%20%20%2F***%20FLUSH_BLOCK(s%2C%200)%3B%20***%2F%0A%20%20%20%20flush_block_only(s%2C%20false)%3B%0A%20%20%20%20if%20(s.strm.avail_out%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20return%20BS_NEED_MORE%3B%0A%20%20%20%20%7D%0A%20%20%20%20%2F***%2F%0A%20%20%7D%0A%0A%20%20return%20BS_NEED_MORE%3B%0A%7D%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Compress%20as%20much%20as%20possible%20from%20the%20input%20stream%2C%20return%20the%20current%0A%20*%20block%20state.%0A%20*%20This%20function%20does%20not%20perform%20lazy%20evaluation%20of%20matches%20and%20inserts%0A%20*%20new%20strings%20in%20the%20dictionary%20only%20for%20unmatched%20strings%20or%20for%20short%0A%20*%20matches.%20It%20is%20used%20only%20for%20the%20fast%20compression%20options.%0A%20*%2F%0Afunction%20deflate_fast(s%2C%20flush)%20%7B%0A%20%20var%20hash_head%3B%20%20%20%20%20%20%20%20%2F*%20head%20of%20the%20hash%20chain%20*%2F%0A%20%20var%20bflush%3B%20%20%20%20%20%20%20%20%20%20%20%2F*%20set%20if%20current%20block%20must%20be%20flushed%20*%2F%0A%0A%20%20for%20(%3B%3B)%20%7B%0A%20%20%20%20%2F*%20Make%20sure%20that%20we%20always%20have%20enough%20lookahead%2C%20except%0A%20%20%20%20%20*%20at%20the%20end%20of%20the%20input%20file.%20We%20need%20MAX_MATCH%20bytes%0A%20%20%20%20%20*%20for%20the%20next%20match%2C%20plus%20MIN_MATCH%20bytes%20to%20insert%20the%0A%20%20%20%20%20*%20string%20following%20the%20next%20match.%0A%20%20%20%20%20*%2F%0A%20%20%20%20if%20(s.lookahead%20%3C%20MIN_LOOKAHEAD)%20%7B%0A%20%20%20%20%20%20fill_window(s)%3B%0A%20%20%20%20%20%20if%20(s.lookahead%20%3C%20MIN_LOOKAHEAD%20%26%26%20flush%20%3D%3D%3D%20Z_NO_FLUSH)%20%7B%0A%20%20%20%20%20%20%20%20return%20BS_NEED_MORE%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(s.lookahead%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20break%3B%20%2F*%20flush%20the%20current%20block%20*%2F%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F*%20Insert%20the%20string%20window%5Bstrstart%20..%20strstart%2B2%5D%20in%20the%0A%20%20%20%20%20*%20dictionary%2C%20and%20set%20hash_head%20to%20the%20head%20of%20the%20hash%20chain%3A%0A%20%20%20%20%20*%2F%0A%20%20%20%20hash_head%20%3D%200%2F*NIL*%2F%3B%0A%20%20%20%20if%20(s.lookahead%20%3E%3D%20MIN_MATCH)%20%7B%0A%20%20%20%20%20%20%2F***%20INSERT_STRING(s%2C%20s.strstart%2C%20hash_head)%3B%20***%2F%0A%20%20%20%20%20%20s.ins_h%20%3D%20((s.ins_h%20%3C%3C%20s.hash_shift)%20%5E%20s.window%5Bs.strstart%20%2B%20MIN_MATCH%20-%201%5D)%20%26%20s.hash_mask%3B%0A%20%20%20%20%20%20hash_head%20%3D%20s.prev%5Bs.strstart%20%26%20s.w_mask%5D%20%3D%20s.head%5Bs.ins_h%5D%3B%0A%20%20%20%20%20%20s.head%5Bs.ins_h%5D%20%3D%20s.strstart%3B%0A%20%20%20%20%20%20%2F***%2F%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F*%20Find%20the%20longest%20match%2C%20discarding%20those%20%3C%3D%20prev_length.%0A%20%20%20%20%20*%20At%20this%20point%20we%20have%20always%20match_length%20%3C%20MIN_MATCH%0A%20%20%20%20%20*%2F%0A%20%20%20%20if%20(hash_head%20!%3D%3D%200%2F*NIL*%2F%20%26%26%20((s.strstart%20-%20hash_head)%20%3C%3D%20(s.w_size%20-%20MIN_LOOKAHEAD)))%20%7B%0A%20%20%20%20%20%20%2F*%20To%20simplify%20the%20code%2C%20we%20prevent%20matches%20with%20the%20string%0A%20%20%20%20%20%20%20*%20of%20window%20index%200%20(in%20particular%20we%20have%20to%20avoid%20a%20match%0A%20%20%20%20%20%20%20*%20of%20the%20string%20with%20itself%20at%20the%20start%20of%20the%20input%20file).%0A%20%20%20%20%20%20%20*%2F%0A%20%20%20%20%20%20s.match_length%20%3D%20longest_match(s%2C%20hash_head)%3B%0A%20%20%20%20%20%20%2F*%20longest_match()%20sets%20match_start%20*%2F%0A%20%20%20%20%7D%0A%20%20%20%20if%20(s.match_length%20%3E%3D%20MIN_MATCH)%20%7B%0A%20%20%20%20%20%20%2F%2F%20check_match(s%2C%20s.strstart%2C%20s.match_start%2C%20s.match_length)%3B%20%2F%2F%20for%20debug%20only%0A%0A%20%20%20%20%20%20%2F***%20_tr_tally_dist(s%2C%20s.strstart%20-%20s.match_start%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20s.match_length%20-%20MIN_MATCH%2C%20bflush)%3B%20***%2F%0A%20%20%20%20%20%20bflush%20%3D%20trees._tr_tally(s%2C%20s.strstart%20-%20s.match_start%2C%20s.match_length%20-%20MIN_MATCH)%3B%0A%0A%20%20%20%20%20%20s.lookahead%20-%3D%20s.match_length%3B%0A%0A%20%20%20%20%20%20%2F*%20Insert%20new%20strings%20in%20the%20hash%20table%20only%20if%20the%20match%20length%0A%20%20%20%20%20%20%20*%20is%20not%20too%20large.%20This%20saves%20time%20but%20degrades%20compression.%0A%20%20%20%20%20%20%20*%2F%0A%20%20%20%20%20%20if%20(s.match_length%20%3C%3D%20s.max_lazy_match%2F*max_insert_length*%2F%20%26%26%20s.lookahead%20%3E%3D%20MIN_MATCH)%20%7B%0A%20%20%20%20%20%20%20%20s.match_length--%3B%20%2F*%20string%20at%20strstart%20already%20in%20table%20*%2F%0A%20%20%20%20%20%20%20%20do%20%7B%0A%20%20%20%20%20%20%20%20%20%20s.strstart%2B%2B%3B%0A%20%20%20%20%20%20%20%20%20%20%2F***%20INSERT_STRING(s%2C%20s.strstart%2C%20hash_head)%3B%20***%2F%0A%20%20%20%20%20%20%20%20%20%20s.ins_h%20%3D%20((s.ins_h%20%3C%3C%20s.hash_shift)%20%5E%20s.window%5Bs.strstart%20%2B%20MIN_MATCH%20-%201%5D)%20%26%20s.hash_mask%3B%0A%20%20%20%20%20%20%20%20%20%20hash_head%20%3D%20s.prev%5Bs.strstart%20%26%20s.w_mask%5D%20%3D%20s.head%5Bs.ins_h%5D%3B%0A%20%20%20%20%20%20%20%20%20%20s.head%5Bs.ins_h%5D%20%3D%20s.strstart%3B%0A%20%20%20%20%20%20%20%20%20%20%2F***%2F%0A%20%20%20%20%20%20%20%20%20%20%2F*%20strstart%20never%20exceeds%20WSIZE-MAX_MATCH%2C%20so%20there%20are%0A%20%20%20%20%20%20%20%20%20%20%20*%20always%20MIN_MATCH%20bytes%20ahead.%0A%20%20%20%20%20%20%20%20%20%20%20*%2F%0A%20%20%20%20%20%20%20%20%7D%20while%20(--s.match_length%20!%3D%3D%200)%3B%0A%20%20%20%20%20%20%20%20s.strstart%2B%2B%3B%0A%20%20%20%20%20%20%7D%20else%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20s.strstart%20%2B%3D%20s.match_length%3B%0A%20%20%20%20%20%20%20%20s.match_length%20%3D%200%3B%0A%20%20%20%20%20%20%20%20s.ins_h%20%3D%20s.window%5Bs.strstart%5D%3B%0A%20%20%20%20%20%20%20%20%2F*%20UPDATE_HASH(s%2C%20s.ins_h%2C%20s.window%5Bs.strstart%2B1%5D)%3B%20*%2F%0A%20%20%20%20%20%20%20%20s.ins_h%20%3D%20((s.ins_h%20%3C%3C%20s.hash_shift)%20%5E%20s.window%5Bs.strstart%20%2B%201%5D)%20%26%20s.hash_mask%3B%0A%0A%2F%2F%23if%20MIN_MATCH%20!%3D%203%0A%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Call%20UPDATE_HASH()%20MIN_MATCH-3%20more%20times%0A%2F%2F%23endif%0A%20%20%20%20%20%20%20%20%2F*%20If%20lookahead%20%3C%20MIN_MATCH%2C%20ins_h%20is%20garbage%2C%20but%20it%20does%20not%0A%20%20%20%20%20%20%20%20%20*%20matter%20since%20it%20will%20be%20recomputed%20at%20next%20deflate%20call.%0A%20%20%20%20%20%20%20%20%20*%2F%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%2F*%20No%20match%2C%20output%20a%20literal%20byte%20*%2F%0A%20%20%20%20%20%20%2F%2FTracevv((stderr%2C%22%25c%22%2C%20s.window%5Bs.strstart%5D))%3B%0A%20%20%20%20%20%20%2F***%20_tr_tally_lit(s%2C%20s.window%5Bs.strstart%5D%2C%20bflush)%3B%20***%2F%0A%20%20%20%20%20%20bflush%20%3D%20trees._tr_tally(s%2C%200%2C%20s.window%5Bs.strstart%5D)%3B%0A%0A%20%20%20%20%20%20s.lookahead--%3B%0A%20%20%20%20%20%20s.strstart%2B%2B%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20(bflush)%20%7B%0A%20%20%20%20%20%20%2F***%20FLUSH_BLOCK(s%2C%200)%3B%20***%2F%0A%20%20%20%20%20%20flush_block_only(s%2C%20false)%3B%0A%20%20%20%20%20%20if%20(s.strm.avail_out%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20return%20BS_NEED_MORE%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F***%2F%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20s.insert%20%3D%20((s.strstart%20%3C%20(MIN_MATCH%20-%201))%20%3F%20s.strstart%20%3A%20MIN_MATCH%20-%201)%3B%0A%20%20if%20(flush%20%3D%3D%3D%20Z_FINISH)%20%7B%0A%20%20%20%20%2F***%20FLUSH_BLOCK(s%2C%201)%3B%20***%2F%0A%20%20%20%20flush_block_only(s%2C%20true)%3B%0A%20%20%20%20if%20(s.strm.avail_out%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20return%20BS_FINISH_STARTED%3B%0A%20%20%20%20%7D%0A%20%20%20%20%2F***%2F%0A%20%20%20%20return%20BS_FINISH_DONE%3B%0A%20%20%7D%0A%20%20if%20(s.last_lit)%20%7B%0A%20%20%20%20%2F***%20FLUSH_BLOCK(s%2C%200)%3B%20***%2F%0A%20%20%20%20flush_block_only(s%2C%20false)%3B%0A%20%20%20%20if%20(s.strm.avail_out%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20return%20BS_NEED_MORE%3B%0A%20%20%20%20%7D%0A%20%20%20%20%2F***%2F%0A%20%20%7D%0A%20%20return%20BS_BLOCK_DONE%3B%0A%7D%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Same%20as%20above%2C%20but%20achieves%20better%20compression.%20We%20use%20a%20lazy%0A%20*%20evaluation%20for%20matches%3A%20a%20match%20is%20finally%20adopted%20only%20if%20there%20is%0A%20*%20no%20better%20match%20at%20the%20next%20window%20position.%0A%20*%2F%0Afunction%20deflate_slow(s%2C%20flush)%20%7B%0A%20%20var%20hash_head%3B%20%20%20%20%20%20%20%20%20%20%2F*%20head%20of%20hash%20chain%20*%2F%0A%20%20var%20bflush%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20set%20if%20current%20block%20must%20be%20flushed%20*%2F%0A%0A%20%20var%20max_insert%3B%0A%0A%20%20%2F*%20Process%20the%20input%20block.%20*%2F%0A%20%20for%20(%3B%3B)%20%7B%0A%20%20%20%20%2F*%20Make%20sure%20that%20we%20always%20have%20enough%20lookahead%2C%20except%0A%20%20%20%20%20*%20at%20the%20end%20of%20the%20input%20file.%20We%20need%20MAX_MATCH%20bytes%0A%20%20%20%20%20*%20for%20the%20next%20match%2C%20plus%20MIN_MATCH%20bytes%20to%20insert%20the%0A%20%20%20%20%20*%20string%20following%20the%20next%20match.%0A%20%20%20%20%20*%2F%0A%20%20%20%20if%20(s.lookahead%20%3C%20MIN_LOOKAHEAD)%20%7B%0A%20%20%20%20%20%20fill_window(s)%3B%0A%20%20%20%20%20%20if%20(s.lookahead%20%3C%20MIN_LOOKAHEAD%20%26%26%20flush%20%3D%3D%3D%20Z_NO_FLUSH)%20%7B%0A%20%20%20%20%20%20%20%20return%20BS_NEED_MORE%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(s.lookahead%20%3D%3D%3D%200)%20%7B%20break%3B%20%7D%20%2F*%20flush%20the%20current%20block%20*%2F%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F*%20Insert%20the%20string%20window%5Bstrstart%20..%20strstart%2B2%5D%20in%20the%0A%20%20%20%20%20*%20dictionary%2C%20and%20set%20hash_head%20to%20the%20head%20of%20the%20hash%20chain%3A%0A%20%20%20%20%20*%2F%0A%20%20%20%20hash_head%20%3D%200%2F*NIL*%2F%3B%0A%20%20%20%20if%20(s.lookahead%20%3E%3D%20MIN_MATCH)%20%7B%0A%20%20%20%20%20%20%2F***%20INSERT_STRING(s%2C%20s.strstart%2C%20hash_head)%3B%20***%2F%0A%20%20%20%20%20%20s.ins_h%20%3D%20((s.ins_h%20%3C%3C%20s.hash_shift)%20%5E%20s.window%5Bs.strstart%20%2B%20MIN_MATCH%20-%201%5D)%20%26%20s.hash_mask%3B%0A%20%20%20%20%20%20hash_head%20%3D%20s.prev%5Bs.strstart%20%26%20s.w_mask%5D%20%3D%20s.head%5Bs.ins_h%5D%3B%0A%20%20%20%20%20%20s.head%5Bs.ins_h%5D%20%3D%20s.strstart%3B%0A%20%20%20%20%20%20%2F***%2F%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F*%20Find%20the%20longest%20match%2C%20discarding%20those%20%3C%3D%20prev_length.%0A%20%20%20%20%20*%2F%0A%20%20%20%20s.prev_length%20%3D%20s.match_length%3B%0A%20%20%20%20s.prev_match%20%3D%20s.match_start%3B%0A%20%20%20%20s.match_length%20%3D%20MIN_MATCH%20-%201%3B%0A%0A%20%20%20%20if%20(hash_head%20!%3D%3D%200%2F*NIL*%2F%20%26%26%20s.prev_length%20%3C%20s.max_lazy_match%20%26%26%0A%20%20%20%20%20%20%20%20s.strstart%20-%20hash_head%20%3C%3D%20(s.w_size%20-%20MIN_LOOKAHEAD)%2F*MAX_DIST(s)*%2F)%20%7B%0A%20%20%20%20%20%20%2F*%20To%20simplify%20the%20code%2C%20we%20prevent%20matches%20with%20the%20string%0A%20%20%20%20%20%20%20*%20of%20window%20index%200%20(in%20particular%20we%20have%20to%20avoid%20a%20match%0A%20%20%20%20%20%20%20*%20of%20the%20string%20with%20itself%20at%20the%20start%20of%20the%20input%20file).%0A%20%20%20%20%20%20%20*%2F%0A%20%20%20%20%20%20s.match_length%20%3D%20longest_match(s%2C%20hash_head)%3B%0A%20%20%20%20%20%20%2F*%20longest_match()%20sets%20match_start%20*%2F%0A%0A%20%20%20%20%20%20if%20(s.match_length%20%3C%3D%205%20%26%26%0A%20%20%20%20%20%20%20%20%20(s.strategy%20%3D%3D%3D%20Z_FILTERED%20%7C%7C%20(s.match_length%20%3D%3D%3D%20MIN_MATCH%20%26%26%20s.strstart%20-%20s.match_start%20%3E%204096%2F*TOO_FAR*%2F)))%20%7B%0A%0A%20%20%20%20%20%20%20%20%2F*%20If%20prev_match%20is%20also%20MIN_MATCH%2C%20match_start%20is%20garbage%0A%20%20%20%20%20%20%20%20%20*%20but%20we%20will%20ignore%20the%20current%20match%20anyway.%0A%20%20%20%20%20%20%20%20%20*%2F%0A%20%20%20%20%20%20%20%20s.match_length%20%3D%20MIN_MATCH%20-%201%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20%2F*%20If%20there%20was%20a%20match%20at%20the%20previous%20step%20and%20the%20current%0A%20%20%20%20%20*%20match%20is%20not%20better%2C%20output%20the%20previous%20match%3A%0A%20%20%20%20%20*%2F%0A%20%20%20%20if%20(s.prev_length%20%3E%3D%20MIN_MATCH%20%26%26%20s.match_length%20%3C%3D%20s.prev_length)%20%7B%0A%20%20%20%20%20%20max_insert%20%3D%20s.strstart%20%2B%20s.lookahead%20-%20MIN_MATCH%3B%0A%20%20%20%20%20%20%2F*%20Do%20not%20insert%20strings%20in%20hash%20table%20beyond%20this.%20*%2F%0A%0A%20%20%20%20%20%20%2F%2Fcheck_match(s%2C%20s.strstart-1%2C%20s.prev_match%2C%20s.prev_length)%3B%0A%0A%20%20%20%20%20%20%2F***_tr_tally_dist(s%2C%20s.strstart%20-%201%20-%20s.prev_match%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20s.prev_length%20-%20MIN_MATCH%2C%20bflush)%3B***%2F%0A%20%20%20%20%20%20bflush%20%3D%20trees._tr_tally(s%2C%20s.strstart%20-%201%20-%20s.prev_match%2C%20s.prev_length%20-%20MIN_MATCH)%3B%0A%20%20%20%20%20%20%2F*%20Insert%20in%20hash%20table%20all%20strings%20up%20to%20the%20end%20of%20the%20match.%0A%20%20%20%20%20%20%20*%20strstart-1%20and%20strstart%20are%20already%20inserted.%20If%20there%20is%20not%0A%20%20%20%20%20%20%20*%20enough%20lookahead%2C%20the%20last%20two%20strings%20are%20not%20inserted%20in%0A%20%20%20%20%20%20%20*%20the%20hash%20table.%0A%20%20%20%20%20%20%20*%2F%0A%20%20%20%20%20%20s.lookahead%20-%3D%20s.prev_length%20-%201%3B%0A%20%20%20%20%20%20s.prev_length%20-%3D%202%3B%0A%20%20%20%20%20%20do%20%7B%0A%20%20%20%20%20%20%20%20if%20(%2B%2Bs.strstart%20%3C%3D%20max_insert)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%2F***%20INSERT_STRING(s%2C%20s.strstart%2C%20hash_head)%3B%20***%2F%0A%20%20%20%20%20%20%20%20%20%20s.ins_h%20%3D%20((s.ins_h%20%3C%3C%20s.hash_shift)%20%5E%20s.window%5Bs.strstart%20%2B%20MIN_MATCH%20-%201%5D)%20%26%20s.hash_mask%3B%0A%20%20%20%20%20%20%20%20%20%20hash_head%20%3D%20s.prev%5Bs.strstart%20%26%20s.w_mask%5D%20%3D%20s.head%5Bs.ins_h%5D%3B%0A%20%20%20%20%20%20%20%20%20%20s.head%5Bs.ins_h%5D%20%3D%20s.strstart%3B%0A%20%20%20%20%20%20%20%20%20%20%2F***%2F%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%20while%20(--s.prev_length%20!%3D%3D%200)%3B%0A%20%20%20%20%20%20s.match_available%20%3D%200%3B%0A%20%20%20%20%20%20s.match_length%20%3D%20MIN_MATCH%20-%201%3B%0A%20%20%20%20%20%20s.strstart%2B%2B%3B%0A%0A%20%20%20%20%20%20if%20(bflush)%20%7B%0A%20%20%20%20%20%20%20%20%2F***%20FLUSH_BLOCK(s%2C%200)%3B%20***%2F%0A%20%20%20%20%20%20%20%20flush_block_only(s%2C%20false)%3B%0A%20%20%20%20%20%20%20%20if%20(s.strm.avail_out%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20%20%20return%20BS_NEED_MORE%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%2F***%2F%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%7D%20else%20if%20(s.match_available)%20%7B%0A%20%20%20%20%20%20%2F*%20If%20there%20was%20no%20match%20at%20the%20previous%20position%2C%20output%20a%0A%20%20%20%20%20%20%20*%20single%20literal.%20If%20there%20was%20a%20match%20but%20the%20current%20match%0A%20%20%20%20%20%20%20*%20is%20longer%2C%20truncate%20the%20previous%20match%20to%20a%20single%20literal.%0A%20%20%20%20%20%20%20*%2F%0A%20%20%20%20%20%20%2F%2FTracevv((stderr%2C%22%25c%22%2C%20s-%3Ewindow%5Bs-%3Estrstart-1%5D))%3B%0A%20%20%20%20%20%20%2F***%20_tr_tally_lit(s%2C%20s.window%5Bs.strstart-1%5D%2C%20bflush)%3B%20***%2F%0A%20%20%20%20%20%20bflush%20%3D%20trees._tr_tally(s%2C%200%2C%20s.window%5Bs.strstart%20-%201%5D)%3B%0A%0A%20%20%20%20%20%20if%20(bflush)%20%7B%0A%20%20%20%20%20%20%20%20%2F***%20FLUSH_BLOCK_ONLY(s%2C%200)%20***%2F%0A%20%20%20%20%20%20%20%20flush_block_only(s%2C%20false)%3B%0A%20%20%20%20%20%20%20%20%2F***%2F%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20s.strstart%2B%2B%3B%0A%20%20%20%20%20%20s.lookahead--%3B%0A%20%20%20%20%20%20if%20(s.strm.avail_out%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20return%20BS_NEED_MORE%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%2F*%20There%20is%20no%20previous%20match%20to%20compare%20with%2C%20wait%20for%0A%20%20%20%20%20%20%20*%20the%20next%20step%20to%20decide.%0A%20%20%20%20%20%20%20*%2F%0A%20%20%20%20%20%20s.match_available%20%3D%201%3B%0A%20%20%20%20%20%20s.strstart%2B%2B%3B%0A%20%20%20%20%20%20s.lookahead--%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20%2F%2FAssert%20(flush%20!%3D%20Z_NO_FLUSH%2C%20%22no%20flush%3F%22)%3B%0A%20%20if%20(s.match_available)%20%7B%0A%20%20%20%20%2F%2FTracevv((stderr%2C%22%25c%22%2C%20s-%3Ewindow%5Bs-%3Estrstart-1%5D))%3B%0A%20%20%20%20%2F***%20_tr_tally_lit(s%2C%20s.window%5Bs.strstart-1%5D%2C%20bflush)%3B%20***%2F%0A%20%20%20%20bflush%20%3D%20trees._tr_tally(s%2C%200%2C%20s.window%5Bs.strstart%20-%201%5D)%3B%0A%0A%20%20%20%20s.match_available%20%3D%200%3B%0A%20%20%7D%0A%20%20s.insert%20%3D%20s.strstart%20%3C%20MIN_MATCH%20-%201%20%3F%20s.strstart%20%3A%20MIN_MATCH%20-%201%3B%0A%20%20if%20(flush%20%3D%3D%3D%20Z_FINISH)%20%7B%0A%20%20%20%20%2F***%20FLUSH_BLOCK(s%2C%201)%3B%20***%2F%0A%20%20%20%20flush_block_only(s%2C%20true)%3B%0A%20%20%20%20if%20(s.strm.avail_out%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20return%20BS_FINISH_STARTED%3B%0A%20%20%20%20%7D%0A%20%20%20%20%2F***%2F%0A%20%20%20%20return%20BS_FINISH_DONE%3B%0A%20%20%7D%0A%20%20if%20(s.last_lit)%20%7B%0A%20%20%20%20%2F***%20FLUSH_BLOCK(s%2C%200)%3B%20***%2F%0A%20%20%20%20flush_block_only(s%2C%20false)%3B%0A%20%20%20%20if%20(s.strm.avail_out%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20return%20BS_NEED_MORE%3B%0A%20%20%20%20%7D%0A%20%20%20%20%2F***%2F%0A%20%20%7D%0A%0A%20%20return%20BS_BLOCK_DONE%3B%0A%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20For%20Z_RLE%2C%20simply%20look%20for%20runs%20of%20bytes%2C%20generate%20matches%20only%20of%20distance%0A%20*%20one.%20%20Do%20not%20maintain%20a%20hash%20table.%20%20(It%20will%20be%20regenerated%20if%20this%20run%20of%0A%20*%20deflate%20switches%20away%20from%20Z_RLE.)%0A%20*%2F%0Afunction%20deflate_rle(s%2C%20flush)%20%7B%0A%20%20var%20bflush%3B%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20set%20if%20current%20block%20must%20be%20flushed%20*%2F%0A%20%20var%20prev%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20byte%20at%20distance%20one%20to%20match%20*%2F%0A%20%20var%20scan%2C%20strend%3B%20%20%20%20%20%20%2F*%20scan%20goes%20up%20to%20strend%20for%20length%20of%20run%20*%2F%0A%0A%20%20var%20_win%20%3D%20s.window%3B%0A%0A%20%20for%20(%3B%3B)%20%7B%0A%20%20%20%20%2F*%20Make%20sure%20that%20we%20always%20have%20enough%20lookahead%2C%20except%0A%20%20%20%20%20*%20at%20the%20end%20of%20the%20input%20file.%20We%20need%20MAX_MATCH%20bytes%0A%20%20%20%20%20*%20for%20the%20longest%20run%2C%20plus%20one%20for%20the%20unrolled%20loop.%0A%20%20%20%20%20*%2F%0A%20%20%20%20if%20(s.lookahead%20%3C%3D%20MAX_MATCH)%20%7B%0A%20%20%20%20%20%20fill_window(s)%3B%0A%20%20%20%20%20%20if%20(s.lookahead%20%3C%3D%20MAX_MATCH%20%26%26%20flush%20%3D%3D%3D%20Z_NO_FLUSH)%20%7B%0A%20%20%20%20%20%20%20%20return%20BS_NEED_MORE%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(s.lookahead%20%3D%3D%3D%200)%20%7B%20break%3B%20%7D%20%2F*%20flush%20the%20current%20block%20*%2F%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F*%20See%20how%20many%20times%20the%20previous%20byte%20repeats%20*%2F%0A%20%20%20%20s.match_length%20%3D%200%3B%0A%20%20%20%20if%20(s.lookahead%20%3E%3D%20MIN_MATCH%20%26%26%20s.strstart%20%3E%200)%20%7B%0A%20%20%20%20%20%20scan%20%3D%20s.strstart%20-%201%3B%0A%20%20%20%20%20%20prev%20%3D%20_win%5Bscan%5D%3B%0A%20%20%20%20%20%20if%20(prev%20%3D%3D%3D%20_win%5B%2B%2Bscan%5D%20%26%26%20prev%20%3D%3D%3D%20_win%5B%2B%2Bscan%5D%20%26%26%20prev%20%3D%3D%3D%20_win%5B%2B%2Bscan%5D)%20%7B%0A%20%20%20%20%20%20%20%20strend%20%3D%20s.strstart%20%2B%20MAX_MATCH%3B%0A%20%20%20%20%20%20%20%20do%20%7B%0A%20%20%20%20%20%20%20%20%20%20%2F*jshint%20noempty%3Afalse*%2F%0A%20%20%20%20%20%20%20%20%7D%20while%20(prev%20%3D%3D%3D%20_win%5B%2B%2Bscan%5D%20%26%26%20prev%20%3D%3D%3D%20_win%5B%2B%2Bscan%5D%20%26%26%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20prev%20%3D%3D%3D%20_win%5B%2B%2Bscan%5D%20%26%26%20prev%20%3D%3D%3D%20_win%5B%2B%2Bscan%5D%20%26%26%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20prev%20%3D%3D%3D%20_win%5B%2B%2Bscan%5D%20%26%26%20prev%20%3D%3D%3D%20_win%5B%2B%2Bscan%5D%20%26%26%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20prev%20%3D%3D%3D%20_win%5B%2B%2Bscan%5D%20%26%26%20prev%20%3D%3D%3D%20_win%5B%2B%2Bscan%5D%20%26%26%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20scan%20%3C%20strend)%3B%0A%20%20%20%20%20%20%20%20s.match_length%20%3D%20MAX_MATCH%20-%20(strend%20-%20scan)%3B%0A%20%20%20%20%20%20%20%20if%20(s.match_length%20%3E%20s.lookahead)%20%7B%0A%20%20%20%20%20%20%20%20%20%20s.match_length%20%3D%20s.lookahead%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2FAssert(scan%20%3C%3D%20s-%3Ewindow%2B(uInt)(s-%3Ewindow_size-1)%2C%20%22wild%20scan%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F*%20Emit%20match%20if%20have%20run%20of%20MIN_MATCH%20or%20longer%2C%20else%20emit%20literal%20*%2F%0A%20%20%20%20if%20(s.match_length%20%3E%3D%20MIN_MATCH)%20%7B%0A%20%20%20%20%20%20%2F%2Fcheck_match(s%2C%20s.strstart%2C%20s.strstart%20-%201%2C%20s.match_length)%3B%0A%0A%20%20%20%20%20%20%2F***%20_tr_tally_dist(s%2C%201%2C%20s.match_length%20-%20MIN_MATCH%2C%20bflush)%3B%20***%2F%0A%20%20%20%20%20%20bflush%20%3D%20trees._tr_tally(s%2C%201%2C%20s.match_length%20-%20MIN_MATCH)%3B%0A%0A%20%20%20%20%20%20s.lookahead%20-%3D%20s.match_length%3B%0A%20%20%20%20%20%20s.strstart%20%2B%3D%20s.match_length%3B%0A%20%20%20%20%20%20s.match_length%20%3D%200%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%2F*%20No%20match%2C%20output%20a%20literal%20byte%20*%2F%0A%20%20%20%20%20%20%2F%2FTracevv((stderr%2C%22%25c%22%2C%20s-%3Ewindow%5Bs-%3Estrstart%5D))%3B%0A%20%20%20%20%20%20%2F***%20_tr_tally_lit(s%2C%20s.window%5Bs.strstart%5D%2C%20bflush)%3B%20***%2F%0A%20%20%20%20%20%20bflush%20%3D%20trees._tr_tally(s%2C%200%2C%20s.window%5Bs.strstart%5D)%3B%0A%0A%20%20%20%20%20%20s.lookahead--%3B%0A%20%20%20%20%20%20s.strstart%2B%2B%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20(bflush)%20%7B%0A%20%20%20%20%20%20%2F***%20FLUSH_BLOCK(s%2C%200)%3B%20***%2F%0A%20%20%20%20%20%20flush_block_only(s%2C%20false)%3B%0A%20%20%20%20%20%20if%20(s.strm.avail_out%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20return%20BS_NEED_MORE%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F***%2F%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20s.insert%20%3D%200%3B%0A%20%20if%20(flush%20%3D%3D%3D%20Z_FINISH)%20%7B%0A%20%20%20%20%2F***%20FLUSH_BLOCK(s%2C%201)%3B%20***%2F%0A%20%20%20%20flush_block_only(s%2C%20true)%3B%0A%20%20%20%20if%20(s.strm.avail_out%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20return%20BS_FINISH_STARTED%3B%0A%20%20%20%20%7D%0A%20%20%20%20%2F***%2F%0A%20%20%20%20return%20BS_FINISH_DONE%3B%0A%20%20%7D%0A%20%20if%20(s.last_lit)%20%7B%0A%20%20%20%20%2F***%20FLUSH_BLOCK(s%2C%200)%3B%20***%2F%0A%20%20%20%20flush_block_only(s%2C%20false)%3B%0A%20%20%20%20if%20(s.strm.avail_out%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20return%20BS_NEED_MORE%3B%0A%20%20%20%20%7D%0A%20%20%20%20%2F***%2F%0A%20%20%7D%0A%20%20return%20BS_BLOCK_DONE%3B%0A%7D%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20For%20Z_HUFFMAN_ONLY%2C%20do%20not%20look%20for%20matches.%20%20Do%20not%20maintain%20a%20hash%20table.%0A%20*%20(It%20will%20be%20regenerated%20if%20this%20run%20of%20deflate%20switches%20away%20from%20Huffman.)%0A%20*%2F%0Afunction%20deflate_huff(s%2C%20flush)%20%7B%0A%20%20var%20bflush%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20set%20if%20current%20block%20must%20be%20flushed%20*%2F%0A%0A%20%20for%20(%3B%3B)%20%7B%0A%20%20%20%20%2F*%20Make%20sure%20that%20we%20have%20a%20literal%20to%20write.%20*%2F%0A%20%20%20%20if%20(s.lookahead%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20fill_window(s)%3B%0A%20%20%20%20%20%20if%20(s.lookahead%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20if%20(flush%20%3D%3D%3D%20Z_NO_FLUSH)%20%7B%0A%20%20%20%20%20%20%20%20%20%20return%20BS_NEED_MORE%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20break%3B%20%20%20%20%20%20%2F*%20flush%20the%20current%20block%20*%2F%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F*%20Output%20a%20literal%20byte%20*%2F%0A%20%20%20%20s.match_length%20%3D%200%3B%0A%20%20%20%20%2F%2FTracevv((stderr%2C%22%25c%22%2C%20s-%3Ewindow%5Bs-%3Estrstart%5D))%3B%0A%20%20%20%20%2F***%20_tr_tally_lit(s%2C%20s.window%5Bs.strstart%5D%2C%20bflush)%3B%20***%2F%0A%20%20%20%20bflush%20%3D%20trees._tr_tally(s%2C%200%2C%20s.window%5Bs.strstart%5D)%3B%0A%20%20%20%20s.lookahead--%3B%0A%20%20%20%20s.strstart%2B%2B%3B%0A%20%20%20%20if%20(bflush)%20%7B%0A%20%20%20%20%20%20%2F***%20FLUSH_BLOCK(s%2C%200)%3B%20***%2F%0A%20%20%20%20%20%20flush_block_only(s%2C%20false)%3B%0A%20%20%20%20%20%20if%20(s.strm.avail_out%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20return%20BS_NEED_MORE%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F***%2F%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20s.insert%20%3D%200%3B%0A%20%20if%20(flush%20%3D%3D%3D%20Z_FINISH)%20%7B%0A%20%20%20%20%2F***%20FLUSH_BLOCK(s%2C%201)%3B%20***%2F%0A%20%20%20%20flush_block_only(s%2C%20true)%3B%0A%20%20%20%20if%20(s.strm.avail_out%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20return%20BS_FINISH_STARTED%3B%0A%20%20%20%20%7D%0A%20%20%20%20%2F***%2F%0A%20%20%20%20return%20BS_FINISH_DONE%3B%0A%20%20%7D%0A%20%20if%20(s.last_lit)%20%7B%0A%20%20%20%20%2F***%20FLUSH_BLOCK(s%2C%200)%3B%20***%2F%0A%20%20%20%20flush_block_only(s%2C%20false)%3B%0A%20%20%20%20if%20(s.strm.avail_out%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20return%20BS_NEED_MORE%3B%0A%20%20%20%20%7D%0A%20%20%20%20%2F***%2F%0A%20%20%7D%0A%20%20return%20BS_BLOCK_DONE%3B%0A%7D%0A%0A%2F*%20Values%20for%20max_lazy_match%2C%20good_match%20and%20max_chain_length%2C%20depending%20on%0A%20*%20the%20desired%20pack%20level%20(0..9).%20The%20values%20given%20below%20have%20been%20tuned%20to%0A%20*%20exclude%20worst%20case%20performance%20for%20pathological%20files.%20Better%20values%20may%20be%0A%20*%20found%20for%20specific%20files.%0A%20*%2F%0Afunction%20Config(good_length%2C%20max_lazy%2C%20nice_length%2C%20max_chain%2C%20func)%20%7B%0A%20%20this.good_length%20%3D%20good_length%3B%0A%20%20this.max_lazy%20%3D%20max_lazy%3B%0A%20%20this.nice_length%20%3D%20nice_length%3B%0A%20%20this.max_chain%20%3D%20max_chain%3B%0A%20%20this.func%20%3D%20func%3B%0A%7D%0A%0Avar%20configuration_table%3B%0A%0Aconfiguration_table%20%3D%20%5B%0A%20%20%2F*%20%20%20%20%20%20good%20lazy%20nice%20chain%20*%2F%0A%20%20new%20Config(0%2C%200%2C%200%2C%200%2C%20deflate_stored)%2C%20%20%20%20%20%20%20%20%20%20%2F*%200%20store%20only%20*%2F%0A%20%20new%20Config(4%2C%204%2C%208%2C%204%2C%20deflate_fast)%2C%20%20%20%20%20%20%20%20%20%20%20%20%2F*%201%20max%20speed%2C%20no%20lazy%20matches%20*%2F%0A%20%20new%20Config(4%2C%205%2C%2016%2C%208%2C%20deflate_fast)%2C%20%20%20%20%20%20%20%20%20%20%20%2F*%202%20*%2F%0A%20%20new%20Config(4%2C%206%2C%2032%2C%2032%2C%20deflate_fast)%2C%20%20%20%20%20%20%20%20%20%20%2F*%203%20*%2F%0A%0A%20%20new%20Config(4%2C%204%2C%2016%2C%2016%2C%20deflate_slow)%2C%20%20%20%20%20%20%20%20%20%20%2F*%204%20lazy%20matches%20*%2F%0A%20%20new%20Config(8%2C%2016%2C%2032%2C%2032%2C%20deflate_slow)%2C%20%20%20%20%20%20%20%20%20%2F*%205%20*%2F%0A%20%20new%20Config(8%2C%2016%2C%20128%2C%20128%2C%20deflate_slow)%2C%20%20%20%20%20%20%20%2F*%206%20*%2F%0A%20%20new%20Config(8%2C%2032%2C%20128%2C%20256%2C%20deflate_slow)%2C%20%20%20%20%20%20%20%2F*%207%20*%2F%0A%20%20new%20Config(32%2C%20128%2C%20258%2C%201024%2C%20deflate_slow)%2C%20%20%20%20%2F*%208%20*%2F%0A%20%20new%20Config(32%2C%20258%2C%20258%2C%204096%2C%20deflate_slow)%20%20%20%20%20%2F*%209%20max%20compression%20*%2F%0A%5D%3B%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Initialize%20the%20%22longest%20match%22%20routines%20for%20a%20new%20zlib%20stream%0A%20*%2F%0Afunction%20lm_init(s)%20%7B%0A%20%20s.window_size%20%3D%202%20*%20s.w_size%3B%0A%0A%20%20%2F***%20CLEAR_HASH(s)%3B%20***%2F%0A%20%20zero(s.head)%3B%20%2F%2F%20Fill%20with%20NIL%20(%3D%200)%3B%0A%0A%20%20%2F*%20Set%20the%20default%20configuration%20parameters%3A%0A%20%20%20*%2F%0A%20%20s.max_lazy_match%20%3D%20configuration_table%5Bs.level%5D.max_lazy%3B%0A%20%20s.good_match%20%3D%20configuration_table%5Bs.level%5D.good_length%3B%0A%20%20s.nice_match%20%3D%20configuration_table%5Bs.level%5D.nice_length%3B%0A%20%20s.max_chain_length%20%3D%20configuration_table%5Bs.level%5D.max_chain%3B%0A%0A%20%20s.strstart%20%3D%200%3B%0A%20%20s.block_start%20%3D%200%3B%0A%20%20s.lookahead%20%3D%200%3B%0A%20%20s.insert%20%3D%200%3B%0A%20%20s.match_length%20%3D%20s.prev_length%20%3D%20MIN_MATCH%20-%201%3B%0A%20%20s.match_available%20%3D%200%3B%0A%20%20s.ins_h%20%3D%200%3B%0A%7D%0A%0A%0Afunction%20DeflateState()%20%7B%0A%20%20this.strm%20%3D%20null%3B%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20pointer%20back%20to%20this%20zlib%20stream%20*%2F%0A%20%20this.status%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20as%20the%20name%20implies%20*%2F%0A%20%20this.pending_buf%20%3D%20null%3B%20%20%20%20%20%20%2F*%20output%20still%20pending%20*%2F%0A%20%20this.pending_buf_size%20%3D%200%3B%20%20%2F*%20size%20of%20pending_buf%20*%2F%0A%20%20this.pending_out%20%3D%200%3B%20%20%20%20%20%20%20%2F*%20next%20pending%20byte%20to%20output%20to%20the%20stream%20*%2F%0A%20%20this.pending%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%2F*%20nb%20of%20bytes%20in%20the%20pending%20buffer%20*%2F%0A%20%20this.wrap%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20bit%200%20true%20for%20zlib%2C%20bit%201%20true%20for%20gzip%20*%2F%0A%20%20this.gzhead%20%3D%20null%3B%20%20%20%20%20%20%20%20%20%2F*%20gzip%20header%20information%20to%20write%20*%2F%0A%20%20this.gzindex%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%2F*%20where%20in%20extra%2C%20name%2C%20or%20comment%20*%2F%0A%20%20this.method%20%3D%20Z_DEFLATED%3B%20%2F*%20can%20only%20be%20DEFLATED%20*%2F%0A%20%20this.last_flush%20%3D%20-1%3B%20%20%20%2F*%20value%20of%20flush%20param%20for%20previous%20deflate%20call%20*%2F%0A%0A%20%20this.w_size%20%3D%200%3B%20%20%2F*%20LZ77%20window%20size%20(32K%20by%20default)%20*%2F%0A%20%20this.w_bits%20%3D%200%3B%20%20%2F*%20log2(w_size)%20%20(8..16)%20*%2F%0A%20%20this.w_mask%20%3D%200%3B%20%20%2F*%20w_size%20-%201%20*%2F%0A%0A%20%20this.window%20%3D%20null%3B%0A%20%20%2F*%20Sliding%20window.%20Input%20bytes%20are%20read%20into%20the%20second%20half%20of%20the%20window%2C%0A%20%20%20*%20and%20move%20to%20the%20first%20half%20later%20to%20keep%20a%20dictionary%20of%20at%20least%20wSize%0A%20%20%20*%20bytes.%20With%20this%20organization%2C%20matches%20are%20limited%20to%20a%20distance%20of%0A%20%20%20*%20wSize-MAX_MATCH%20bytes%2C%20but%20this%20ensures%20that%20IO%20is%20always%0A%20%20%20*%20performed%20with%20a%20length%20multiple%20of%20the%20block%20size.%0A%20%20%20*%2F%0A%0A%20%20this.window_size%20%3D%200%3B%0A%20%20%2F*%20Actual%20size%20of%20window%3A%202*wSize%2C%20except%20when%20the%20user%20input%20buffer%0A%20%20%20*%20is%20directly%20used%20as%20sliding%20window.%0A%20%20%20*%2F%0A%0A%20%20this.prev%20%3D%20null%3B%0A%20%20%2F*%20Link%20to%20older%20string%20with%20same%20hash%20index.%20To%20limit%20the%20size%20of%20this%0A%20%20%20*%20array%20to%2064K%2C%20this%20link%20is%20maintained%20only%20for%20the%20last%2032K%20strings.%0A%20%20%20*%20An%20index%20in%20this%20array%20is%20thus%20a%20window%20index%20modulo%2032K.%0A%20%20%20*%2F%0A%0A%20%20this.head%20%3D%20null%3B%20%20%20%2F*%20Heads%20of%20the%20hash%20chains%20or%20NIL.%20*%2F%0A%0A%20%20this.ins_h%20%3D%200%3B%20%20%20%20%20%20%20%2F*%20hash%20index%20of%20string%20to%20be%20inserted%20*%2F%0A%20%20this.hash_size%20%3D%200%3B%20%20%20%2F*%20number%20of%20elements%20in%20hash%20table%20*%2F%0A%20%20this.hash_bits%20%3D%200%3B%20%20%20%2F*%20log2(hash_size)%20*%2F%0A%20%20this.hash_mask%20%3D%200%3B%20%20%20%2F*%20hash_size-1%20*%2F%0A%0A%20%20this.hash_shift%20%3D%200%3B%0A%20%20%2F*%20Number%20of%20bits%20by%20which%20ins_h%20must%20be%20shifted%20at%20each%20input%0A%20%20%20*%20step.%20It%20must%20be%20such%20that%20after%20MIN_MATCH%20steps%2C%20the%20oldest%0A%20%20%20*%20byte%20no%20longer%20takes%20part%20in%20the%20hash%20key%2C%20that%20is%3A%0A%20%20%20*%20%20%20hash_shift%20*%20MIN_MATCH%20%3E%3D%20hash_bits%0A%20%20%20*%2F%0A%0A%20%20this.block_start%20%3D%200%3B%0A%20%20%2F*%20Window%20position%20at%20the%20beginning%20of%20the%20current%20output%20block.%20Gets%0A%20%20%20*%20negative%20when%20the%20window%20is%20moved%20backwards.%0A%20%20%20*%2F%0A%0A%20%20this.match_length%20%3D%200%3B%20%20%20%20%20%20%2F*%20length%20of%20best%20match%20*%2F%0A%20%20this.prev_match%20%3D%200%3B%20%20%20%20%20%20%20%20%2F*%20previous%20match%20*%2F%0A%20%20this.match_available%20%3D%200%3B%20%20%20%2F*%20set%20if%20previous%20match%20exists%20*%2F%0A%20%20this.strstart%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%2F*%20start%20of%20string%20to%20insert%20*%2F%0A%20%20this.match_start%20%3D%200%3B%20%20%20%20%20%20%20%2F*%20start%20of%20matching%20string%20*%2F%0A%20%20this.lookahead%20%3D%200%3B%20%20%20%20%20%20%20%20%20%2F*%20number%20of%20valid%20bytes%20ahead%20in%20window%20*%2F%0A%0A%20%20this.prev_length%20%3D%200%3B%0A%20%20%2F*%20Length%20of%20the%20best%20match%20at%20previous%20step.%20Matches%20not%20greater%20than%20this%0A%20%20%20*%20are%20discarded.%20This%20is%20used%20in%20the%20lazy%20match%20evaluation.%0A%20%20%20*%2F%0A%0A%20%20this.max_chain_length%20%3D%200%3B%0A%20%20%2F*%20To%20speed%20up%20deflation%2C%20hash%20chains%20are%20never%20searched%20beyond%20this%0A%20%20%20*%20length.%20%20A%20higher%20limit%20improves%20compression%20ratio%20but%20degrades%20the%0A%20%20%20*%20speed.%0A%20%20%20*%2F%0A%0A%20%20this.max_lazy_match%20%3D%200%3B%0A%20%20%2F*%20Attempt%20to%20find%20a%20better%20match%20only%20when%20the%20current%20match%20is%20strictly%0A%20%20%20*%20smaller%20than%20this%20value.%20This%20mechanism%20is%20used%20only%20for%20compression%0A%20%20%20*%20levels%20%3E%3D%204.%0A%20%20%20*%2F%0A%20%20%2F%2F%20That's%20alias%20to%20max_lazy_match%2C%20don't%20use%20directly%0A%20%20%2F%2Fthis.max_insert_length%20%3D%200%3B%0A%20%20%2F*%20Insert%20new%20strings%20in%20the%20hash%20table%20only%20if%20the%20match%20length%20is%20not%0A%20%20%20*%20greater%20than%20this%20length.%20This%20saves%20time%20but%20degrades%20compression.%0A%20%20%20*%20max_insert_length%20is%20used%20only%20for%20compression%20levels%20%3C%3D%203.%0A%20%20%20*%2F%0A%0A%20%20this.level%20%3D%200%3B%20%20%20%20%20%2F*%20compression%20level%20(1..9)%20*%2F%0A%20%20this.strategy%20%3D%200%3B%20%20%2F*%20favor%20or%20force%20Huffman%20coding*%2F%0A%0A%20%20this.good_match%20%3D%200%3B%0A%20%20%2F*%20Use%20a%20faster%20search%20when%20the%20previous%20match%20is%20longer%20than%20this%20*%2F%0A%0A%20%20this.nice_match%20%3D%200%3B%20%2F*%20Stop%20searching%20when%20current%20match%20exceeds%20this%20*%2F%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20used%20by%20trees.c%3A%20*%2F%0A%0A%20%20%2F*%20Didn't%20use%20ct_data%20typedef%20below%20to%20suppress%20compiler%20warning%20*%2F%0A%0A%20%20%2F%2F%20struct%20ct_data_s%20dyn_ltree%5BHEAP_SIZE%5D%3B%20%20%20%2F*%20literal%20and%20length%20tree%20*%2F%0A%20%20%2F%2F%20struct%20ct_data_s%20dyn_dtree%5B2*D_CODES%2B1%5D%3B%20%2F*%20distance%20tree%20*%2F%0A%20%20%2F%2F%20struct%20ct_data_s%20bl_tree%5B2*BL_CODES%2B1%5D%3B%20%20%2F*%20Huffman%20tree%20for%20bit%20lengths%20*%2F%0A%0A%20%20%2F%2F%20Use%20flat%20array%20of%20DOUBLE%20size%2C%20with%20interleaved%20fata%2C%0A%20%20%2F%2F%20because%20JS%20does%20not%20support%20effective%0A%20%20this.dyn_ltree%20%20%3D%20new%20utils.Buf16(HEAP_SIZE%20*%202)%3B%0A%20%20this.dyn_dtree%20%20%3D%20new%20utils.Buf16((2%20*%20D_CODES%20%2B%201)%20*%202)%3B%0A%20%20this.bl_tree%20%20%20%20%3D%20new%20utils.Buf16((2%20*%20BL_CODES%20%2B%201)%20*%202)%3B%0A%20%20zero(this.dyn_ltree)%3B%0A%20%20zero(this.dyn_dtree)%3B%0A%20%20zero(this.bl_tree)%3B%0A%0A%20%20this.l_desc%20%20%20%3D%20null%3B%20%20%20%20%20%20%20%20%20%2F*%20desc.%20for%20literal%20tree%20*%2F%0A%20%20this.d_desc%20%20%20%3D%20null%3B%20%20%20%20%20%20%20%20%20%2F*%20desc.%20for%20distance%20tree%20*%2F%0A%20%20this.bl_desc%20%20%3D%20null%3B%20%20%20%20%20%20%20%20%20%2F*%20desc.%20for%20bit%20length%20tree%20*%2F%0A%0A%20%20%2F%2Fush%20bl_count%5BMAX_BITS%2B1%5D%3B%0A%20%20this.bl_count%20%3D%20new%20utils.Buf16(MAX_BITS%20%2B%201)%3B%0A%20%20%2F*%20number%20of%20codes%20at%20each%20bit%20length%20for%20an%20optimal%20tree%20*%2F%0A%0A%20%20%2F%2Fint%20heap%5B2*L_CODES%2B1%5D%3B%20%20%20%20%20%20%2F*%20heap%20used%20to%20build%20the%20Huffman%20trees%20*%2F%0A%20%20this.heap%20%3D%20new%20utils.Buf16(2%20*%20L_CODES%20%2B%201)%3B%20%20%2F*%20heap%20used%20to%20build%20the%20Huffman%20trees%20*%2F%0A%20%20zero(this.heap)%3B%0A%0A%20%20this.heap_len%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20number%20of%20elements%20in%20the%20heap%20*%2F%0A%20%20this.heap_max%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20element%20of%20largest%20frequency%20*%2F%0A%20%20%2F*%20The%20sons%20of%20heap%5Bn%5D%20are%20heap%5B2*n%5D%20and%20heap%5B2*n%2B1%5D.%20heap%5B0%5D%20is%20not%20used.%0A%20%20%20*%20The%20same%20heap%20array%20is%20used%20to%20build%20all%20trees.%0A%20%20%20*%2F%0A%0A%20%20this.depth%20%3D%20new%20utils.Buf16(2%20*%20L_CODES%20%2B%201)%3B%20%2F%2Fuch%20depth%5B2*L_CODES%2B1%5D%3B%0A%20%20zero(this.depth)%3B%0A%20%20%2F*%20Depth%20of%20each%20subtree%20used%20as%20tie%20breaker%20for%20trees%20of%20equal%20frequency%0A%20%20%20*%2F%0A%0A%20%20this.l_buf%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%2F*%20buffer%20index%20for%20literals%20or%20lengths%20*%2F%0A%0A%20%20this.lit_bufsize%20%3D%200%3B%0A%20%20%2F*%20Size%20of%20match%20buffer%20for%20literals%2Flengths.%20%20There%20are%204%20reasons%20for%0A%20%20%20*%20limiting%20lit_bufsize%20to%2064K%3A%0A%20%20%20*%20%20%20-%20frequencies%20can%20be%20kept%20in%2016%20bit%20counters%0A%20%20%20*%20%20%20-%20if%20compression%20is%20not%20successful%20for%20the%20first%20block%2C%20all%20input%0A%20%20%20*%20%20%20%20%20data%20is%20still%20in%20the%20window%20so%20we%20can%20still%20emit%20a%20stored%20block%20even%0A%20%20%20*%20%20%20%20%20when%20input%20comes%20from%20standard%20input.%20%20(This%20can%20also%20be%20done%20for%0A%20%20%20*%20%20%20%20%20all%20blocks%20if%20lit_bufsize%20is%20not%20greater%20than%2032K.)%0A%20%20%20*%20%20%20-%20if%20compression%20is%20not%20successful%20for%20a%20file%20smaller%20than%2064K%2C%20we%20can%0A%20%20%20*%20%20%20%20%20even%20emit%20a%20stored%20file%20instead%20of%20a%20stored%20block%20(saving%205%20bytes).%0A%20%20%20*%20%20%20%20%20This%20is%20applicable%20only%20for%20zip%20(not%20gzip%20or%20zlib).%0A%20%20%20*%20%20%20-%20creating%20new%20Huffman%20trees%20less%20frequently%20may%20not%20provide%20fast%0A%20%20%20*%20%20%20%20%20adaptation%20to%20changes%20in%20the%20input%20data%20statistics.%20(Take%20for%0A%20%20%20*%20%20%20%20%20example%20a%20binary%20file%20with%20poorly%20compressible%20code%20followed%20by%0A%20%20%20*%20%20%20%20%20a%20highly%20compressible%20string%20table.)%20Smaller%20buffer%20sizes%20give%0A%20%20%20*%20%20%20%20%20fast%20adaptation%20but%20have%20of%20course%20the%20overhead%20of%20transmitting%0A%20%20%20*%20%20%20%20%20trees%20more%20frequently.%0A%20%20%20*%20%20%20-%20I%20can't%20count%20above%204%0A%20%20%20*%2F%0A%0A%20%20this.last_lit%20%3D%200%3B%20%20%20%20%20%20%2F*%20running%20index%20in%20l_buf%20*%2F%0A%0A%20%20this.d_buf%20%3D%200%3B%0A%20%20%2F*%20Buffer%20index%20for%20distances.%20To%20simplify%20the%20code%2C%20d_buf%20and%20l_buf%20have%0A%20%20%20*%20the%20same%20number%20of%20elements.%20To%20use%20different%20lengths%2C%20an%20extra%20flag%0A%20%20%20*%20array%20would%20be%20necessary.%0A%20%20%20*%2F%0A%0A%20%20this.opt_len%20%3D%200%3B%20%20%20%20%20%20%20%2F*%20bit%20length%20of%20current%20block%20with%20optimal%20trees%20*%2F%0A%20%20this.static_len%20%3D%200%3B%20%20%20%20%2F*%20bit%20length%20of%20current%20block%20with%20static%20trees%20*%2F%0A%20%20this.matches%20%3D%200%3B%20%20%20%20%20%20%20%2F*%20number%20of%20string%20matches%20in%20current%20block%20*%2F%0A%20%20this.insert%20%3D%200%3B%20%20%20%20%20%20%20%20%2F*%20bytes%20at%20end%20of%20window%20left%20to%20insert%20*%2F%0A%0A%0A%20%20this.bi_buf%20%3D%200%3B%0A%20%20%2F*%20Output%20buffer.%20bits%20are%20inserted%20starting%20at%20the%20bottom%20(least%0A%20%20%20*%20significant%20bits).%0A%20%20%20*%2F%0A%20%20this.bi_valid%20%3D%200%3B%0A%20%20%2F*%20Number%20of%20valid%20bits%20in%20bi_buf.%20%20All%20bits%20above%20the%20last%20valid%20bit%0A%20%20%20*%20are%20always%20zero.%0A%20%20%20*%2F%0A%0A%20%20%2F%2F%20Used%20for%20window%20memory%20init.%20We%20safely%20ignore%20it%20for%20JS.%20That%20makes%0A%20%20%2F%2F%20sense%20only%20for%20pointers%20and%20memory%20check%20tools.%0A%20%20%2F%2Fthis.high_water%20%3D%200%3B%0A%20%20%2F*%20High%20water%20mark%20offset%20in%20window%20for%20initialized%20bytes%20--%20bytes%20above%0A%20%20%20*%20this%20are%20set%20to%20zero%20in%20order%20to%20avoid%20memory%20check%20warnings%20when%0A%20%20%20*%20longest%20match%20routines%20access%20bytes%20past%20the%20input.%20%20This%20is%20then%0A%20%20%20*%20updated%20to%20the%20new%20high%20water%20mark.%0A%20%20%20*%2F%0A%7D%0A%0A%0Afunction%20deflateResetKeep(strm)%20%7B%0A%20%20var%20s%3B%0A%0A%20%20if%20(!strm%20%7C%7C%20!strm.state)%20%7B%0A%20%20%20%20return%20err(strm%2C%20Z_STREAM_ERROR)%3B%0A%20%20%7D%0A%0A%20%20strm.total_in%20%3D%20strm.total_out%20%3D%200%3B%0A%20%20strm.data_type%20%3D%20Z_UNKNOWN%3B%0A%0A%20%20s%20%3D%20strm.state%3B%0A%20%20s.pending%20%3D%200%3B%0A%20%20s.pending_out%20%3D%200%3B%0A%0A%20%20if%20(s.wrap%20%3C%200)%20%7B%0A%20%20%20%20s.wrap%20%3D%20-s.wrap%3B%0A%20%20%20%20%2F*%20was%20made%20negative%20by%20deflate(...%2C%20Z_FINISH)%3B%20*%2F%0A%20%20%7D%0A%20%20s.status%20%3D%20(s.wrap%20%3F%20INIT_STATE%20%3A%20BUSY_STATE)%3B%0A%20%20strm.adler%20%3D%20(s.wrap%20%3D%3D%3D%202)%20%3F%0A%20%20%20%200%20%20%2F%2F%20crc32(0%2C%20Z_NULL%2C%200)%0A%20%20%3A%0A%20%20%20%201%3B%20%2F%2F%20adler32(0%2C%20Z_NULL%2C%200)%0A%20%20s.last_flush%20%3D%20Z_NO_FLUSH%3B%0A%20%20trees._tr_init(s)%3B%0A%20%20return%20Z_OK%3B%0A%7D%0A%0A%0Afunction%20deflateReset(strm)%20%7B%0A%20%20var%20ret%20%3D%20deflateResetKeep(strm)%3B%0A%20%20if%20(ret%20%3D%3D%3D%20Z_OK)%20%7B%0A%20%20%20%20lm_init(strm.state)%3B%0A%20%20%7D%0A%20%20return%20ret%3B%0A%7D%0A%0A%0Afunction%20deflateSetHeader(strm%2C%20head)%20%7B%0A%20%20if%20(!strm%20%7C%7C%20!strm.state)%20%7B%20return%20Z_STREAM_ERROR%3B%20%7D%0A%20%20if%20(strm.state.wrap%20!%3D%3D%202)%20%7B%20return%20Z_STREAM_ERROR%3B%20%7D%0A%20%20strm.state.gzhead%20%3D%20head%3B%0A%20%20return%20Z_OK%3B%0A%7D%0A%0A%0Afunction%20deflateInit2(strm%2C%20level%2C%20method%2C%20windowBits%2C%20memLevel%2C%20strategy)%20%7B%0A%20%20if%20(!strm)%20%7B%20%2F%2F%20%3D%3D%3D%20Z_NULL%0A%20%20%20%20return%20Z_STREAM_ERROR%3B%0A%20%20%7D%0A%20%20var%20wrap%20%3D%201%3B%0A%0A%20%20if%20(level%20%3D%3D%3D%20Z_DEFAULT_COMPRESSION)%20%7B%0A%20%20%20%20level%20%3D%206%3B%0A%20%20%7D%0A%0A%20%20if%20(windowBits%20%3C%200)%20%7B%20%2F*%20suppress%20zlib%20wrapper%20*%2F%0A%20%20%20%20wrap%20%3D%200%3B%0A%20%20%20%20windowBits%20%3D%20-windowBits%3B%0A%20%20%7D%0A%0A%20%20else%20if%20(windowBits%20%3E%2015)%20%7B%0A%20%20%20%20wrap%20%3D%202%3B%20%20%20%20%20%20%20%20%20%20%20%2F*%20write%20gzip%20wrapper%20instead%20*%2F%0A%20%20%20%20windowBits%20-%3D%2016%3B%0A%20%20%7D%0A%0A%0A%20%20if%20(memLevel%20%3C%201%20%7C%7C%20memLevel%20%3E%20MAX_MEM_LEVEL%20%7C%7C%20method%20!%3D%3D%20Z_DEFLATED%20%7C%7C%0A%20%20%20%20windowBits%20%3C%208%20%7C%7C%20windowBits%20%3E%2015%20%7C%7C%20level%20%3C%200%20%7C%7C%20level%20%3E%209%20%7C%7C%0A%20%20%20%20strategy%20%3C%200%20%7C%7C%20strategy%20%3E%20Z_FIXED)%20%7B%0A%20%20%20%20return%20err(strm%2C%20Z_STREAM_ERROR)%3B%0A%20%20%7D%0A%0A%0A%20%20if%20(windowBits%20%3D%3D%3D%208)%20%7B%0A%20%20%20%20windowBits%20%3D%209%3B%0A%20%20%7D%0A%20%20%2F*%20until%20256-byte%20window%20bug%20fixed%20*%2F%0A%0A%20%20var%20s%20%3D%20new%20DeflateState()%3B%0A%0A%20%20strm.state%20%3D%20s%3B%0A%20%20s.strm%20%3D%20strm%3B%0A%0A%20%20s.wrap%20%3D%20wrap%3B%0A%20%20s.gzhead%20%3D%20null%3B%0A%20%20s.w_bits%20%3D%20windowBits%3B%0A%20%20s.w_size%20%3D%201%20%3C%3C%20s.w_bits%3B%0A%20%20s.w_mask%20%3D%20s.w_size%20-%201%3B%0A%0A%20%20s.hash_bits%20%3D%20memLevel%20%2B%207%3B%0A%20%20s.hash_size%20%3D%201%20%3C%3C%20s.hash_bits%3B%0A%20%20s.hash_mask%20%3D%20s.hash_size%20-%201%3B%0A%20%20s.hash_shift%20%3D%20~~((s.hash_bits%20%2B%20MIN_MATCH%20-%201)%20%2F%20MIN_MATCH)%3B%0A%0A%20%20s.window%20%3D%20new%20utils.Buf8(s.w_size%20*%202)%3B%0A%20%20s.head%20%3D%20new%20utils.Buf16(s.hash_size)%3B%0A%20%20s.prev%20%3D%20new%20utils.Buf16(s.w_size)%3B%0A%0A%20%20%2F%2F%20Don't%20need%20mem%20init%20magic%20for%20JS.%0A%20%20%2F%2Fs.high_water%20%3D%200%3B%20%20%2F*%20nothing%20written%20to%20s-%3Ewindow%20yet%20*%2F%0A%0A%20%20s.lit_bufsize%20%3D%201%20%3C%3C%20(memLevel%20%2B%206)%3B%20%2F*%2016K%20elements%20by%20default%20*%2F%0A%0A%20%20s.pending_buf_size%20%3D%20s.lit_bufsize%20*%204%3B%0A%20%20s.pending_buf%20%3D%20new%20utils.Buf8(s.pending_buf_size)%3B%0A%0A%20%20s.d_buf%20%3D%20s.lit_bufsize%20%3E%3E%201%3B%0A%20%20s.l_buf%20%3D%20(1%20%2B%202)%20*%20s.lit_bufsize%3B%0A%0A%20%20s.level%20%3D%20level%3B%0A%20%20s.strategy%20%3D%20strategy%3B%0A%20%20s.method%20%3D%20method%3B%0A%0A%20%20return%20deflateReset(strm)%3B%0A%7D%0A%0Afunction%20deflateInit(strm%2C%20level)%20%7B%0A%20%20return%20deflateInit2(strm%2C%20level%2C%20Z_DEFLATED%2C%20MAX_WBITS%2C%20DEF_MEM_LEVEL%2C%20Z_DEFAULT_STRATEGY)%3B%0A%7D%0A%0A%0Afunction%20deflate(strm%2C%20flush)%20%7B%0A%20%20var%20old_flush%2C%20s%3B%0A%20%20var%20beg%2C%20val%3B%20%2F%2F%20for%20gzip%20header%20write%20only%0A%0A%20%20if%20(!strm%20%7C%7C%20!strm.state%20%7C%7C%0A%20%20%20%20flush%20%3E%20Z_BLOCK%20%7C%7C%20flush%20%3C%200)%20%7B%0A%20%20%20%20return%20strm%20%3F%20err(strm%2C%20Z_STREAM_ERROR)%20%3A%20Z_STREAM_ERROR%3B%0A%20%20%7D%0A%0A%20%20s%20%3D%20strm.state%3B%0A%0A%20%20if%20(!strm.output%20%7C%7C%0A%20%20%20%20%20%20(!strm.input%20%26%26%20strm.avail_in%20!%3D%3D%200)%20%7C%7C%0A%20%20%20%20%20%20(s.status%20%3D%3D%3D%20FINISH_STATE%20%26%26%20flush%20!%3D%3D%20Z_FINISH))%20%7B%0A%20%20%20%20return%20err(strm%2C%20(strm.avail_out%20%3D%3D%3D%200)%20%3F%20Z_BUF_ERROR%20%3A%20Z_STREAM_ERROR)%3B%0A%20%20%7D%0A%0A%20%20s.strm%20%3D%20strm%3B%20%2F*%20just%20in%20case%20*%2F%0A%20%20old_flush%20%3D%20s.last_flush%3B%0A%20%20s.last_flush%20%3D%20flush%3B%0A%0A%20%20%2F*%20Write%20the%20header%20*%2F%0A%20%20if%20(s.status%20%3D%3D%3D%20INIT_STATE)%20%7B%0A%0A%20%20%20%20if%20(s.wrap%20%3D%3D%3D%202)%20%7B%20%2F%2F%20GZIP%20header%0A%20%20%20%20%20%20strm.adler%20%3D%200%3B%20%20%2F%2Fcrc32(0L%2C%20Z_NULL%2C%200)%3B%0A%20%20%20%20%20%20put_byte(s%2C%2031)%3B%0A%20%20%20%20%20%20put_byte(s%2C%20139)%3B%0A%20%20%20%20%20%20put_byte(s%2C%208)%3B%0A%20%20%20%20%20%20if%20(!s.gzhead)%20%7B%20%2F%2F%20s-%3Egzhead%20%3D%3D%20Z_NULL%0A%20%20%20%20%20%20%20%20put_byte(s%2C%200)%3B%0A%20%20%20%20%20%20%20%20put_byte(s%2C%200)%3B%0A%20%20%20%20%20%20%20%20put_byte(s%2C%200)%3B%0A%20%20%20%20%20%20%20%20put_byte(s%2C%200)%3B%0A%20%20%20%20%20%20%20%20put_byte(s%2C%200)%3B%0A%20%20%20%20%20%20%20%20put_byte(s%2C%20s.level%20%3D%3D%3D%209%20%3F%202%20%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(s.strategy%20%3E%3D%20Z_HUFFMAN_ONLY%20%7C%7C%20s.level%20%3C%202%20%3F%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%204%20%3A%200))%3B%0A%20%20%20%20%20%20%20%20put_byte(s%2C%20OS_CODE)%3B%0A%20%20%20%20%20%20%20%20s.status%20%3D%20BUSY_STATE%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20else%20%7B%0A%20%20%20%20%20%20%20%20put_byte(s%2C%20(s.gzhead.text%20%3F%201%20%3A%200)%20%2B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(s.gzhead.hcrc%20%3F%202%20%3A%200)%20%2B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(!s.gzhead.extra%20%3F%200%20%3A%204)%20%2B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(!s.gzhead.name%20%3F%200%20%3A%208)%20%2B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(!s.gzhead.comment%20%3F%200%20%3A%2016)%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20)%3B%0A%20%20%20%20%20%20%20%20put_byte(s%2C%20s.gzhead.time%20%26%200xff)%3B%0A%20%20%20%20%20%20%20%20put_byte(s%2C%20(s.gzhead.time%20%3E%3E%208)%20%26%200xff)%3B%0A%20%20%20%20%20%20%20%20put_byte(s%2C%20(s.gzhead.time%20%3E%3E%2016)%20%26%200xff)%3B%0A%20%20%20%20%20%20%20%20put_byte(s%2C%20(s.gzhead.time%20%3E%3E%2024)%20%26%200xff)%3B%0A%20%20%20%20%20%20%20%20put_byte(s%2C%20s.level%20%3D%3D%3D%209%20%3F%202%20%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(s.strategy%20%3E%3D%20Z_HUFFMAN_ONLY%20%7C%7C%20s.level%20%3C%202%20%3F%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%204%20%3A%200))%3B%0A%20%20%20%20%20%20%20%20put_byte(s%2C%20s.gzhead.os%20%26%200xff)%3B%0A%20%20%20%20%20%20%20%20if%20(s.gzhead.extra%20%26%26%20s.gzhead.extra.length)%20%7B%0A%20%20%20%20%20%20%20%20%20%20put_byte(s%2C%20s.gzhead.extra.length%20%26%200xff)%3B%0A%20%20%20%20%20%20%20%20%20%20put_byte(s%2C%20(s.gzhead.extra.length%20%3E%3E%208)%20%26%200xff)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20if%20(s.gzhead.hcrc)%20%7B%0A%20%20%20%20%20%20%20%20%20%20strm.adler%20%3D%20crc32(strm.adler%2C%20s.pending_buf%2C%20s.pending%2C%200)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20s.gzindex%20%3D%200%3B%0A%20%20%20%20%20%20%20%20s.status%20%3D%20EXTRA_STATE%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20else%20%2F%2F%20DEFLATE%20header%0A%20%20%20%20%7B%0A%20%20%20%20%20%20var%20header%20%3D%20(Z_DEFLATED%20%2B%20((s.w_bits%20-%208)%20%3C%3C%204))%20%3C%3C%208%3B%0A%20%20%20%20%20%20var%20level_flags%20%3D%20-1%3B%0A%0A%20%20%20%20%20%20if%20(s.strategy%20%3E%3D%20Z_HUFFMAN_ONLY%20%7C%7C%20s.level%20%3C%202)%20%7B%0A%20%20%20%20%20%20%20%20level_flags%20%3D%200%3B%0A%20%20%20%20%20%20%7D%20else%20if%20(s.level%20%3C%206)%20%7B%0A%20%20%20%20%20%20%20%20level_flags%20%3D%201%3B%0A%20%20%20%20%20%20%7D%20else%20if%20(s.level%20%3D%3D%3D%206)%20%7B%0A%20%20%20%20%20%20%20%20level_flags%20%3D%202%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20level_flags%20%3D%203%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20header%20%7C%3D%20(level_flags%20%3C%3C%206)%3B%0A%20%20%20%20%20%20if%20(s.strstart%20!%3D%3D%200)%20%7B%20header%20%7C%3D%20PRESET_DICT%3B%20%7D%0A%20%20%20%20%20%20header%20%2B%3D%2031%20-%20(header%20%25%2031)%3B%0A%0A%20%20%20%20%20%20s.status%20%3D%20BUSY_STATE%3B%0A%20%20%20%20%20%20putShortMSB(s%2C%20header)%3B%0A%0A%20%20%20%20%20%20%2F*%20Save%20the%20adler32%20of%20the%20preset%20dictionary%3A%20*%2F%0A%20%20%20%20%20%20if%20(s.strstart%20!%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20putShortMSB(s%2C%20strm.adler%20%3E%3E%3E%2016)%3B%0A%20%20%20%20%20%20%20%20putShortMSB(s%2C%20strm.adler%20%26%200xffff)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20strm.adler%20%3D%201%3B%20%2F%2F%20adler32(0L%2C%20Z_NULL%2C%200)%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%2F%2F%23ifdef%20GZIP%0A%20%20if%20(s.status%20%3D%3D%3D%20EXTRA_STATE)%20%7B%0A%20%20%20%20if%20(s.gzhead.extra%2F*%20!%3D%20Z_NULL*%2F)%20%7B%0A%20%20%20%20%20%20beg%20%3D%20s.pending%3B%20%20%2F*%20start%20of%20bytes%20to%20update%20crc%20*%2F%0A%0A%20%20%20%20%20%20while%20(s.gzindex%20%3C%20(s.gzhead.extra.length%20%26%200xffff))%20%7B%0A%20%20%20%20%20%20%20%20if%20(s.pending%20%3D%3D%3D%20s.pending_buf_size)%20%7B%0A%20%20%20%20%20%20%20%20%20%20if%20(s.gzhead.hcrc%20%26%26%20s.pending%20%3E%20beg)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20strm.adler%20%3D%20crc32(strm.adler%2C%20s.pending_buf%2C%20s.pending%20-%20beg%2C%20beg)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20flush_pending(strm)%3B%0A%20%20%20%20%20%20%20%20%20%20beg%20%3D%20s.pending%3B%0A%20%20%20%20%20%20%20%20%20%20if%20(s.pending%20%3D%3D%3D%20s.pending_buf_size)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20put_byte(s%2C%20s.gzhead.extra%5Bs.gzindex%5D%20%26%200xff)%3B%0A%20%20%20%20%20%20%20%20s.gzindex%2B%2B%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(s.gzhead.hcrc%20%26%26%20s.pending%20%3E%20beg)%20%7B%0A%20%20%20%20%20%20%20%20strm.adler%20%3D%20crc32(strm.adler%2C%20s.pending_buf%2C%20s.pending%20-%20beg%2C%20beg)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(s.gzindex%20%3D%3D%3D%20s.gzhead.extra.length)%20%7B%0A%20%20%20%20%20%20%20%20s.gzindex%20%3D%200%3B%0A%20%20%20%20%20%20%20%20s.status%20%3D%20NAME_STATE%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20else%20%7B%0A%20%20%20%20%20%20s.status%20%3D%20NAME_STATE%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20if%20(s.status%20%3D%3D%3D%20NAME_STATE)%20%7B%0A%20%20%20%20if%20(s.gzhead.name%2F*%20!%3D%20Z_NULL*%2F)%20%7B%0A%20%20%20%20%20%20beg%20%3D%20s.pending%3B%20%20%2F*%20start%20of%20bytes%20to%20update%20crc%20*%2F%0A%20%20%20%20%20%20%2F%2Fint%20val%3B%0A%0A%20%20%20%20%20%20do%20%7B%0A%20%20%20%20%20%20%20%20if%20(s.pending%20%3D%3D%3D%20s.pending_buf_size)%20%7B%0A%20%20%20%20%20%20%20%20%20%20if%20(s.gzhead.hcrc%20%26%26%20s.pending%20%3E%20beg)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20strm.adler%20%3D%20crc32(strm.adler%2C%20s.pending_buf%2C%20s.pending%20-%20beg%2C%20beg)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20flush_pending(strm)%3B%0A%20%20%20%20%20%20%20%20%20%20beg%20%3D%20s.pending%3B%0A%20%20%20%20%20%20%20%20%20%20if%20(s.pending%20%3D%3D%3D%20s.pending_buf_size)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20val%20%3D%201%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%2F%2F%20JS%20specific%3A%20little%20magic%20to%20add%20zero%20terminator%20to%20end%20of%20string%0A%20%20%20%20%20%20%20%20if%20(s.gzindex%20%3C%20s.gzhead.name.length)%20%7B%0A%20%20%20%20%20%20%20%20%20%20val%20%3D%20s.gzhead.name.charCodeAt(s.gzindex%2B%2B)%20%26%200xff%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20val%20%3D%200%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20put_byte(s%2C%20val)%3B%0A%20%20%20%20%20%20%7D%20while%20(val%20!%3D%3D%200)%3B%0A%0A%20%20%20%20%20%20if%20(s.gzhead.hcrc%20%26%26%20s.pending%20%3E%20beg)%20%7B%0A%20%20%20%20%20%20%20%20strm.adler%20%3D%20crc32(strm.adler%2C%20s.pending_buf%2C%20s.pending%20-%20beg%2C%20beg)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(val%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20s.gzindex%20%3D%200%3B%0A%20%20%20%20%20%20%20%20s.status%20%3D%20COMMENT_STATE%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20else%20%7B%0A%20%20%20%20%20%20s.status%20%3D%20COMMENT_STATE%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20if%20(s.status%20%3D%3D%3D%20COMMENT_STATE)%20%7B%0A%20%20%20%20if%20(s.gzhead.comment%2F*%20!%3D%20Z_NULL*%2F)%20%7B%0A%20%20%20%20%20%20beg%20%3D%20s.pending%3B%20%20%2F*%20start%20of%20bytes%20to%20update%20crc%20*%2F%0A%20%20%20%20%20%20%2F%2Fint%20val%3B%0A%0A%20%20%20%20%20%20do%20%7B%0A%20%20%20%20%20%20%20%20if%20(s.pending%20%3D%3D%3D%20s.pending_buf_size)%20%7B%0A%20%20%20%20%20%20%20%20%20%20if%20(s.gzhead.hcrc%20%26%26%20s.pending%20%3E%20beg)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20strm.adler%20%3D%20crc32(strm.adler%2C%20s.pending_buf%2C%20s.pending%20-%20beg%2C%20beg)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20flush_pending(strm)%3B%0A%20%20%20%20%20%20%20%20%20%20beg%20%3D%20s.pending%3B%0A%20%20%20%20%20%20%20%20%20%20if%20(s.pending%20%3D%3D%3D%20s.pending_buf_size)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20val%20%3D%201%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%2F%2F%20JS%20specific%3A%20little%20magic%20to%20add%20zero%20terminator%20to%20end%20of%20string%0A%20%20%20%20%20%20%20%20if%20(s.gzindex%20%3C%20s.gzhead.comment.length)%20%7B%0A%20%20%20%20%20%20%20%20%20%20val%20%3D%20s.gzhead.comment.charCodeAt(s.gzindex%2B%2B)%20%26%200xff%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20val%20%3D%200%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20put_byte(s%2C%20val)%3B%0A%20%20%20%20%20%20%7D%20while%20(val%20!%3D%3D%200)%3B%0A%0A%20%20%20%20%20%20if%20(s.gzhead.hcrc%20%26%26%20s.pending%20%3E%20beg)%20%7B%0A%20%20%20%20%20%20%20%20strm.adler%20%3D%20crc32(strm.adler%2C%20s.pending_buf%2C%20s.pending%20-%20beg%2C%20beg)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(val%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20s.status%20%3D%20HCRC_STATE%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20else%20%7B%0A%20%20%20%20%20%20s.status%20%3D%20HCRC_STATE%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20if%20(s.status%20%3D%3D%3D%20HCRC_STATE)%20%7B%0A%20%20%20%20if%20(s.gzhead.hcrc)%20%7B%0A%20%20%20%20%20%20if%20(s.pending%20%2B%202%20%3E%20s.pending_buf_size)%20%7B%0A%20%20%20%20%20%20%20%20flush_pending(strm)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(s.pending%20%2B%202%20%3C%3D%20s.pending_buf_size)%20%7B%0A%20%20%20%20%20%20%20%20put_byte(s%2C%20strm.adler%20%26%200xff)%3B%0A%20%20%20%20%20%20%20%20put_byte(s%2C%20(strm.adler%20%3E%3E%208)%20%26%200xff)%3B%0A%20%20%20%20%20%20%20%20strm.adler%20%3D%200%3B%20%2F%2Fcrc32(0L%2C%20Z_NULL%2C%200)%3B%0A%20%20%20%20%20%20%20%20s.status%20%3D%20BUSY_STATE%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20else%20%7B%0A%20%20%20%20%20%20s.status%20%3D%20BUSY_STATE%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%2F%2F%23endif%0A%0A%20%20%2F*%20Flush%20as%20much%20pending%20output%20as%20possible%20*%2F%0A%20%20if%20(s.pending%20!%3D%3D%200)%20%7B%0A%20%20%20%20flush_pending(strm)%3B%0A%20%20%20%20if%20(strm.avail_out%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%2F*%20Since%20avail_out%20is%200%2C%20deflate%20will%20be%20called%20again%20with%0A%20%20%20%20%20%20%20*%20more%20output%20space%2C%20but%20possibly%20with%20both%20pending%20and%0A%20%20%20%20%20%20%20*%20avail_in%20equal%20to%20zero.%20There%20won't%20be%20anything%20to%20do%2C%0A%20%20%20%20%20%20%20*%20but%20this%20is%20not%20an%20error%20situation%20so%20make%20sure%20we%0A%20%20%20%20%20%20%20*%20return%20OK%20instead%20of%20BUF_ERROR%20at%20next%20call%20of%20deflate%3A%0A%20%20%20%20%20%20%20*%2F%0A%20%20%20%20%20%20s.last_flush%20%3D%20-1%3B%0A%20%20%20%20%20%20return%20Z_OK%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F*%20Make%20sure%20there%20is%20something%20to%20do%20and%20avoid%20duplicate%20consecutive%0A%20%20%20%20%20*%20flushes.%20For%20repeated%20and%20useless%20calls%20with%20Z_FINISH%2C%20we%20keep%0A%20%20%20%20%20*%20returning%20Z_STREAM_END%20instead%20of%20Z_BUF_ERROR.%0A%20%20%20%20%20*%2F%0A%20%20%7D%20else%20if%20(strm.avail_in%20%3D%3D%3D%200%20%26%26%20rank(flush)%20%3C%3D%20rank(old_flush)%20%26%26%0A%20%20%20%20flush%20!%3D%3D%20Z_FINISH)%20%7B%0A%20%20%20%20return%20err(strm%2C%20Z_BUF_ERROR)%3B%0A%20%20%7D%0A%0A%20%20%2F*%20User%20must%20not%20provide%20more%20input%20after%20the%20first%20FINISH%3A%20*%2F%0A%20%20if%20(s.status%20%3D%3D%3D%20FINISH_STATE%20%26%26%20strm.avail_in%20!%3D%3D%200)%20%7B%0A%20%20%20%20return%20err(strm%2C%20Z_BUF_ERROR)%3B%0A%20%20%7D%0A%0A%20%20%2F*%20Start%20a%20new%20block%20or%20continue%20the%20current%20one.%0A%20%20%20*%2F%0A%20%20if%20(strm.avail_in%20!%3D%3D%200%20%7C%7C%20s.lookahead%20!%3D%3D%200%20%7C%7C%0A%20%20%20%20(flush%20!%3D%3D%20Z_NO_FLUSH%20%26%26%20s.status%20!%3D%3D%20FINISH_STATE))%20%7B%0A%20%20%20%20var%20bstate%20%3D%20(s.strategy%20%3D%3D%3D%20Z_HUFFMAN_ONLY)%20%3F%20deflate_huff(s%2C%20flush)%20%3A%0A%20%20%20%20%20%20(s.strategy%20%3D%3D%3D%20Z_RLE%20%3F%20deflate_rle(s%2C%20flush)%20%3A%0A%20%20%20%20%20%20%20%20configuration_table%5Bs.level%5D.func(s%2C%20flush))%3B%0A%0A%20%20%20%20if%20(bstate%20%3D%3D%3D%20BS_FINISH_STARTED%20%7C%7C%20bstate%20%3D%3D%3D%20BS_FINISH_DONE)%20%7B%0A%20%20%20%20%20%20s.status%20%3D%20FINISH_STATE%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20(bstate%20%3D%3D%3D%20BS_NEED_MORE%20%7C%7C%20bstate%20%3D%3D%3D%20BS_FINISH_STARTED)%20%7B%0A%20%20%20%20%20%20if%20(strm.avail_out%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20s.last_flush%20%3D%20-1%3B%0A%20%20%20%20%20%20%20%20%2F*%20avoid%20BUF_ERROR%20next%20call%2C%20see%20above%20*%2F%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20return%20Z_OK%3B%0A%20%20%20%20%20%20%2F*%20If%20flush%20!%3D%20Z_NO_FLUSH%20%26%26%20avail_out%20%3D%3D%200%2C%20the%20next%20call%0A%20%20%20%20%20%20%20*%20of%20deflate%20should%20use%20the%20same%20flush%20parameter%20to%20make%20sure%0A%20%20%20%20%20%20%20*%20that%20the%20flush%20is%20complete.%20So%20we%20don't%20have%20to%20output%20an%0A%20%20%20%20%20%20%20*%20empty%20block%20here%2C%20this%20will%20be%20done%20at%20next%20call.%20This%20also%0A%20%20%20%20%20%20%20*%20ensures%20that%20for%20a%20very%20small%20output%20buffer%2C%20we%20emit%20at%20most%0A%20%20%20%20%20%20%20*%20one%20empty%20block.%0A%20%20%20%20%20%20%20*%2F%0A%20%20%20%20%7D%0A%20%20%20%20if%20(bstate%20%3D%3D%3D%20BS_BLOCK_DONE)%20%7B%0A%20%20%20%20%20%20if%20(flush%20%3D%3D%3D%20Z_PARTIAL_FLUSH)%20%7B%0A%20%20%20%20%20%20%20%20trees._tr_align(s)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20else%20if%20(flush%20!%3D%3D%20Z_BLOCK)%20%7B%20%2F*%20FULL_FLUSH%20or%20SYNC_FLUSH%20*%2F%0A%0A%20%20%20%20%20%20%20%20trees._tr_stored_block(s%2C%200%2C%200%2C%20false)%3B%0A%20%20%20%20%20%20%20%20%2F*%20For%20a%20full%20flush%2C%20this%20empty%20block%20will%20be%20recognized%0A%20%20%20%20%20%20%20%20%20*%20as%20a%20special%20marker%20by%20inflate_sync().%0A%20%20%20%20%20%20%20%20%20*%2F%0A%20%20%20%20%20%20%20%20if%20(flush%20%3D%3D%3D%20Z_FULL_FLUSH)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%2F***%20CLEAR_HASH(s)%3B%20***%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20forget%20history%20*%2F%0A%20%20%20%20%20%20%20%20%20%20zero(s.head)%3B%20%2F%2F%20Fill%20with%20NIL%20(%3D%200)%3B%0A%0A%20%20%20%20%20%20%20%20%20%20if%20(s.lookahead%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20s.strstart%20%3D%200%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20s.block_start%20%3D%200%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20s.insert%20%3D%200%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20flush_pending(strm)%3B%0A%20%20%20%20%20%20if%20(strm.avail_out%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20s.last_flush%20%3D%20-1%3B%20%2F*%20avoid%20BUF_ERROR%20at%20next%20call%2C%20see%20above%20*%2F%0A%20%20%20%20%20%20%20%20return%20Z_OK%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20%2F%2FAssert(strm-%3Eavail_out%20%3E%200%2C%20%22bug2%22)%3B%0A%20%20%2F%2Fif%20(strm.avail_out%20%3C%3D%200)%20%7B%20throw%20new%20Error(%22bug2%22)%3B%7D%0A%0A%20%20if%20(flush%20!%3D%3D%20Z_FINISH)%20%7B%20return%20Z_OK%3B%20%7D%0A%20%20if%20(s.wrap%20%3C%3D%200)%20%7B%20return%20Z_STREAM_END%3B%20%7D%0A%0A%20%20%2F*%20Write%20the%20trailer%20*%2F%0A%20%20if%20(s.wrap%20%3D%3D%3D%202)%20%7B%0A%20%20%20%20put_byte(s%2C%20strm.adler%20%26%200xff)%3B%0A%20%20%20%20put_byte(s%2C%20(strm.adler%20%3E%3E%208)%20%26%200xff)%3B%0A%20%20%20%20put_byte(s%2C%20(strm.adler%20%3E%3E%2016)%20%26%200xff)%3B%0A%20%20%20%20put_byte(s%2C%20(strm.adler%20%3E%3E%2024)%20%26%200xff)%3B%0A%20%20%20%20put_byte(s%2C%20strm.total_in%20%26%200xff)%3B%0A%20%20%20%20put_byte(s%2C%20(strm.total_in%20%3E%3E%208)%20%26%200xff)%3B%0A%20%20%20%20put_byte(s%2C%20(strm.total_in%20%3E%3E%2016)%20%26%200xff)%3B%0A%20%20%20%20put_byte(s%2C%20(strm.total_in%20%3E%3E%2024)%20%26%200xff)%3B%0A%20%20%7D%0A%20%20else%0A%20%20%7B%0A%20%20%20%20putShortMSB(s%2C%20strm.adler%20%3E%3E%3E%2016)%3B%0A%20%20%20%20putShortMSB(s%2C%20strm.adler%20%26%200xffff)%3B%0A%20%20%7D%0A%0A%20%20flush_pending(strm)%3B%0A%20%20%2F*%20If%20avail_out%20is%20zero%2C%20the%20application%20will%20call%20deflate%20again%0A%20%20%20*%20to%20flush%20the%20rest.%0A%20%20%20*%2F%0A%20%20if%20(s.wrap%20%3E%200)%20%7B%20s.wrap%20%3D%20-s.wrap%3B%20%7D%0A%20%20%2F*%20write%20the%20trailer%20only%20once!%20*%2F%0A%20%20return%20s.pending%20!%3D%3D%200%20%3F%20Z_OK%20%3A%20Z_STREAM_END%3B%0A%7D%0A%0Afunction%20deflateEnd(strm)%20%7B%0A%20%20var%20status%3B%0A%0A%20%20if%20(!strm%2F*%3D%3D%20Z_NULL*%2F%20%7C%7C%20!strm.state%2F*%3D%3D%20Z_NULL*%2F)%20%7B%0A%20%20%20%20return%20Z_STREAM_ERROR%3B%0A%20%20%7D%0A%0A%20%20status%20%3D%20strm.state.status%3B%0A%20%20if%20(status%20!%3D%3D%20INIT_STATE%20%26%26%0A%20%20%20%20status%20!%3D%3D%20EXTRA_STATE%20%26%26%0A%20%20%20%20status%20!%3D%3D%20NAME_STATE%20%26%26%0A%20%20%20%20status%20!%3D%3D%20COMMENT_STATE%20%26%26%0A%20%20%20%20status%20!%3D%3D%20HCRC_STATE%20%26%26%0A%20%20%20%20status%20!%3D%3D%20BUSY_STATE%20%26%26%0A%20%20%20%20status%20!%3D%3D%20FINISH_STATE%0A%20%20)%20%7B%0A%20%20%20%20return%20err(strm%2C%20Z_STREAM_ERROR)%3B%0A%20%20%7D%0A%0A%20%20strm.state%20%3D%20null%3B%0A%0A%20%20return%20status%20%3D%3D%3D%20BUSY_STATE%20%3F%20err(strm%2C%20Z_DATA_ERROR)%20%3A%20Z_OK%3B%0A%7D%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Copy%20the%20source%20state%20to%20the%20destination%20state%0A%20*%2F%0A%2F%2Ffunction%20deflateCopy(dest%2C%20source)%20%7B%0A%2F%2F%0A%2F%2F%7D%0A%0Aexports.deflateInit%20%3D%20deflateInit%3B%0Aexports.deflateInit2%20%3D%20deflateInit2%3B%0Aexports.deflateReset%20%3D%20deflateReset%3B%0Aexports.deflateResetKeep%20%3D%20deflateResetKeep%3B%0Aexports.deflateSetHeader%20%3D%20deflateSetHeader%3B%0Aexports.deflate%20%3D%20deflate%3B%0Aexports.deflateEnd%20%3D%20deflateEnd%3B%0Aexports.deflateInfo%20%3D%20'pako%20deflate%20(from%20Nodeca%20project)'%3B%0A%0A%2F*%20Not%20implemented%0Aexports.deflateBound%20%3D%20deflateBound%3B%0Aexports.deflateCopy%20%3D%20deflateCopy%3B%0Aexports.deflateSetDictionary%20%3D%20deflateSetDictionary%3B%0Aexports.deflateParams%20%3D%20deflateParams%3B%0Aexports.deflatePending%20%3D%20deflatePending%3B%0Aexports.deflatePrime%20%3D%20deflatePrime%3B%0Aexports.deflateTune%20%3D%20deflateTune%3B%0A*%2F%0A%0A%7D%2C%7B%22..%2Futils%2Fcommon%22%3A28%2C%22.%2Fadler32%22%3A30%2C%22.%2Fcrc32%22%3A32%2C%22.%2Fmessages%22%3A38%2C%22.%2Ftrees%22%3A39%7D%5D%2C34%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0A%0A%0Afunction%20GZheader()%20%7B%0A%20%20%2F*%20true%20if%20compressed%20data%20believed%20to%20be%20text%20*%2F%0A%20%20this.text%20%20%20%20%20%20%20%3D%200%3B%0A%20%20%2F*%20modification%20time%20*%2F%0A%20%20this.time%20%20%20%20%20%20%20%3D%200%3B%0A%20%20%2F*%20extra%20flags%20(not%20used%20when%20writing%20a%20gzip%20file)%20*%2F%0A%20%20this.xflags%20%20%20%20%20%3D%200%3B%0A%20%20%2F*%20operating%20system%20*%2F%0A%20%20this.os%20%20%20%20%20%20%20%20%20%3D%200%3B%0A%20%20%2F*%20pointer%20to%20extra%20field%20or%20Z_NULL%20if%20none%20*%2F%0A%20%20this.extra%20%20%20%20%20%20%3D%20null%3B%0A%20%20%2F*%20extra%20field%20length%20(valid%20if%20extra%20!%3D%20Z_NULL)%20*%2F%0A%20%20this.extra_len%20%20%3D%200%3B%20%2F%2F%20Actually%2C%20we%20don't%20need%20it%20in%20JS%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20but%20leave%20for%20few%20code%20modifications%0A%0A%20%20%2F%2F%0A%20%20%2F%2F%20Setup%20limits%20is%20not%20necessary%20because%20in%20js%20we%20should%20not%20preallocate%20memory%0A%20%20%2F%2F%20for%20inflate%20use%20constant%20limit%20in%2065536%20bytes%0A%20%20%2F%2F%0A%0A%20%20%2F*%20space%20at%20extra%20(only%20when%20reading%20header)%20*%2F%0A%20%20%2F%2F%20this.extra_max%20%20%3D%200%3B%0A%20%20%2F*%20pointer%20to%20zero-terminated%20file%20name%20or%20Z_NULL%20*%2F%0A%20%20this.name%20%20%20%20%20%20%20%3D%20''%3B%0A%20%20%2F*%20space%20at%20name%20(only%20when%20reading%20header)%20*%2F%0A%20%20%2F%2F%20this.name_max%20%20%20%3D%200%3B%0A%20%20%2F*%20pointer%20to%20zero-terminated%20comment%20or%20Z_NULL%20*%2F%0A%20%20this.comment%20%20%20%20%3D%20''%3B%0A%20%20%2F*%20space%20at%20comment%20(only%20when%20reading%20header)%20*%2F%0A%20%20%2F%2F%20this.comm_max%20%20%20%3D%200%3B%0A%20%20%2F*%20true%20if%20there%20was%20or%20will%20be%20a%20header%20crc%20*%2F%0A%20%20this.hcrc%20%20%20%20%20%20%20%3D%200%3B%0A%20%20%2F*%20true%20when%20done%20reading%20gzip%20header%20(not%20used%20when%20writing%20a%20gzip%20file)%20*%2F%0A%20%20this.done%20%20%20%20%20%20%20%3D%20false%3B%0A%7D%0A%0Amodule.exports%20%3D%20GZheader%3B%0A%0A%7D%2C%7B%7D%5D%2C35%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0A%0A%2F%2F%20See%20state%20defs%20from%20inflate.js%0Avar%20BAD%20%3D%2030%3B%20%20%20%20%20%20%20%2F*%20got%20a%20data%20error%20--%20remain%20here%20until%20reset%20*%2F%0Avar%20TYPE%20%3D%2012%3B%20%20%20%20%20%20%2F*%20i%3A%20waiting%20for%20type%20bits%2C%20including%20last-flag%20bit%20*%2F%0A%0A%2F*%0A%20%20%20Decode%20literal%2C%20length%2C%20and%20distance%20codes%20and%20write%20out%20the%20resulting%0A%20%20%20literal%20and%20match%20bytes%20until%20either%20not%20enough%20input%20or%20output%20is%0A%20%20%20available%2C%20an%20end-of-block%20is%20encountered%2C%20or%20a%20data%20error%20is%20encountered.%0A%20%20%20When%20large%20enough%20input%20and%20output%20buffers%20are%20supplied%20to%20inflate()%2C%20for%0A%20%20%20example%2C%20a%2016K%20input%20buffer%20and%20a%2064K%20output%20buffer%2C%20more%20than%2095%25%20of%20the%0A%20%20%20inflate%20execution%20time%20is%20spent%20in%20this%20routine.%0A%0A%20%20%20Entry%20assumptions%3A%0A%0A%20%20%20%20%20%20%20%20state.mode%20%3D%3D%3D%20LEN%0A%20%20%20%20%20%20%20%20strm.avail_in%20%3E%3D%206%0A%20%20%20%20%20%20%20%20strm.avail_out%20%3E%3D%20258%0A%20%20%20%20%20%20%20%20start%20%3E%3D%20strm.avail_out%0A%20%20%20%20%20%20%20%20state.bits%20%3C%208%0A%0A%20%20%20On%20return%2C%20state.mode%20is%20one%20of%3A%0A%0A%20%20%20%20%20%20%20%20LEN%20--%20ran%20out%20of%20enough%20output%20space%20or%20enough%20available%20input%0A%20%20%20%20%20%20%20%20TYPE%20--%20reached%20end%20of%20block%20code%2C%20inflate()%20to%20interpret%20next%20block%0A%20%20%20%20%20%20%20%20BAD%20--%20error%20in%20block%20data%0A%0A%20%20%20Notes%3A%0A%0A%20%20%20%20-%20The%20maximum%20input%20bits%20used%20by%20a%20length%2Fdistance%20pair%20is%2015%20bits%20for%20the%0A%20%20%20%20%20%20length%20code%2C%205%20bits%20for%20the%20length%20extra%2C%2015%20bits%20for%20the%20distance%20code%2C%0A%20%20%20%20%20%20and%2013%20bits%20for%20the%20distance%20extra.%20%20This%20totals%2048%20bits%2C%20or%20six%20bytes.%0A%20%20%20%20%20%20Therefore%20if%20strm.avail_in%20%3E%3D%206%2C%20then%20there%20is%20enough%20input%20to%20avoid%0A%20%20%20%20%20%20checking%20for%20available%20input%20while%20decoding.%0A%0A%20%20%20%20-%20The%20maximum%20bytes%20that%20a%20single%20length%2Fdistance%20pair%20can%20output%20is%20258%0A%20%20%20%20%20%20bytes%2C%20which%20is%20the%20maximum%20length%20that%20can%20be%20coded.%20%20inflate_fast()%0A%20%20%20%20%20%20requires%20strm.avail_out%20%3E%3D%20258%20for%20each%20loop%20to%20avoid%20checking%20for%0A%20%20%20%20%20%20output%20space.%0A%20*%2F%0Amodule.exports%20%3D%20function%20inflate_fast(strm%2C%20start)%20%7B%0A%20%20var%20state%3B%0A%20%20var%20_in%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20local%20strm.input%20*%2F%0A%20%20var%20last%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20have%20enough%20input%20while%20in%20%3C%20last%20*%2F%0A%20%20var%20_out%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20local%20strm.output%20*%2F%0A%20%20var%20beg%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20inflate()'s%20initial%20strm.output%20*%2F%0A%20%20var%20end%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20while%20out%20%3C%20end%2C%20enough%20space%20available%20*%2F%0A%2F%2F%23ifdef%20INFLATE_STRICT%0A%20%20var%20dmax%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20maximum%20distance%20from%20zlib%20header%20*%2F%0A%2F%2F%23endif%0A%20%20var%20wsize%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20window%20size%20or%20zero%20if%20not%20using%20window%20*%2F%0A%20%20var%20whave%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20valid%20bytes%20in%20the%20window%20*%2F%0A%20%20var%20wnext%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20window%20write%20index%20*%2F%0A%20%20%2F%2F%20Use%20%60s_window%60%20instead%20%60window%60%2C%20avoid%20conflict%20with%20instrumentation%20tools%0A%20%20var%20s_window%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20allocated%20sliding%20window%2C%20if%20wsize%20!%3D%200%20*%2F%0A%20%20var%20hold%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20local%20strm.hold%20*%2F%0A%20%20var%20bits%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20local%20strm.bits%20*%2F%0A%20%20var%20lcode%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20local%20strm.lencode%20*%2F%0A%20%20var%20dcode%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20local%20strm.distcode%20*%2F%0A%20%20var%20lmask%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20mask%20for%20first%20level%20of%20length%20codes%20*%2F%0A%20%20var%20dmask%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20mask%20for%20first%20level%20of%20distance%20codes%20*%2F%0A%20%20var%20here%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20retrieved%20table%20entry%20*%2F%0A%20%20var%20op%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20code%20bits%2C%20operation%2C%20extra%20bits%2C%20or%20*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20%20window%20position%2C%20window%20bytes%20to%20copy%20*%2F%0A%20%20var%20len%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20match%20length%2C%20unused%20bytes%20*%2F%0A%20%20var%20dist%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20match%20distance%20*%2F%0A%20%20var%20from%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20where%20to%20copy%20match%20from%20*%2F%0A%20%20var%20from_source%3B%0A%0A%0A%20%20var%20input%2C%20output%3B%20%2F%2F%20JS%20specific%2C%20because%20we%20have%20no%20pointers%0A%0A%20%20%2F*%20copy%20state%20to%20local%20variables%20*%2F%0A%20%20state%20%3D%20strm.state%3B%0A%20%20%2F%2Fhere%20%3D%20state.here%3B%0A%20%20_in%20%3D%20strm.next_in%3B%0A%20%20input%20%3D%20strm.input%3B%0A%20%20last%20%3D%20_in%20%2B%20(strm.avail_in%20-%205)%3B%0A%20%20_out%20%3D%20strm.next_out%3B%0A%20%20output%20%3D%20strm.output%3B%0A%20%20beg%20%3D%20_out%20-%20(start%20-%20strm.avail_out)%3B%0A%20%20end%20%3D%20_out%20%2B%20(strm.avail_out%20-%20257)%3B%0A%2F%2F%23ifdef%20INFLATE_STRICT%0A%20%20dmax%20%3D%20state.dmax%3B%0A%2F%2F%23endif%0A%20%20wsize%20%3D%20state.wsize%3B%0A%20%20whave%20%3D%20state.whave%3B%0A%20%20wnext%20%3D%20state.wnext%3B%0A%20%20s_window%20%3D%20state.window%3B%0A%20%20hold%20%3D%20state.hold%3B%0A%20%20bits%20%3D%20state.bits%3B%0A%20%20lcode%20%3D%20state.lencode%3B%0A%20%20dcode%20%3D%20state.distcode%3B%0A%20%20lmask%20%3D%20(1%20%3C%3C%20state.lenbits)%20-%201%3B%0A%20%20dmask%20%3D%20(1%20%3C%3C%20state.distbits)%20-%201%3B%0A%0A%0A%20%20%2F*%20decode%20literals%20and%20length%2Fdistances%20until%20end-of-block%20or%20not%20enough%0A%20%20%20%20%20input%20data%20or%20output%20space%20*%2F%0A%0A%20%20top%3A%0A%20%20do%20%7B%0A%20%20%20%20if%20(bits%20%3C%2015)%20%7B%0A%20%20%20%20%20%20hold%20%2B%3D%20input%5B_in%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20hold%20%2B%3D%20input%5B_in%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20here%20%3D%20lcode%5Bhold%20%26%20lmask%5D%3B%0A%0A%20%20%20%20dolen%3A%0A%20%20%20%20for%20(%3B%3B)%20%7B%20%2F%2F%20Goto%20emulation%0A%20%20%20%20%20%20op%20%3D%20here%20%3E%3E%3E%2024%2F*here.bits*%2F%3B%0A%20%20%20%20%20%20hold%20%3E%3E%3E%3D%20op%3B%0A%20%20%20%20%20%20bits%20-%3D%20op%3B%0A%20%20%20%20%20%20op%20%3D%20(here%20%3E%3E%3E%2016)%20%26%200xff%2F*here.op*%2F%3B%0A%20%20%20%20%20%20if%20(op%20%3D%3D%3D%200)%20%7B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20literal%20*%2F%0A%20%20%20%20%20%20%20%20%2F%2FTracevv((stderr%2C%20here.val%20%3E%3D%200x20%20%26%26%20here.val%20%3C%200x7f%20%3F%0A%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20%22inflate%3A%20%20%20%20%20%20%20%20%20literal%20'%25c'%5Cn%22%20%3A%0A%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20%22inflate%3A%20%20%20%20%20%20%20%20%20literal%200x%2502x%5Cn%22%2C%20here.val))%3B%0A%20%20%20%20%20%20%20%20output%5B_out%2B%2B%5D%20%3D%20here%20%26%200xffff%2F*here.val*%2F%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20else%20if%20(op%20%26%2016)%20%7B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20length%20base%20*%2F%0A%20%20%20%20%20%20%20%20len%20%3D%20here%20%26%200xffff%2F*here.val*%2F%3B%0A%20%20%20%20%20%20%20%20op%20%26%3D%2015%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20number%20of%20extra%20bits%20*%2F%0A%20%20%20%20%20%20%20%20if%20(op)%20%7B%0A%20%20%20%20%20%20%20%20%20%20if%20(bits%20%3C%20op)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5B_in%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20len%20%2B%3D%20hold%20%26%20((1%20%3C%3C%20op)%20-%201)%3B%0A%20%20%20%20%20%20%20%20%20%20hold%20%3E%3E%3E%3D%20op%3B%0A%20%20%20%20%20%20%20%20%20%20bits%20-%3D%20op%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%2F%2FTracevv((stderr%2C%20%22inflate%3A%20%20%20%20%20%20%20%20%20length%20%25u%5Cn%22%2C%20len))%3B%0A%20%20%20%20%20%20%20%20if%20(bits%20%3C%2015)%20%7B%0A%20%20%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5B_in%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5B_in%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20here%20%3D%20dcode%5Bhold%20%26%20dmask%5D%3B%0A%0A%20%20%20%20%20%20%20%20dodist%3A%0A%20%20%20%20%20%20%20%20for%20(%3B%3B)%20%7B%20%2F%2F%20goto%20emulation%0A%20%20%20%20%20%20%20%20%20%20op%20%3D%20here%20%3E%3E%3E%2024%2F*here.bits*%2F%3B%0A%20%20%20%20%20%20%20%20%20%20hold%20%3E%3E%3E%3D%20op%3B%0A%20%20%20%20%20%20%20%20%20%20bits%20-%3D%20op%3B%0A%20%20%20%20%20%20%20%20%20%20op%20%3D%20(here%20%3E%3E%3E%2016)%20%26%200xff%2F*here.op*%2F%3B%0A%0A%20%20%20%20%20%20%20%20%20%20if%20(op%20%26%2016)%20%7B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20distance%20base%20*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20dist%20%3D%20here%20%26%200xffff%2F*here.val*%2F%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20op%20%26%3D%2015%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20number%20of%20extra%20bits%20*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(bits%20%3C%20op)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5B_in%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(bits%20%3C%20op)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5B_in%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20dist%20%2B%3D%20hold%20%26%20((1%20%3C%3C%20op)%20-%201)%3B%0A%2F%2F%23ifdef%20INFLATE_STRICT%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(dist%20%3E%20dmax)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20strm.msg%20%3D%20'invalid%20distance%20too%20far%20back'%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20break%20top%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%2F%2F%23endif%0A%20%20%20%20%20%20%20%20%20%20%20%20hold%20%3E%3E%3E%3D%20op%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20bits%20-%3D%20op%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2FTracevv((stderr%2C%20%22inflate%3A%20%20%20%20%20%20%20%20%20distance%20%25u%5Cn%22%2C%20dist))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20op%20%3D%20_out%20-%20beg%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20max%20distance%20in%20output%20*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(dist%20%3E%20op)%20%7B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20see%20if%20copy%20from%20window%20*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20op%20%3D%20dist%20-%20op%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20distance%20back%20in%20window%20*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(op%20%3E%20whave)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(state.sane)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20strm.msg%20%3D%20'invalid%20distance%20too%20far%20back'%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20break%20top%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%0A%2F%2F%20(!)%20This%20block%20is%20disabled%20in%20zlib%20defailts%2C%0A%2F%2F%20don't%20enable%20it%20for%20binary%20compatibility%0A%2F%2F%23ifdef%20INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR%0A%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(len%20%3C%3D%20op%20-%20whave)%20%7B%0A%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20do%20%7B%0A%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20output%5B_out%2B%2B%5D%20%3D%200%3B%0A%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%20while%20(--len)%3B%0A%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20continue%20top%3B%0A%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20len%20-%3D%20op%20-%20whave%3B%0A%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20do%20%7B%0A%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20output%5B_out%2B%2B%5D%20%3D%200%3B%0A%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%20while%20(--op%20%3E%20whave)%3B%0A%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(op%20%3D%3D%3D%200)%20%7B%0A%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20from%20%3D%20_out%20-%20dist%3B%0A%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20do%20%7B%0A%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20output%5B_out%2B%2B%5D%20%3D%20output%5Bfrom%2B%2B%5D%3B%0A%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%20while%20(--len)%3B%0A%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20continue%20top%3B%0A%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%2F%2F%23endif%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20from%20%3D%200%3B%20%2F%2F%20window%20index%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20from_source%20%3D%20s_window%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(wnext%20%3D%3D%3D%200)%20%7B%20%20%20%20%20%20%20%20%20%20%20%2F*%20very%20common%20case%20*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20from%20%2B%3D%20wsize%20-%20op%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(op%20%3C%20len)%20%7B%20%20%20%20%20%20%20%20%20%2F*%20some%20from%20window%20*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20len%20-%3D%20op%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20do%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20output%5B_out%2B%2B%5D%20%3D%20s_window%5Bfrom%2B%2B%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%20while%20(--op)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20from%20%3D%20_out%20-%20dist%3B%20%20%2F*%20rest%20from%20output%20*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20from_source%20%3D%20output%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20else%20if%20(wnext%20%3C%20op)%20%7B%20%20%20%20%20%20%2F*%20wrap%20around%20window%20*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20from%20%2B%3D%20wsize%20%2B%20wnext%20-%20op%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20op%20-%3D%20wnext%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(op%20%3C%20len)%20%7B%20%20%20%20%20%20%20%20%20%2F*%20some%20from%20end%20of%20window%20*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20len%20-%3D%20op%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20do%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20output%5B_out%2B%2B%5D%20%3D%20s_window%5Bfrom%2B%2B%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%20while%20(--op)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20from%20%3D%200%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(wnext%20%3C%20len)%20%7B%20%20%2F*%20some%20from%20start%20of%20window%20*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20op%20%3D%20wnext%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20len%20-%3D%20op%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20do%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20output%5B_out%2B%2B%5D%20%3D%20s_window%5Bfrom%2B%2B%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%20while%20(--op)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20from%20%3D%20_out%20-%20dist%3B%20%20%20%20%20%20%2F*%20rest%20from%20output%20*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20from_source%20%3D%20output%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20else%20%7B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20contiguous%20in%20window%20*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20from%20%2B%3D%20wnext%20-%20op%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(op%20%3C%20len)%20%7B%20%20%20%20%20%20%20%20%20%2F*%20some%20from%20window%20*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20len%20-%3D%20op%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20do%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20output%5B_out%2B%2B%5D%20%3D%20s_window%5Bfrom%2B%2B%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%20while%20(--op)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20from%20%3D%20_out%20-%20dist%3B%20%20%2F*%20rest%20from%20output%20*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20from_source%20%3D%20output%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20while%20(len%20%3E%202)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20output%5B_out%2B%2B%5D%20%3D%20from_source%5Bfrom%2B%2B%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20output%5B_out%2B%2B%5D%20%3D%20from_source%5Bfrom%2B%2B%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20output%5B_out%2B%2B%5D%20%3D%20from_source%5Bfrom%2B%2B%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20len%20-%3D%203%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(len)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20output%5B_out%2B%2B%5D%20%3D%20from_source%5Bfrom%2B%2B%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(len%20%3E%201)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20output%5B_out%2B%2B%5D%20%3D%20from_source%5Bfrom%2B%2B%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20from%20%3D%20_out%20-%20dist%3B%20%20%20%20%20%20%20%20%20%20%2F*%20copy%20direct%20from%20output%20*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20do%20%7B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20minimum%20length%20is%20three%20*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20output%5B_out%2B%2B%5D%20%3D%20output%5Bfrom%2B%2B%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20output%5B_out%2B%2B%5D%20%3D%20output%5Bfrom%2B%2B%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20output%5B_out%2B%2B%5D%20%3D%20output%5Bfrom%2B%2B%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20len%20-%3D%203%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%20while%20(len%20%3E%202)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(len)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20output%5B_out%2B%2B%5D%20%3D%20output%5Bfrom%2B%2B%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(len%20%3E%201)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20output%5B_out%2B%2B%5D%20%3D%20output%5Bfrom%2B%2B%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20else%20if%20((op%20%26%2064)%20%3D%3D%3D%200)%20%7B%20%20%20%20%20%20%20%20%20%20%2F*%202nd%20level%20distance%20code%20*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20here%20%3D%20dcode%5B(here%20%26%200xffff)%2F*here.val*%2F%20%2B%20(hold%20%26%20((1%20%3C%3C%20op)%20-%201))%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20continue%20dodist%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20strm.msg%20%3D%20'invalid%20distance%20code'%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20break%20top%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%20%20break%3B%20%2F%2F%20need%20to%20emulate%20goto%20via%20%22continue%22%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20else%20if%20((op%20%26%2064)%20%3D%3D%3D%200)%20%7B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%202nd%20level%20length%20code%20*%2F%0A%20%20%20%20%20%20%20%20here%20%3D%20lcode%5B(here%20%26%200xffff)%2F*here.val*%2F%20%2B%20(hold%20%26%20((1%20%3C%3C%20op)%20-%201))%5D%3B%0A%20%20%20%20%20%20%20%20continue%20dolen%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20else%20if%20(op%20%26%2032)%20%7B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20end-of-block%20*%2F%0A%20%20%20%20%20%20%20%20%2F%2FTracevv((stderr%2C%20%22inflate%3A%20%20%20%20%20%20%20%20%20end%20of%20block%5Cn%22))%3B%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20TYPE%3B%0A%20%20%20%20%20%20%20%20break%20top%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20else%20%7B%0A%20%20%20%20%20%20%20%20strm.msg%20%3D%20'invalid%20literal%2Flength%20code'%3B%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20break%20top%3B%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20break%3B%20%2F%2F%20need%20to%20emulate%20goto%20via%20%22continue%22%0A%20%20%20%20%7D%0A%20%20%7D%20while%20(_in%20%3C%20last%20%26%26%20_out%20%3C%20end)%3B%0A%0A%20%20%2F*%20return%20unused%20bytes%20(on%20entry%2C%20bits%20%3C%208%2C%20so%20in%20won't%20go%20too%20far%20back)%20*%2F%0A%20%20len%20%3D%20bits%20%3E%3E%203%3B%0A%20%20_in%20-%3D%20len%3B%0A%20%20bits%20-%3D%20len%20%3C%3C%203%3B%0A%20%20hold%20%26%3D%20(1%20%3C%3C%20bits)%20-%201%3B%0A%0A%20%20%2F*%20update%20state%20and%20return%20*%2F%0A%20%20strm.next_in%20%3D%20_in%3B%0A%20%20strm.next_out%20%3D%20_out%3B%0A%20%20strm.avail_in%20%3D%20(_in%20%3C%20last%20%3F%205%20%2B%20(last%20-%20_in)%20%3A%205%20-%20(_in%20-%20last))%3B%0A%20%20strm.avail_out%20%3D%20(_out%20%3C%20end%20%3F%20257%20%2B%20(end%20-%20_out)%20%3A%20257%20-%20(_out%20-%20end))%3B%0A%20%20state.hold%20%3D%20hold%3B%0A%20%20state.bits%20%3D%20bits%3B%0A%20%20return%3B%0A%7D%3B%0A%0A%7D%2C%7B%7D%5D%2C36%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0A%0A%0Avar%20utils%20%20%20%20%20%20%20%20%20%3D%20require('..%2Futils%2Fcommon')%3B%0Avar%20adler32%20%20%20%20%20%20%20%3D%20require('.%2Fadler32')%3B%0Avar%20crc32%20%20%20%20%20%20%20%20%20%3D%20require('.%2Fcrc32')%3B%0Avar%20inflate_fast%20%20%3D%20require('.%2Finffast')%3B%0Avar%20inflate_table%20%3D%20require('.%2Finftrees')%3B%0A%0Avar%20CODES%20%3D%200%3B%0Avar%20LENS%20%3D%201%3B%0Avar%20DISTS%20%3D%202%3B%0A%0A%2F*%20Public%20constants%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D*%2F%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D*%2F%0A%0A%0A%2F*%20Allowed%20flush%20values%3B%20see%20deflate()%20and%20inflate()%20below%20for%20details%20*%2F%0A%2F%2Fvar%20Z_NO_FLUSH%20%20%20%20%20%20%3D%200%3B%0A%2F%2Fvar%20Z_PARTIAL_FLUSH%20%3D%201%3B%0A%2F%2Fvar%20Z_SYNC_FLUSH%20%20%20%20%3D%202%3B%0A%2F%2Fvar%20Z_FULL_FLUSH%20%20%20%20%3D%203%3B%0Avar%20Z_FINISH%20%20%20%20%20%20%20%20%3D%204%3B%0Avar%20Z_BLOCK%20%20%20%20%20%20%20%20%20%3D%205%3B%0Avar%20Z_TREES%20%20%20%20%20%20%20%20%20%3D%206%3B%0A%0A%0A%2F*%20Return%20codes%20for%20the%20compression%2Fdecompression%20functions.%20Negative%20values%0A%20*%20are%20errors%2C%20positive%20values%20are%20used%20for%20special%20but%20normal%20events.%0A%20*%2F%0Avar%20Z_OK%20%20%20%20%20%20%20%20%20%20%20%20%3D%200%3B%0Avar%20Z_STREAM_END%20%20%20%20%3D%201%3B%0Avar%20Z_NEED_DICT%20%20%20%20%20%3D%202%3B%0A%2F%2Fvar%20Z_ERRNO%20%20%20%20%20%20%20%20%20%3D%20-1%3B%0Avar%20Z_STREAM_ERROR%20%20%3D%20-2%3B%0Avar%20Z_DATA_ERROR%20%20%20%20%3D%20-3%3B%0Avar%20Z_MEM_ERROR%20%20%20%20%20%3D%20-4%3B%0Avar%20Z_BUF_ERROR%20%20%20%20%20%3D%20-5%3B%0A%2F%2Fvar%20Z_VERSION_ERROR%20%3D%20-6%3B%0A%0A%2F*%20The%20deflate%20compression%20method%20*%2F%0Avar%20Z_DEFLATED%20%20%3D%208%3B%0A%0A%0A%2F*%20STATES%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D*%2F%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D*%2F%0A%0A%0Avar%20%20%20%20HEAD%20%3D%201%3B%20%20%20%20%20%20%20%2F*%20i%3A%20waiting%20for%20magic%20header%20*%2F%0Avar%20%20%20%20FLAGS%20%3D%202%3B%20%20%20%20%20%20%2F*%20i%3A%20waiting%20for%20method%20and%20flags%20(gzip)%20*%2F%0Avar%20%20%20%20TIME%20%3D%203%3B%20%20%20%20%20%20%20%2F*%20i%3A%20waiting%20for%20modification%20time%20(gzip)%20*%2F%0Avar%20%20%20%20OS%20%3D%204%3B%20%20%20%20%20%20%20%20%20%2F*%20i%3A%20waiting%20for%20extra%20flags%20and%20operating%20system%20(gzip)%20*%2F%0Avar%20%20%20%20EXLEN%20%3D%205%3B%20%20%20%20%20%20%2F*%20i%3A%20waiting%20for%20extra%20length%20(gzip)%20*%2F%0Avar%20%20%20%20EXTRA%20%3D%206%3B%20%20%20%20%20%20%2F*%20i%3A%20waiting%20for%20extra%20bytes%20(gzip)%20*%2F%0Avar%20%20%20%20NAME%20%3D%207%3B%20%20%20%20%20%20%20%2F*%20i%3A%20waiting%20for%20end%20of%20file%20name%20(gzip)%20*%2F%0Avar%20%20%20%20COMMENT%20%3D%208%3B%20%20%20%20%2F*%20i%3A%20waiting%20for%20end%20of%20comment%20(gzip)%20*%2F%0Avar%20%20%20%20HCRC%20%3D%209%3B%20%20%20%20%20%20%20%2F*%20i%3A%20waiting%20for%20header%20crc%20(gzip)%20*%2F%0Avar%20%20%20%20DICTID%20%3D%2010%3B%20%20%20%20%2F*%20i%3A%20waiting%20for%20dictionary%20check%20value%20*%2F%0Avar%20%20%20%20DICT%20%3D%2011%3B%20%20%20%20%20%20%2F*%20waiting%20for%20inflateSetDictionary()%20call%20*%2F%0Avar%20%20%20%20%20%20%20%20TYPE%20%3D%2012%3B%20%20%20%20%20%20%2F*%20i%3A%20waiting%20for%20type%20bits%2C%20including%20last-flag%20bit%20*%2F%0Avar%20%20%20%20%20%20%20%20TYPEDO%20%3D%2013%3B%20%20%20%20%2F*%20i%3A%20same%2C%20but%20skip%20check%20to%20exit%20inflate%20on%20new%20block%20*%2F%0Avar%20%20%20%20%20%20%20%20STORED%20%3D%2014%3B%20%20%20%20%2F*%20i%3A%20waiting%20for%20stored%20size%20(length%20and%20complement)%20*%2F%0Avar%20%20%20%20%20%20%20%20COPY_%20%3D%2015%3B%20%20%20%20%20%2F*%20i%2Fo%3A%20same%20as%20COPY%20below%2C%20but%20only%20first%20time%20in%20*%2F%0Avar%20%20%20%20%20%20%20%20COPY%20%3D%2016%3B%20%20%20%20%20%20%2F*%20i%2Fo%3A%20waiting%20for%20input%20or%20output%20to%20copy%20stored%20block%20*%2F%0Avar%20%20%20%20%20%20%20%20TABLE%20%3D%2017%3B%20%20%20%20%20%2F*%20i%3A%20waiting%20for%20dynamic%20block%20table%20lengths%20*%2F%0Avar%20%20%20%20%20%20%20%20LENLENS%20%3D%2018%3B%20%20%20%2F*%20i%3A%20waiting%20for%20code%20length%20code%20lengths%20*%2F%0Avar%20%20%20%20%20%20%20%20CODELENS%20%3D%2019%3B%20%20%2F*%20i%3A%20waiting%20for%20length%2Flit%20and%20distance%20code%20lengths%20*%2F%0Avar%20%20%20%20%20%20%20%20%20%20%20%20LEN_%20%3D%2020%3B%20%20%20%20%20%20%2F*%20i%3A%20same%20as%20LEN%20below%2C%20but%20only%20first%20time%20in%20*%2F%0Avar%20%20%20%20%20%20%20%20%20%20%20%20LEN%20%3D%2021%3B%20%20%20%20%20%20%20%2F*%20i%3A%20waiting%20for%20length%2Flit%2Feob%20code%20*%2F%0Avar%20%20%20%20%20%20%20%20%20%20%20%20LENEXT%20%3D%2022%3B%20%20%20%20%2F*%20i%3A%20waiting%20for%20length%20extra%20bits%20*%2F%0Avar%20%20%20%20%20%20%20%20%20%20%20%20DIST%20%3D%2023%3B%20%20%20%20%20%20%2F*%20i%3A%20waiting%20for%20distance%20code%20*%2F%0Avar%20%20%20%20%20%20%20%20%20%20%20%20DISTEXT%20%3D%2024%3B%20%20%20%2F*%20i%3A%20waiting%20for%20distance%20extra%20bits%20*%2F%0Avar%20%20%20%20%20%20%20%20%20%20%20%20MATCH%20%3D%2025%3B%20%20%20%20%20%2F*%20o%3A%20waiting%20for%20output%20space%20to%20copy%20string%20*%2F%0Avar%20%20%20%20%20%20%20%20%20%20%20%20LIT%20%3D%2026%3B%20%20%20%20%20%20%20%2F*%20o%3A%20waiting%20for%20output%20space%20to%20write%20literal%20*%2F%0Avar%20%20%20%20CHECK%20%3D%2027%3B%20%20%20%20%20%2F*%20i%3A%20waiting%20for%2032-bit%20check%20value%20*%2F%0Avar%20%20%20%20LENGTH%20%3D%2028%3B%20%20%20%20%2F*%20i%3A%20waiting%20for%2032-bit%20length%20(gzip)%20*%2F%0Avar%20%20%20%20DONE%20%3D%2029%3B%20%20%20%20%20%20%2F*%20finished%20check%2C%20done%20--%20remain%20here%20until%20reset%20*%2F%0Avar%20%20%20%20BAD%20%3D%2030%3B%20%20%20%20%20%20%20%2F*%20got%20a%20data%20error%20--%20remain%20here%20until%20reset%20*%2F%0Avar%20%20%20%20MEM%20%3D%2031%3B%20%20%20%20%20%20%20%2F*%20got%20an%20inflate()%20memory%20error%20--%20remain%20here%20until%20reset%20*%2F%0Avar%20%20%20%20SYNC%20%3D%2032%3B%20%20%20%20%20%20%2F*%20looking%20for%20synchronization%20bytes%20to%20restart%20inflate()%20*%2F%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D*%2F%0A%0A%0A%0Avar%20ENOUGH_LENS%20%3D%20852%3B%0Avar%20ENOUGH_DISTS%20%3D%20592%3B%0A%2F%2Fvar%20ENOUGH%20%3D%20%20(ENOUGH_LENS%2BENOUGH_DISTS)%3B%0A%0Avar%20MAX_WBITS%20%3D%2015%3B%0A%2F*%2032K%20LZ77%20window%20*%2F%0Avar%20DEF_WBITS%20%3D%20MAX_WBITS%3B%0A%0A%0Afunction%20zswap32(q)%20%7B%0A%20%20return%20%20(((q%20%3E%3E%3E%2024)%20%26%200xff)%20%2B%0A%20%20%20%20%20%20%20%20%20%20((q%20%3E%3E%3E%208)%20%26%200xff00)%20%2B%0A%20%20%20%20%20%20%20%20%20%20((q%20%26%200xff00)%20%3C%3C%208)%20%2B%0A%20%20%20%20%20%20%20%20%20%20((q%20%26%200xff)%20%3C%3C%2024))%3B%0A%7D%0A%0A%0Afunction%20InflateState()%20%7B%0A%20%20this.mode%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20current%20inflate%20mode%20*%2F%0A%20%20this.last%20%3D%20false%3B%20%20%20%20%20%20%20%20%20%20%2F*%20true%20if%20processing%20last%20block%20*%2F%0A%20%20this.wrap%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20bit%200%20true%20for%20zlib%2C%20bit%201%20true%20for%20gzip%20*%2F%0A%20%20this.havedict%20%3D%20false%3B%20%20%20%20%20%20%2F*%20true%20if%20dictionary%20provided%20*%2F%0A%20%20this.flags%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20gzip%20header%20method%20and%20flags%20(0%20if%20zlib)%20*%2F%0A%20%20this.dmax%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20zlib%20header%20max%20distance%20(INFLATE_STRICT)%20*%2F%0A%20%20this.check%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20protected%20copy%20of%20check%20value%20*%2F%0A%20%20this.total%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20protected%20copy%20of%20output%20count%20*%2F%0A%20%20%2F%2F%20TODO%3A%20may%20be%20%7B%7D%0A%20%20this.head%20%3D%20null%3B%20%20%20%20%20%20%20%20%20%20%20%2F*%20where%20to%20save%20gzip%20header%20information%20*%2F%0A%0A%20%20%2F*%20sliding%20window%20*%2F%0A%20%20this.wbits%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20log%20base%202%20of%20requested%20window%20size%20*%2F%0A%20%20this.wsize%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20window%20size%20or%20zero%20if%20not%20using%20window%20*%2F%0A%20%20this.whave%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20valid%20bytes%20in%20the%20window%20*%2F%0A%20%20this.wnext%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20window%20write%20index%20*%2F%0A%20%20this.window%20%3D%20null%3B%20%20%20%20%20%20%20%20%20%2F*%20allocated%20sliding%20window%2C%20if%20needed%20*%2F%0A%0A%20%20%2F*%20bit%20accumulator%20*%2F%0A%20%20this.hold%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20input%20bit%20accumulator%20*%2F%0A%20%20this.bits%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20number%20of%20bits%20in%20%22in%22%20*%2F%0A%0A%20%20%2F*%20for%20string%20and%20stored%20block%20copying%20*%2F%0A%20%20this.length%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20literal%20or%20length%20of%20data%20to%20copy%20*%2F%0A%20%20this.offset%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20distance%20back%20to%20copy%20string%20from%20*%2F%0A%0A%20%20%2F*%20for%20table%20and%20code%20decoding%20*%2F%0A%20%20this.extra%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20extra%20bits%20needed%20*%2F%0A%0A%20%20%2F*%20fixed%20and%20dynamic%20code%20tables%20*%2F%0A%20%20this.lencode%20%3D%20null%3B%20%20%20%20%20%20%20%20%20%20%2F*%20starting%20table%20for%20length%2Fliteral%20codes%20*%2F%0A%20%20this.distcode%20%3D%20null%3B%20%20%20%20%20%20%20%20%20%2F*%20starting%20table%20for%20distance%20codes%20*%2F%0A%20%20this.lenbits%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%2F*%20index%20bits%20for%20lencode%20*%2F%0A%20%20this.distbits%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%2F*%20index%20bits%20for%20distcode%20*%2F%0A%0A%20%20%2F*%20dynamic%20table%20building%20*%2F%0A%20%20this.ncode%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20number%20of%20code%20length%20code%20lengths%20*%2F%0A%20%20this.nlen%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20number%20of%20length%20code%20lengths%20*%2F%0A%20%20this.ndist%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20number%20of%20distance%20code%20lengths%20*%2F%0A%20%20this.have%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20number%20of%20code%20lengths%20in%20lens%5B%5D%20*%2F%0A%20%20this.next%20%3D%20null%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20next%20available%20space%20in%20codes%5B%5D%20*%2F%0A%0A%20%20this.lens%20%3D%20new%20utils.Buf16(320)%3B%20%2F*%20temporary%20storage%20for%20code%20lengths%20*%2F%0A%20%20this.work%20%3D%20new%20utils.Buf16(288)%3B%20%2F*%20work%20area%20for%20code%20table%20building%20*%2F%0A%0A%20%20%2F*%0A%20%20%20because%20we%20don't%20have%20pointers%20in%20js%2C%20we%20use%20lencode%20and%20distcode%20directly%0A%20%20%20as%20buffers%20so%20we%20don't%20need%20codes%0A%20%20*%2F%0A%20%20%2F%2Fthis.codes%20%3D%20new%20utils.Buf32(ENOUGH)%3B%20%20%20%20%20%20%20%2F*%20space%20for%20code%20tables%20*%2F%0A%20%20this.lendyn%20%3D%20null%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20dynamic%20table%20for%20length%2Fliteral%20codes%20(JS%20specific)%20*%2F%0A%20%20this.distdyn%20%3D%20null%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20dynamic%20table%20for%20distance%20codes%20(JS%20specific)%20*%2F%0A%20%20this.sane%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20if%20false%2C%20allow%20invalid%20distance%20too%20far%20*%2F%0A%20%20this.back%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20bits%20back%20of%20last%20unprocessed%20length%2Flit%20*%2F%0A%20%20this.was%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20initial%20length%20of%20match%20*%2F%0A%7D%0A%0Afunction%20inflateResetKeep(strm)%20%7B%0A%20%20var%20state%3B%0A%0A%20%20if%20(!strm%20%7C%7C%20!strm.state)%20%7B%20return%20Z_STREAM_ERROR%3B%20%7D%0A%20%20state%20%3D%20strm.state%3B%0A%20%20strm.total_in%20%3D%20strm.total_out%20%3D%20state.total%20%3D%200%3B%0A%20%20strm.msg%20%3D%20''%3B%20%2F*Z_NULL*%2F%0A%20%20if%20(state.wrap)%20%7B%20%20%20%20%20%20%20%2F*%20to%20support%20ill-conceived%20Java%20test%20suite%20*%2F%0A%20%20%20%20strm.adler%20%3D%20state.wrap%20%26%201%3B%0A%20%20%7D%0A%20%20state.mode%20%3D%20HEAD%3B%0A%20%20state.last%20%3D%200%3B%0A%20%20state.havedict%20%3D%200%3B%0A%20%20state.dmax%20%3D%2032768%3B%0A%20%20state.head%20%3D%20null%2F*Z_NULL*%2F%3B%0A%20%20state.hold%20%3D%200%3B%0A%20%20state.bits%20%3D%200%3B%0A%20%20%2F%2Fstate.lencode%20%3D%20state.distcode%20%3D%20state.next%20%3D%20state.codes%3B%0A%20%20state.lencode%20%3D%20state.lendyn%20%3D%20new%20utils.Buf32(ENOUGH_LENS)%3B%0A%20%20state.distcode%20%3D%20state.distdyn%20%3D%20new%20utils.Buf32(ENOUGH_DISTS)%3B%0A%0A%20%20state.sane%20%3D%201%3B%0A%20%20state.back%20%3D%20-1%3B%0A%20%20%2F%2FTracev((stderr%2C%20%22inflate%3A%20reset%5Cn%22))%3B%0A%20%20return%20Z_OK%3B%0A%7D%0A%0Afunction%20inflateReset(strm)%20%7B%0A%20%20var%20state%3B%0A%0A%20%20if%20(!strm%20%7C%7C%20!strm.state)%20%7B%20return%20Z_STREAM_ERROR%3B%20%7D%0A%20%20state%20%3D%20strm.state%3B%0A%20%20state.wsize%20%3D%200%3B%0A%20%20state.whave%20%3D%200%3B%0A%20%20state.wnext%20%3D%200%3B%0A%20%20return%20inflateResetKeep(strm)%3B%0A%0A%7D%0A%0Afunction%20inflateReset2(strm%2C%20windowBits)%20%7B%0A%20%20var%20wrap%3B%0A%20%20var%20state%3B%0A%0A%20%20%2F*%20get%20the%20state%20*%2F%0A%20%20if%20(!strm%20%7C%7C%20!strm.state)%20%7B%20return%20Z_STREAM_ERROR%3B%20%7D%0A%20%20state%20%3D%20strm.state%3B%0A%0A%20%20%2F*%20extract%20wrap%20request%20from%20windowBits%20parameter%20*%2F%0A%20%20if%20(windowBits%20%3C%200)%20%7B%0A%20%20%20%20wrap%20%3D%200%3B%0A%20%20%20%20windowBits%20%3D%20-windowBits%3B%0A%20%20%7D%0A%20%20else%20%7B%0A%20%20%20%20wrap%20%3D%20(windowBits%20%3E%3E%204)%20%2B%201%3B%0A%20%20%20%20if%20(windowBits%20%3C%2048)%20%7B%0A%20%20%20%20%20%20windowBits%20%26%3D%2015%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20%2F*%20set%20number%20of%20window%20bits%2C%20free%20window%20if%20different%20*%2F%0A%20%20if%20(windowBits%20%26%26%20(windowBits%20%3C%208%20%7C%7C%20windowBits%20%3E%2015))%20%7B%0A%20%20%20%20return%20Z_STREAM_ERROR%3B%0A%20%20%7D%0A%20%20if%20(state.window%20!%3D%3D%20null%20%26%26%20state.wbits%20!%3D%3D%20windowBits)%20%7B%0A%20%20%20%20state.window%20%3D%20null%3B%0A%20%20%7D%0A%0A%20%20%2F*%20update%20state%20and%20reset%20the%20rest%20of%20it%20*%2F%0A%20%20state.wrap%20%3D%20wrap%3B%0A%20%20state.wbits%20%3D%20windowBits%3B%0A%20%20return%20inflateReset(strm)%3B%0A%7D%0A%0Afunction%20inflateInit2(strm%2C%20windowBits)%20%7B%0A%20%20var%20ret%3B%0A%20%20var%20state%3B%0A%0A%20%20if%20(!strm)%20%7B%20return%20Z_STREAM_ERROR%3B%20%7D%0A%20%20%2F%2Fstrm.msg%20%3D%20Z_NULL%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20in%20case%20we%20return%20an%20error%20*%2F%0A%0A%20%20state%20%3D%20new%20InflateState()%3B%0A%0A%20%20%2F%2Fif%20(state%20%3D%3D%3D%20Z_NULL)%20return%20Z_MEM_ERROR%3B%0A%20%20%2F%2FTracev((stderr%2C%20%22inflate%3A%20allocated%5Cn%22))%3B%0A%20%20strm.state%20%3D%20state%3B%0A%20%20state.window%20%3D%20null%2F*Z_NULL*%2F%3B%0A%20%20ret%20%3D%20inflateReset2(strm%2C%20windowBits)%3B%0A%20%20if%20(ret%20!%3D%3D%20Z_OK)%20%7B%0A%20%20%20%20strm.state%20%3D%20null%2F*Z_NULL*%2F%3B%0A%20%20%7D%0A%20%20return%20ret%3B%0A%7D%0A%0Afunction%20inflateInit(strm)%20%7B%0A%20%20return%20inflateInit2(strm%2C%20DEF_WBITS)%3B%0A%7D%0A%0A%0A%2F*%0A%20Return%20state%20with%20length%20and%20distance%20decoding%20tables%20and%20index%20sizes%20set%20to%0A%20fixed%20code%20decoding.%20%20Normally%20this%20returns%20fixed%20tables%20from%20inffixed.h.%0A%20If%20BUILDFIXED%20is%20defined%2C%20then%20instead%20this%20routine%20builds%20the%20tables%20the%0A%20first%20time%20it's%20called%2C%20and%20returns%20those%20tables%20the%20first%20time%20and%0A%20thereafter.%20%20This%20reduces%20the%20size%20of%20the%20code%20by%20about%202K%20bytes%2C%20in%0A%20exchange%20for%20a%20little%20execution%20time.%20%20However%2C%20BUILDFIXED%20should%20not%20be%0A%20used%20for%20threaded%20applications%2C%20since%20the%20rewriting%20of%20the%20tables%20and%20virgin%0A%20may%20not%20be%20thread-safe.%0A%20*%2F%0Avar%20virgin%20%3D%20true%3B%0A%0Avar%20lenfix%2C%20distfix%3B%20%2F%2F%20We%20have%20no%20pointers%20in%20JS%2C%20so%20keep%20tables%20separate%0A%0Afunction%20fixedtables(state)%20%7B%0A%20%20%2F*%20build%20fixed%20huffman%20tables%20if%20first%20call%20(may%20not%20be%20thread%20safe)%20*%2F%0A%20%20if%20(virgin)%20%7B%0A%20%20%20%20var%20sym%3B%0A%0A%20%20%20%20lenfix%20%3D%20new%20utils.Buf32(512)%3B%0A%20%20%20%20distfix%20%3D%20new%20utils.Buf32(32)%3B%0A%0A%20%20%20%20%2F*%20literal%2Flength%20table%20*%2F%0A%20%20%20%20sym%20%3D%200%3B%0A%20%20%20%20while%20(sym%20%3C%20144)%20%7B%20state.lens%5Bsym%2B%2B%5D%20%3D%208%3B%20%7D%0A%20%20%20%20while%20(sym%20%3C%20256)%20%7B%20state.lens%5Bsym%2B%2B%5D%20%3D%209%3B%20%7D%0A%20%20%20%20while%20(sym%20%3C%20280)%20%7B%20state.lens%5Bsym%2B%2B%5D%20%3D%207%3B%20%7D%0A%20%20%20%20while%20(sym%20%3C%20288)%20%7B%20state.lens%5Bsym%2B%2B%5D%20%3D%208%3B%20%7D%0A%0A%20%20%20%20inflate_table(LENS%2C%20%20state.lens%2C%200%2C%20288%2C%20lenfix%2C%20%20%200%2C%20state.work%2C%20%7B%20bits%3A%209%20%7D)%3B%0A%0A%20%20%20%20%2F*%20distance%20table%20*%2F%0A%20%20%20%20sym%20%3D%200%3B%0A%20%20%20%20while%20(sym%20%3C%2032)%20%7B%20state.lens%5Bsym%2B%2B%5D%20%3D%205%3B%20%7D%0A%0A%20%20%20%20inflate_table(DISTS%2C%20state.lens%2C%200%2C%2032%2C%20%20%20distfix%2C%200%2C%20state.work%2C%20%7B%20bits%3A%205%20%7D)%3B%0A%0A%20%20%20%20%2F*%20do%20this%20just%20once%20*%2F%0A%20%20%20%20virgin%20%3D%20false%3B%0A%20%20%7D%0A%0A%20%20state.lencode%20%3D%20lenfix%3B%0A%20%20state.lenbits%20%3D%209%3B%0A%20%20state.distcode%20%3D%20distfix%3B%0A%20%20state.distbits%20%3D%205%3B%0A%7D%0A%0A%0A%2F*%0A%20Update%20the%20window%20with%20the%20last%20wsize%20(normally%2032K)%20bytes%20written%20before%0A%20returning.%20%20If%20window%20does%20not%20exist%20yet%2C%20create%20it.%20%20This%20is%20only%20called%0A%20when%20a%20window%20is%20already%20in%20use%2C%20or%20when%20output%20has%20been%20written%20during%20this%0A%20inflate%20call%2C%20but%20the%20end%20of%20the%20deflate%20stream%20has%20not%20been%20reached%20yet.%0A%20It%20is%20also%20called%20to%20create%20a%20window%20for%20dictionary%20data%20when%20a%20dictionary%0A%20is%20loaded.%0A%0A%20Providing%20output%20buffers%20larger%20than%2032K%20to%20inflate()%20should%20provide%20a%20speed%0A%20advantage%2C%20since%20only%20the%20last%2032K%20of%20output%20is%20copied%20to%20the%20sliding%20window%0A%20upon%20return%20from%20inflate()%2C%20and%20since%20all%20distances%20after%20the%20first%2032K%20of%0A%20output%20will%20fall%20in%20the%20output%20data%2C%20making%20match%20copies%20simpler%20and%20faster.%0A%20The%20advantage%20may%20be%20dependent%20on%20the%20size%20of%20the%20processor's%20data%20caches.%0A%20*%2F%0Afunction%20updatewindow(strm%2C%20src%2C%20end%2C%20copy)%20%7B%0A%20%20var%20dist%3B%0A%20%20var%20state%20%3D%20strm.state%3B%0A%0A%20%20%2F*%20if%20it%20hasn't%20been%20done%20already%2C%20allocate%20space%20for%20the%20window%20*%2F%0A%20%20if%20(state.window%20%3D%3D%3D%20null)%20%7B%0A%20%20%20%20state.wsize%20%3D%201%20%3C%3C%20state.wbits%3B%0A%20%20%20%20state.wnext%20%3D%200%3B%0A%20%20%20%20state.whave%20%3D%200%3B%0A%0A%20%20%20%20state.window%20%3D%20new%20utils.Buf8(state.wsize)%3B%0A%20%20%7D%0A%0A%20%20%2F*%20copy%20state-%3Ewsize%20or%20less%20output%20bytes%20into%20the%20circular%20window%20*%2F%0A%20%20if%20(copy%20%3E%3D%20state.wsize)%20%7B%0A%20%20%20%20utils.arraySet(state.window%2C%20src%2C%20end%20-%20state.wsize%2C%20state.wsize%2C%200)%3B%0A%20%20%20%20state.wnext%20%3D%200%3B%0A%20%20%20%20state.whave%20%3D%20state.wsize%3B%0A%20%20%7D%0A%20%20else%20%7B%0A%20%20%20%20dist%20%3D%20state.wsize%20-%20state.wnext%3B%0A%20%20%20%20if%20(dist%20%3E%20copy)%20%7B%0A%20%20%20%20%20%20dist%20%3D%20copy%3B%0A%20%20%20%20%7D%0A%20%20%20%20%2F%2Fzmemcpy(state-%3Ewindow%20%2B%20state-%3Ewnext%2C%20end%20-%20copy%2C%20dist)%3B%0A%20%20%20%20utils.arraySet(state.window%2C%20src%2C%20end%20-%20copy%2C%20dist%2C%20state.wnext)%3B%0A%20%20%20%20copy%20-%3D%20dist%3B%0A%20%20%20%20if%20(copy)%20%7B%0A%20%20%20%20%20%20%2F%2Fzmemcpy(state-%3Ewindow%2C%20end%20-%20copy%2C%20copy)%3B%0A%20%20%20%20%20%20utils.arraySet(state.window%2C%20src%2C%20end%20-%20copy%2C%20copy%2C%200)%3B%0A%20%20%20%20%20%20state.wnext%20%3D%20copy%3B%0A%20%20%20%20%20%20state.whave%20%3D%20state.wsize%3B%0A%20%20%20%20%7D%0A%20%20%20%20else%20%7B%0A%20%20%20%20%20%20state.wnext%20%2B%3D%20dist%3B%0A%20%20%20%20%20%20if%20(state.wnext%20%3D%3D%3D%20state.wsize)%20%7B%20state.wnext%20%3D%200%3B%20%7D%0A%20%20%20%20%20%20if%20(state.whave%20%3C%20state.wsize)%20%7B%20state.whave%20%2B%3D%20dist%3B%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20return%200%3B%0A%7D%0A%0Afunction%20inflate(strm%2C%20flush)%20%7B%0A%20%20var%20state%3B%0A%20%20var%20input%2C%20output%3B%20%20%20%20%20%20%20%20%20%20%2F%2F%20input%2Foutput%20buffers%0A%20%20var%20next%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20next%20input%20INDEX%20*%2F%0A%20%20var%20put%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20next%20output%20INDEX%20*%2F%0A%20%20var%20have%2C%20left%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20available%20input%20and%20output%20*%2F%0A%20%20var%20hold%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20bit%20buffer%20*%2F%0A%20%20var%20bits%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20bits%20in%20bit%20buffer%20*%2F%0A%20%20var%20_in%2C%20_out%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20save%20starting%20available%20input%20and%20output%20*%2F%0A%20%20var%20copy%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20number%20of%20stored%20or%20match%20bytes%20to%20copy%20*%2F%0A%20%20var%20from%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20where%20to%20copy%20match%20bytes%20from%20*%2F%0A%20%20var%20from_source%3B%0A%20%20var%20here%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20current%20decoding%20table%20entry%20*%2F%0A%20%20var%20here_bits%2C%20here_op%2C%20here_val%3B%20%2F%2F%20paked%20%22here%22%20denormalized%20(JS%20specific)%0A%20%20%2F%2Fvar%20last%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20parent%20table%20entry%20*%2F%0A%20%20var%20last_bits%2C%20last_op%2C%20last_val%3B%20%2F%2F%20paked%20%22last%22%20denormalized%20(JS%20specific)%0A%20%20var%20len%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20length%20to%20copy%20for%20repeats%2C%20bits%20to%20drop%20*%2F%0A%20%20var%20ret%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20return%20code%20*%2F%0A%20%20var%20hbuf%20%3D%20new%20utils.Buf8(4)%3B%20%20%20%20%2F*%20buffer%20for%20gzip%20header%20crc%20calculation%20*%2F%0A%20%20var%20opts%3B%0A%0A%20%20var%20n%3B%20%2F%2F%20temporary%20var%20for%20NEED_BITS%0A%0A%20%20var%20order%20%3D%20%2F*%20permutation%20of%20code%20lengths%20*%2F%0A%20%20%20%20%5B%2016%2C%2017%2C%2018%2C%200%2C%208%2C%207%2C%209%2C%206%2C%2010%2C%205%2C%2011%2C%204%2C%2012%2C%203%2C%2013%2C%202%2C%2014%2C%201%2C%2015%20%5D%3B%0A%0A%0A%20%20if%20(!strm%20%7C%7C%20!strm.state%20%7C%7C%20!strm.output%20%7C%7C%0A%20%20%20%20%20%20(!strm.input%20%26%26%20strm.avail_in%20!%3D%3D%200))%20%7B%0A%20%20%20%20return%20Z_STREAM_ERROR%3B%0A%20%20%7D%0A%0A%20%20state%20%3D%20strm.state%3B%0A%20%20if%20(state.mode%20%3D%3D%3D%20TYPE)%20%7B%20state.mode%20%3D%20TYPEDO%3B%20%7D%20%20%20%20%2F*%20skip%20check%20*%2F%0A%0A%0A%20%20%2F%2F---%20LOAD()%20---%0A%20%20put%20%3D%20strm.next_out%3B%0A%20%20output%20%3D%20strm.output%3B%0A%20%20left%20%3D%20strm.avail_out%3B%0A%20%20next%20%3D%20strm.next_in%3B%0A%20%20input%20%3D%20strm.input%3B%0A%20%20have%20%3D%20strm.avail_in%3B%0A%20%20hold%20%3D%20state.hold%3B%0A%20%20bits%20%3D%20state.bits%3B%0A%20%20%2F%2F---%0A%0A%20%20_in%20%3D%20have%3B%0A%20%20_out%20%3D%20left%3B%0A%20%20ret%20%3D%20Z_OK%3B%0A%0A%20%20inf_leave%3A%20%2F%2F%20goto%20emulation%0A%20%20for%20(%3B%3B)%20%7B%0A%20%20%20%20switch%20(state.mode)%20%7B%0A%20%20%20%20case%20HEAD%3A%0A%20%20%20%20%20%20if%20(state.wrap%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20TYPEDO%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%20NEEDBITS(16)%3B%0A%20%20%20%20%20%20while%20(bits%20%3C%2016)%20%7B%0A%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20have--%3B%0A%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5Bnext%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20if%20((state.wrap%20%26%202)%20%26%26%20hold%20%3D%3D%3D%200x8b1f)%20%7B%20%20%2F*%20gzip%20header%20*%2F%0A%20%20%20%20%20%20%20%20state.check%20%3D%200%2F*crc32(0L%2C%20Z_NULL%2C%200)*%2F%3B%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%20CRC2(state.check%2C%20hold)%3B%0A%20%20%20%20%20%20%20%20hbuf%5B0%5D%20%3D%20hold%20%26%200xff%3B%0A%20%20%20%20%20%20%20%20hbuf%5B1%5D%20%3D%20(hold%20%3E%3E%3E%208)%20%26%200xff%3B%0A%20%20%20%20%20%20%20%20state.check%20%3D%20crc32(state.check%2C%20hbuf%2C%202%2C%200)%3B%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%20INITBITS()%3B%0A%20%20%20%20%20%20%20%20hold%20%3D%200%3B%0A%20%20%20%20%20%20%20%20bits%20%3D%200%3B%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20FLAGS%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20state.flags%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%2F*%20expect%20zlib%20header%20*%2F%0A%20%20%20%20%20%20if%20(state.head)%20%7B%0A%20%20%20%20%20%20%20%20state.head.done%20%3D%20false%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(!(state.wrap%20%26%201)%20%7C%7C%20%20%20%2F*%20check%20if%20zlib%20header%20allowed%20*%2F%0A%20%20%20%20%20%20%20%20(((hold%20%26%200xff)%2F*BITS(8)*%2F%20%3C%3C%208)%20%2B%20(hold%20%3E%3E%208))%20%25%2031)%20%7B%0A%20%20%20%20%20%20%20%20strm.msg%20%3D%20'incorrect%20header%20check'%3B%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20((hold%20%26%200x0f)%2F*BITS(4)*%2F%20!%3D%3D%20Z_DEFLATED)%20%7B%0A%20%20%20%20%20%20%20%20strm.msg%20%3D%20'unknown%20compression%20method'%3B%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2F---%20DROPBITS(4)%20---%2F%2F%0A%20%20%20%20%20%20hold%20%3E%3E%3E%3D%204%3B%0A%20%20%20%20%20%20bits%20-%3D%204%3B%0A%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20len%20%3D%20(hold%20%26%200x0f)%2F*BITS(4)*%2F%20%2B%208%3B%0A%20%20%20%20%20%20if%20(state.wbits%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20state.wbits%20%3D%20len%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20else%20if%20(len%20%3E%20state.wbits)%20%7B%0A%20%20%20%20%20%20%20%20strm.msg%20%3D%20'invalid%20window%20size'%3B%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20state.dmax%20%3D%201%20%3C%3C%20len%3B%0A%20%20%20%20%20%20%2F%2FTracev((stderr%2C%20%22inflate%3A%20%20%20zlib%20header%20ok%5Cn%22))%3B%0A%20%20%20%20%20%20strm.adler%20%3D%20state.check%20%3D%201%2F*adler32(0L%2C%20Z_NULL%2C%200)*%2F%3B%0A%20%20%20%20%20%20state.mode%20%3D%20hold%20%26%200x200%20%3F%20DICTID%20%3A%20TYPE%3B%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%20INITBITS()%3B%0A%20%20%20%20%20%20hold%20%3D%200%3B%0A%20%20%20%20%20%20bits%20%3D%200%3B%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20break%3B%0A%20%20%20%20case%20FLAGS%3A%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%20NEEDBITS(16)%3B%20*%2F%0A%20%20%20%20%20%20while%20(bits%20%3C%2016)%20%7B%0A%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20have--%3B%0A%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5Bnext%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20state.flags%20%3D%20hold%3B%0A%20%20%20%20%20%20if%20((state.flags%20%26%200xff)%20!%3D%3D%20Z_DEFLATED)%20%7B%0A%20%20%20%20%20%20%20%20strm.msg%20%3D%20'unknown%20compression%20method'%3B%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(state.flags%20%26%200xe000)%20%7B%0A%20%20%20%20%20%20%20%20strm.msg%20%3D%20'unknown%20header%20flags%20set'%3B%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(state.head)%20%7B%0A%20%20%20%20%20%20%20%20state.head.text%20%3D%20((hold%20%3E%3E%208)%20%26%201)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(state.flags%20%26%200x0200)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%20CRC2(state.check%2C%20hold)%3B%0A%20%20%20%20%20%20%20%20hbuf%5B0%5D%20%3D%20hold%20%26%200xff%3B%0A%20%20%20%20%20%20%20%20hbuf%5B1%5D%20%3D%20(hold%20%3E%3E%3E%208)%20%26%200xff%3B%0A%20%20%20%20%20%20%20%20state.check%20%3D%20crc32(state.check%2C%20hbuf%2C%202%2C%200)%3B%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%20INITBITS()%3B%0A%20%20%20%20%20%20hold%20%3D%200%3B%0A%20%20%20%20%20%20bits%20%3D%200%3B%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20state.mode%20%3D%20TIME%3B%0A%20%20%20%20%20%20%2F*%20falls%20through%20*%2F%0A%20%20%20%20case%20TIME%3A%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%20NEEDBITS(32)%3B%20*%2F%0A%20%20%20%20%20%20while%20(bits%20%3C%2032)%20%7B%0A%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20have--%3B%0A%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5Bnext%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20if%20(state.head)%20%7B%0A%20%20%20%20%20%20%20%20state.head.time%20%3D%20hold%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(state.flags%20%26%200x0200)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%20CRC4(state.check%2C%20hold)%0A%20%20%20%20%20%20%20%20hbuf%5B0%5D%20%3D%20hold%20%26%200xff%3B%0A%20%20%20%20%20%20%20%20hbuf%5B1%5D%20%3D%20(hold%20%3E%3E%3E%208)%20%26%200xff%3B%0A%20%20%20%20%20%20%20%20hbuf%5B2%5D%20%3D%20(hold%20%3E%3E%3E%2016)%20%26%200xff%3B%0A%20%20%20%20%20%20%20%20hbuf%5B3%5D%20%3D%20(hold%20%3E%3E%3E%2024)%20%26%200xff%3B%0A%20%20%20%20%20%20%20%20state.check%20%3D%20crc32(state.check%2C%20hbuf%2C%204%2C%200)%3B%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%20INITBITS()%3B%0A%20%20%20%20%20%20hold%20%3D%200%3B%0A%20%20%20%20%20%20bits%20%3D%200%3B%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20state.mode%20%3D%20OS%3B%0A%20%20%20%20%20%20%2F*%20falls%20through%20*%2F%0A%20%20%20%20case%20OS%3A%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%20NEEDBITS(16)%3B%20*%2F%0A%20%20%20%20%20%20while%20(bits%20%3C%2016)%20%7B%0A%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20have--%3B%0A%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5Bnext%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20if%20(state.head)%20%7B%0A%20%20%20%20%20%20%20%20state.head.xflags%20%3D%20(hold%20%26%200xff)%3B%0A%20%20%20%20%20%20%20%20state.head.os%20%3D%20(hold%20%3E%3E%208)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(state.flags%20%26%200x0200)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%20CRC2(state.check%2C%20hold)%3B%0A%20%20%20%20%20%20%20%20hbuf%5B0%5D%20%3D%20hold%20%26%200xff%3B%0A%20%20%20%20%20%20%20%20hbuf%5B1%5D%20%3D%20(hold%20%3E%3E%3E%208)%20%26%200xff%3B%0A%20%20%20%20%20%20%20%20state.check%20%3D%20crc32(state.check%2C%20hbuf%2C%202%2C%200)%3B%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%20INITBITS()%3B%0A%20%20%20%20%20%20hold%20%3D%200%3B%0A%20%20%20%20%20%20bits%20%3D%200%3B%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20state.mode%20%3D%20EXLEN%3B%0A%20%20%20%20%20%20%2F*%20falls%20through%20*%2F%0A%20%20%20%20case%20EXLEN%3A%0A%20%20%20%20%20%20if%20(state.flags%20%26%200x0400)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%20NEEDBITS(16)%3B%20*%2F%0A%20%20%20%20%20%20%20%20while%20(bits%20%3C%2016)%20%7B%0A%20%20%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20%20%20have--%3B%0A%20%20%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5Bnext%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20%20%20state.length%20%3D%20hold%3B%0A%20%20%20%20%20%20%20%20if%20(state.head)%20%7B%0A%20%20%20%20%20%20%20%20%20%20state.head.extra_len%20%3D%20hold%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20if%20(state.flags%20%26%200x0200)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%20CRC2(state.check%2C%20hold)%3B%0A%20%20%20%20%20%20%20%20%20%20hbuf%5B0%5D%20%3D%20hold%20%26%200xff%3B%0A%20%20%20%20%20%20%20%20%20%20hbuf%5B1%5D%20%3D%20(hold%20%3E%3E%3E%208)%20%26%200xff%3B%0A%20%20%20%20%20%20%20%20%20%20state.check%20%3D%20crc32(state.check%2C%20hbuf%2C%202%2C%200)%3B%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%20INITBITS()%3B%0A%20%20%20%20%20%20%20%20hold%20%3D%200%3B%0A%20%20%20%20%20%20%20%20bits%20%3D%200%3B%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20else%20if%20(state.head)%20%7B%0A%20%20%20%20%20%20%20%20state.head.extra%20%3D%20null%2F*Z_NULL*%2F%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20state.mode%20%3D%20EXTRA%3B%0A%20%20%20%20%20%20%2F*%20falls%20through%20*%2F%0A%20%20%20%20case%20EXTRA%3A%0A%20%20%20%20%20%20if%20(state.flags%20%26%200x0400)%20%7B%0A%20%20%20%20%20%20%20%20copy%20%3D%20state.length%3B%0A%20%20%20%20%20%20%20%20if%20(copy%20%3E%20have)%20%7B%20copy%20%3D%20have%3B%20%7D%0A%20%20%20%20%20%20%20%20if%20(copy)%20%7B%0A%20%20%20%20%20%20%20%20%20%20if%20(state.head)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20len%20%3D%20state.head.extra_len%20-%20state.length%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(!state.head.extra)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20Use%20untyped%20array%20for%20more%20conveniend%20processing%20later%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20state.head.extra%20%3D%20new%20Array(state.head.extra_len)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20utils.arraySet(%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20state.head.extra%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20input%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20next%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20extra%20field%20is%20limited%20to%2065536%20bytes%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20-%20no%20need%20for%20additional%20size%20check%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20copy%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*len%20%2B%20copy%20%3E%20state.head.extra_max%20-%20len%20%3F%20state.head.extra_max%20%3A%20copy%2C*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20len%0A%20%20%20%20%20%20%20%20%20%20%20%20)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2Fzmemcpy(state.head.extra%20%2B%20len%2C%20next%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20len%20%2B%20copy%20%3E%20state.head.extra_max%20%3F%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20state.head.extra_max%20-%20len%20%3A%20copy)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20if%20(state.flags%20%26%200x0200)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20state.check%20%3D%20crc32(state.check%2C%20input%2C%20copy%2C%20next)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20have%20-%3D%20copy%3B%0A%20%20%20%20%20%20%20%20%20%20next%20%2B%3D%20copy%3B%0A%20%20%20%20%20%20%20%20%20%20state.length%20-%3D%20copy%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20if%20(state.length)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20state.length%20%3D%200%3B%0A%20%20%20%20%20%20state.mode%20%3D%20NAME%3B%0A%20%20%20%20%20%20%2F*%20falls%20through%20*%2F%0A%20%20%20%20case%20NAME%3A%0A%20%20%20%20%20%20if%20(state.flags%20%26%200x0800)%20%7B%0A%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20copy%20%3D%200%3B%0A%20%20%20%20%20%20%20%20do%20%7B%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20TODO%3A%202%20or%201%20bytes%3F%0A%20%20%20%20%20%20%20%20%20%20len%20%3D%20input%5Bnext%20%2B%20copy%2B%2B%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%2F*%20use%20constant%20limit%20because%20in%20js%20we%20should%20not%20preallocate%20memory%20*%2F%0A%20%20%20%20%20%20%20%20%20%20if%20(state.head%20%26%26%20len%20%26%26%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20(state.length%20%3C%2065536%20%2F*state.head.name_max*%2F))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20state.head.name%20%2B%3D%20String.fromCharCode(len)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%20while%20(len%20%26%26%20copy%20%3C%20have)%3B%0A%0A%20%20%20%20%20%20%20%20if%20(state.flags%20%26%200x0200)%20%7B%0A%20%20%20%20%20%20%20%20%20%20state.check%20%3D%20crc32(state.check%2C%20input%2C%20copy%2C%20next)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20have%20-%3D%20copy%3B%0A%20%20%20%20%20%20%20%20next%20%2B%3D%20copy%3B%0A%20%20%20%20%20%20%20%20if%20(len)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20else%20if%20(state.head)%20%7B%0A%20%20%20%20%20%20%20%20state.head.name%20%3D%20null%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20state.length%20%3D%200%3B%0A%20%20%20%20%20%20state.mode%20%3D%20COMMENT%3B%0A%20%20%20%20%20%20%2F*%20falls%20through%20*%2F%0A%20%20%20%20case%20COMMENT%3A%0A%20%20%20%20%20%20if%20(state.flags%20%26%200x1000)%20%7B%0A%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20copy%20%3D%200%3B%0A%20%20%20%20%20%20%20%20do%20%7B%0A%20%20%20%20%20%20%20%20%20%20len%20%3D%20input%5Bnext%20%2B%20copy%2B%2B%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%2F*%20use%20constant%20limit%20because%20in%20js%20we%20should%20not%20preallocate%20memory%20*%2F%0A%20%20%20%20%20%20%20%20%20%20if%20(state.head%20%26%26%20len%20%26%26%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20(state.length%20%3C%2065536%20%2F*state.head.comm_max*%2F))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20state.head.comment%20%2B%3D%20String.fromCharCode(len)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%20while%20(len%20%26%26%20copy%20%3C%20have)%3B%0A%20%20%20%20%20%20%20%20if%20(state.flags%20%26%200x0200)%20%7B%0A%20%20%20%20%20%20%20%20%20%20state.check%20%3D%20crc32(state.check%2C%20input%2C%20copy%2C%20next)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20have%20-%3D%20copy%3B%0A%20%20%20%20%20%20%20%20next%20%2B%3D%20copy%3B%0A%20%20%20%20%20%20%20%20if%20(len)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20else%20if%20(state.head)%20%7B%0A%20%20%20%20%20%20%20%20state.head.comment%20%3D%20null%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20state.mode%20%3D%20HCRC%3B%0A%20%20%20%20%20%20%2F*%20falls%20through%20*%2F%0A%20%20%20%20case%20HCRC%3A%0A%20%20%20%20%20%20if%20(state.flags%20%26%200x0200)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%20NEEDBITS(16)%3B%20*%2F%0A%20%20%20%20%20%20%20%20while%20(bits%20%3C%2016)%20%7B%0A%20%20%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20%20%20have--%3B%0A%20%20%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5Bnext%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20%20%20if%20(hold%20!%3D%3D%20(state.check%20%26%200xffff))%20%7B%0A%20%20%20%20%20%20%20%20%20%20strm.msg%20%3D%20'header%20crc%20mismatch'%3B%0A%20%20%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%20INITBITS()%3B%0A%20%20%20%20%20%20%20%20hold%20%3D%200%3B%0A%20%20%20%20%20%20%20%20bits%20%3D%200%3B%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(state.head)%20%7B%0A%20%20%20%20%20%20%20%20state.head.hcrc%20%3D%20((state.flags%20%3E%3E%209)%20%26%201)%3B%0A%20%20%20%20%20%20%20%20state.head.done%20%3D%20true%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20strm.adler%20%3D%20state.check%20%3D%200%3B%0A%20%20%20%20%20%20state.mode%20%3D%20TYPE%3B%0A%20%20%20%20%20%20break%3B%0A%20%20%20%20case%20DICTID%3A%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%20NEEDBITS(32)%3B%20*%2F%0A%20%20%20%20%20%20while%20(bits%20%3C%2032)%20%7B%0A%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20have--%3B%0A%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5Bnext%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20strm.adler%20%3D%20state.check%20%3D%20zswap32(hold)%3B%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%20INITBITS()%3B%0A%20%20%20%20%20%20hold%20%3D%200%3B%0A%20%20%20%20%20%20bits%20%3D%200%3B%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20state.mode%20%3D%20DICT%3B%0A%20%20%20%20%20%20%2F*%20falls%20through%20*%2F%0A%20%20%20%20case%20DICT%3A%0A%20%20%20%20%20%20if%20(state.havedict%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F---%20RESTORE()%20---%0A%20%20%20%20%20%20%20%20strm.next_out%20%3D%20put%3B%0A%20%20%20%20%20%20%20%20strm.avail_out%20%3D%20left%3B%0A%20%20%20%20%20%20%20%20strm.next_in%20%3D%20next%3B%0A%20%20%20%20%20%20%20%20strm.avail_in%20%3D%20have%3B%0A%20%20%20%20%20%20%20%20state.hold%20%3D%20hold%3B%0A%20%20%20%20%20%20%20%20state.bits%20%3D%20bits%3B%0A%20%20%20%20%20%20%20%20%2F%2F---%0A%20%20%20%20%20%20%20%20return%20Z_NEED_DICT%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20strm.adler%20%3D%20state.check%20%3D%201%2F*adler32(0L%2C%20Z_NULL%2C%200)*%2F%3B%0A%20%20%20%20%20%20state.mode%20%3D%20TYPE%3B%0A%20%20%20%20%20%20%2F*%20falls%20through%20*%2F%0A%20%20%20%20case%20TYPE%3A%0A%20%20%20%20%20%20if%20(flush%20%3D%3D%3D%20Z_BLOCK%20%7C%7C%20flush%20%3D%3D%3D%20Z_TREES)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%2F*%20falls%20through%20*%2F%0A%20%20%20%20case%20TYPEDO%3A%0A%20%20%20%20%20%20if%20(state.last)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F---%20BYTEBITS()%20---%2F%2F%0A%20%20%20%20%20%20%20%20hold%20%3E%3E%3E%3D%20bits%20%26%207%3B%0A%20%20%20%20%20%20%20%20bits%20-%3D%20bits%20%26%207%3B%0A%20%20%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20CHECK%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%20NEEDBITS(3)%3B%20*%2F%0A%20%20%20%20%20%20while%20(bits%20%3C%203)%20%7B%0A%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20have--%3B%0A%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5Bnext%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20state.last%20%3D%20(hold%20%26%200x01)%2F*BITS(1)*%2F%3B%0A%20%20%20%20%20%20%2F%2F---%20DROPBITS(1)%20---%2F%2F%0A%20%20%20%20%20%20hold%20%3E%3E%3E%3D%201%3B%0A%20%20%20%20%20%20bits%20-%3D%201%3B%0A%20%20%20%20%20%20%2F%2F---%2F%2F%0A%0A%20%20%20%20%20%20switch%20((hold%20%26%200x03)%2F*BITS(2)*%2F)%20%7B%0A%20%20%20%20%20%20case%200%3A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20stored%20block%20*%2F%0A%20%20%20%20%20%20%20%20%2F%2FTracev((stderr%2C%20%22inflate%3A%20%20%20%20%20stored%20block%25s%5Cn%22%2C%0A%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20state.last%20%3F%20%22%20(last)%22%20%3A%20%22%22))%3B%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20STORED%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20case%201%3A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20fixed%20block%20*%2F%0A%20%20%20%20%20%20%20%20fixedtables(state)%3B%0A%20%20%20%20%20%20%20%20%2F%2FTracev((stderr%2C%20%22inflate%3A%20%20%20%20%20fixed%20codes%20block%25s%5Cn%22%2C%0A%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20state.last%20%3F%20%22%20(last)%22%20%3A%20%22%22))%3B%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20LEN_%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20decode%20codes%20*%2F%0A%20%20%20%20%20%20%20%20if%20(flush%20%3D%3D%3D%20Z_TREES)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%2F%2F---%20DROPBITS(2)%20---%2F%2F%0A%20%20%20%20%20%20%20%20%20%20hold%20%3E%3E%3E%3D%202%3B%0A%20%20%20%20%20%20%20%20%20%20bits%20-%3D%202%3B%0A%20%20%20%20%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20%20%20%20%20break%20inf_leave%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20case%202%3A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20dynamic%20block%20*%2F%0A%20%20%20%20%20%20%20%20%2F%2FTracev((stderr%2C%20%22inflate%3A%20%20%20%20%20dynamic%20codes%20block%25s%5Cn%22%2C%0A%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20state.last%20%3F%20%22%20(last)%22%20%3A%20%22%22))%3B%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20TABLE%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20case%203%3A%0A%20%20%20%20%20%20%20%20strm.msg%20%3D%20'invalid%20block%20type'%3B%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2F---%20DROPBITS(2)%20---%2F%2F%0A%20%20%20%20%20%20hold%20%3E%3E%3E%3D%202%3B%0A%20%20%20%20%20%20bits%20-%3D%202%3B%0A%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20break%3B%0A%20%20%20%20case%20STORED%3A%0A%20%20%20%20%20%20%2F%2F---%20BYTEBITS()%20---%2F%2F%20%2F*%20go%20to%20byte%20boundary%20*%2F%0A%20%20%20%20%20%20hold%20%3E%3E%3E%3D%20bits%20%26%207%3B%0A%20%20%20%20%20%20bits%20-%3D%20bits%20%26%207%3B%0A%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%20NEEDBITS(32)%3B%20*%2F%0A%20%20%20%20%20%20while%20(bits%20%3C%2032)%20%7B%0A%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20have--%3B%0A%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5Bnext%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20if%20((hold%20%26%200xffff)%20!%3D%3D%20((hold%20%3E%3E%3E%2016)%20%5E%200xffff))%20%7B%0A%20%20%20%20%20%20%20%20strm.msg%20%3D%20'invalid%20stored%20block%20lengths'%3B%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20state.length%20%3D%20hold%20%26%200xffff%3B%0A%20%20%20%20%20%20%2F%2FTracev((stderr%2C%20%22inflate%3A%20%20%20%20%20%20%20stored%20length%20%25u%5Cn%22%2C%0A%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20state.length))%3B%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%20INITBITS()%3B%0A%20%20%20%20%20%20hold%20%3D%200%3B%0A%20%20%20%20%20%20bits%20%3D%200%3B%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20state.mode%20%3D%20COPY_%3B%0A%20%20%20%20%20%20if%20(flush%20%3D%3D%3D%20Z_TREES)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%2F*%20falls%20through%20*%2F%0A%20%20%20%20case%20COPY_%3A%0A%20%20%20%20%20%20state.mode%20%3D%20COPY%3B%0A%20%20%20%20%20%20%2F*%20falls%20through%20*%2F%0A%20%20%20%20case%20COPY%3A%0A%20%20%20%20%20%20copy%20%3D%20state.length%3B%0A%20%20%20%20%20%20if%20(copy)%20%7B%0A%20%20%20%20%20%20%20%20if%20(copy%20%3E%20have)%20%7B%20copy%20%3D%20have%3B%20%7D%0A%20%20%20%20%20%20%20%20if%20(copy%20%3E%20left)%20%7B%20copy%20%3D%20left%3B%20%7D%0A%20%20%20%20%20%20%20%20if%20(copy%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20%2F%2F---%20zmemcpy(put%2C%20next%2C%20copy)%3B%20---%0A%20%20%20%20%20%20%20%20utils.arraySet(output%2C%20input%2C%20next%2C%20copy%2C%20put)%3B%0A%20%20%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20%20%20have%20-%3D%20copy%3B%0A%20%20%20%20%20%20%20%20next%20%2B%3D%20copy%3B%0A%20%20%20%20%20%20%20%20left%20-%3D%20copy%3B%0A%20%20%20%20%20%20%20%20put%20%2B%3D%20copy%3B%0A%20%20%20%20%20%20%20%20state.length%20-%3D%20copy%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2FTracev((stderr%2C%20%22inflate%3A%20%20%20%20%20%20%20stored%20end%5Cn%22))%3B%0A%20%20%20%20%20%20state.mode%20%3D%20TYPE%3B%0A%20%20%20%20%20%20break%3B%0A%20%20%20%20case%20TABLE%3A%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%20NEEDBITS(14)%3B%20*%2F%0A%20%20%20%20%20%20while%20(bits%20%3C%2014)%20%7B%0A%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20have--%3B%0A%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5Bnext%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20state.nlen%20%3D%20(hold%20%26%200x1f)%2F*BITS(5)*%2F%20%2B%20257%3B%0A%20%20%20%20%20%20%2F%2F---%20DROPBITS(5)%20---%2F%2F%0A%20%20%20%20%20%20hold%20%3E%3E%3E%3D%205%3B%0A%20%20%20%20%20%20bits%20-%3D%205%3B%0A%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20state.ndist%20%3D%20(hold%20%26%200x1f)%2F*BITS(5)*%2F%20%2B%201%3B%0A%20%20%20%20%20%20%2F%2F---%20DROPBITS(5)%20---%2F%2F%0A%20%20%20%20%20%20hold%20%3E%3E%3E%3D%205%3B%0A%20%20%20%20%20%20bits%20-%3D%205%3B%0A%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20state.ncode%20%3D%20(hold%20%26%200x0f)%2F*BITS(4)*%2F%20%2B%204%3B%0A%20%20%20%20%20%20%2F%2F---%20DROPBITS(4)%20---%2F%2F%0A%20%20%20%20%20%20hold%20%3E%3E%3E%3D%204%3B%0A%20%20%20%20%20%20bits%20-%3D%204%3B%0A%20%20%20%20%20%20%2F%2F---%2F%2F%0A%2F%2F%23ifndef%20PKZIP_BUG_WORKAROUND%0A%20%20%20%20%20%20if%20(state.nlen%20%3E%20286%20%7C%7C%20state.ndist%20%3E%2030)%20%7B%0A%20%20%20%20%20%20%20%20strm.msg%20%3D%20'too%20many%20length%20or%20distance%20symbols'%3B%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%2F%2F%23endif%0A%20%20%20%20%20%20%2F%2FTracev((stderr%2C%20%22inflate%3A%20%20%20%20%20%20%20table%20sizes%20ok%5Cn%22))%3B%0A%20%20%20%20%20%20state.have%20%3D%200%3B%0A%20%20%20%20%20%20state.mode%20%3D%20LENLENS%3B%0A%20%20%20%20%20%20%2F*%20falls%20through%20*%2F%0A%20%20%20%20case%20LENLENS%3A%0A%20%20%20%20%20%20while%20(state.have%20%3C%20state.ncode)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%20NEEDBITS(3)%3B%0A%20%20%20%20%20%20%20%20while%20(bits%20%3C%203)%20%7B%0A%20%20%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20%20%20have--%3B%0A%20%20%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5Bnext%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20%20%20state.lens%5Border%5Bstate.have%2B%2B%5D%5D%20%3D%20(hold%20%26%200x07)%3B%2F%2FBITS(3)%3B%0A%20%20%20%20%20%20%20%20%2F%2F---%20DROPBITS(3)%20---%2F%2F%0A%20%20%20%20%20%20%20%20hold%20%3E%3E%3E%3D%203%3B%0A%20%20%20%20%20%20%20%20bits%20-%3D%203%3B%0A%20%20%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20while%20(state.have%20%3C%2019)%20%7B%0A%20%20%20%20%20%20%20%20state.lens%5Border%5Bstate.have%2B%2B%5D%5D%20%3D%200%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2F%20We%20have%20separate%20tables%20%26%20no%20pointers.%202%20commented%20lines%20below%20not%20needed.%0A%20%20%20%20%20%20%2F%2Fstate.next%20%3D%20state.codes%3B%0A%20%20%20%20%20%20%2F%2Fstate.lencode%20%3D%20state.next%3B%0A%20%20%20%20%20%20%2F%2F%20Switch%20to%20use%20dynamic%20table%0A%20%20%20%20%20%20state.lencode%20%3D%20state.lendyn%3B%0A%20%20%20%20%20%20state.lenbits%20%3D%207%3B%0A%0A%20%20%20%20%20%20opts%20%3D%20%7B%20bits%3A%20state.lenbits%20%7D%3B%0A%20%20%20%20%20%20ret%20%3D%20inflate_table(CODES%2C%20state.lens%2C%200%2C%2019%2C%20state.lencode%2C%200%2C%20state.work%2C%20opts)%3B%0A%20%20%20%20%20%20state.lenbits%20%3D%20opts.bits%3B%0A%0A%20%20%20%20%20%20if%20(ret)%20%7B%0A%20%20%20%20%20%20%20%20strm.msg%20%3D%20'invalid%20code%20lengths%20set'%3B%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2FTracev((stderr%2C%20%22inflate%3A%20%20%20%20%20%20%20code%20lengths%20ok%5Cn%22))%3B%0A%20%20%20%20%20%20state.have%20%3D%200%3B%0A%20%20%20%20%20%20state.mode%20%3D%20CODELENS%3B%0A%20%20%20%20%20%20%2F*%20falls%20through%20*%2F%0A%20%20%20%20case%20CODELENS%3A%0A%20%20%20%20%20%20while%20(state.have%20%3C%20state.nlen%20%2B%20state.ndist)%20%7B%0A%20%20%20%20%20%20%20%20for%20(%3B%3B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20here%20%3D%20state.lencode%5Bhold%20%26%20((1%20%3C%3C%20state.lenbits)%20-%201)%5D%3B%2F*BITS(state.lenbits)*%2F%0A%20%20%20%20%20%20%20%20%20%20here_bits%20%3D%20here%20%3E%3E%3E%2024%3B%0A%20%20%20%20%20%20%20%20%20%20here_op%20%3D%20(here%20%3E%3E%3E%2016)%20%26%200xff%3B%0A%20%20%20%20%20%20%20%20%20%20here_val%20%3D%20here%20%26%200xffff%3B%0A%0A%20%20%20%20%20%20%20%20%20%20if%20((here_bits)%20%3C%3D%20bits)%20%7B%20break%3B%20%7D%0A%20%20%20%20%20%20%20%20%20%20%2F%2F---%20PULLBYTE()%20---%2F%2F%0A%20%20%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20%20%20have--%3B%0A%20%20%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5Bnext%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20if%20(here_val%20%3C%2016)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%2F%2F---%20DROPBITS(here.bits)%20---%2F%2F%0A%20%20%20%20%20%20%20%20%20%20hold%20%3E%3E%3E%3D%20here_bits%3B%0A%20%20%20%20%20%20%20%20%20%20bits%20-%3D%20here_bits%3B%0A%20%20%20%20%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20%20%20%20%20state.lens%5Bstate.have%2B%2B%5D%20%3D%20here_val%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20if%20(here_val%20%3D%3D%3D%2016)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%20NEEDBITS(here.bits%20%2B%202)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20n%20%3D%20here_bits%20%2B%202%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20while%20(bits%20%3C%20n)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20have--%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5Bnext%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F---%20DROPBITS(here.bits)%20---%2F%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20hold%20%3E%3E%3E%3D%20here_bits%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20bits%20-%3D%20here_bits%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(state.have%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20strm.msg%20%3D%20'invalid%20bit%20length%20repeat'%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20len%20%3D%20state.lens%5Bstate.have%20-%201%5D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20copy%20%3D%203%20%2B%20(hold%20%26%200x03)%3B%2F%2FBITS(2)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F---%20DROPBITS(2)%20---%2F%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20hold%20%3E%3E%3E%3D%202%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20bits%20-%3D%202%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20else%20if%20(here_val%20%3D%3D%3D%2017)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%20NEEDBITS(here.bits%20%2B%203)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20n%20%3D%20here_bits%20%2B%203%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20while%20(bits%20%3C%20n)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20have--%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5Bnext%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F---%20DROPBITS(here.bits)%20---%2F%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20hold%20%3E%3E%3E%3D%20here_bits%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20bits%20-%3D%20here_bits%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20len%20%3D%200%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20copy%20%3D%203%20%2B%20(hold%20%26%200x07)%3B%2F%2FBITS(3)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F---%20DROPBITS(3)%20---%2F%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20hold%20%3E%3E%3E%3D%203%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20bits%20-%3D%203%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%20NEEDBITS(here.bits%20%2B%207)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20n%20%3D%20here_bits%20%2B%207%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20while%20(bits%20%3C%20n)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20have--%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5Bnext%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F---%20DROPBITS(here.bits)%20---%2F%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20hold%20%3E%3E%3E%3D%20here_bits%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20bits%20-%3D%20here_bits%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20len%20%3D%200%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20copy%20%3D%2011%20%2B%20(hold%20%26%200x7f)%3B%2F%2FBITS(7)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F---%20DROPBITS(7)%20---%2F%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20hold%20%3E%3E%3E%3D%207%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20bits%20-%3D%207%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20if%20(state.have%20%2B%20copy%20%3E%20state.nlen%20%2B%20state.ndist)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20strm.msg%20%3D%20'invalid%20bit%20length%20repeat'%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20while%20(copy--)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20state.lens%5Bstate.have%2B%2B%5D%20%3D%20len%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%2F*%20handle%20error%20breaks%20in%20while%20*%2F%0A%20%20%20%20%20%20if%20(state.mode%20%3D%3D%3D%20BAD)%20%7B%20break%3B%20%7D%0A%0A%20%20%20%20%20%20%2F*%20check%20for%20end-of-block%20code%20(better%20have%20one)%20*%2F%0A%20%20%20%20%20%20if%20(state.lens%5B256%5D%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20strm.msg%20%3D%20'invalid%20code%20--%20missing%20end-of-block'%3B%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%2F*%20build%20code%20tables%20--%20note%3A%20do%20not%20change%20the%20lenbits%20or%20distbits%0A%20%20%20%20%20%20%20%20%20values%20here%20(9%20and%206)%20without%20reading%20the%20comments%20in%20inftrees.h%0A%20%20%20%20%20%20%20%20%20concerning%20the%20ENOUGH%20constants%2C%20which%20depend%20on%20those%20values%20*%2F%0A%20%20%20%20%20%20state.lenbits%20%3D%209%3B%0A%0A%20%20%20%20%20%20opts%20%3D%20%7B%20bits%3A%20state.lenbits%20%7D%3B%0A%20%20%20%20%20%20ret%20%3D%20inflate_table(LENS%2C%20state.lens%2C%200%2C%20state.nlen%2C%20state.lencode%2C%200%2C%20state.work%2C%20opts)%3B%0A%20%20%20%20%20%20%2F%2F%20We%20have%20separate%20tables%20%26%20no%20pointers.%202%20commented%20lines%20below%20not%20needed.%0A%20%20%20%20%20%20%2F%2F%20state.next_index%20%3D%20opts.table_index%3B%0A%20%20%20%20%20%20state.lenbits%20%3D%20opts.bits%3B%0A%20%20%20%20%20%20%2F%2F%20state.lencode%20%3D%20state.next%3B%0A%0A%20%20%20%20%20%20if%20(ret)%20%7B%0A%20%20%20%20%20%20%20%20strm.msg%20%3D%20'invalid%20literal%2Flengths%20set'%3B%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20state.distbits%20%3D%206%3B%0A%20%20%20%20%20%20%2F%2Fstate.distcode.copy(state.codes)%3B%0A%20%20%20%20%20%20%2F%2F%20Switch%20to%20use%20dynamic%20table%0A%20%20%20%20%20%20state.distcode%20%3D%20state.distdyn%3B%0A%20%20%20%20%20%20opts%20%3D%20%7B%20bits%3A%20state.distbits%20%7D%3B%0A%20%20%20%20%20%20ret%20%3D%20inflate_table(DISTS%2C%20state.lens%2C%20state.nlen%2C%20state.ndist%2C%20state.distcode%2C%200%2C%20state.work%2C%20opts)%3B%0A%20%20%20%20%20%20%2F%2F%20We%20have%20separate%20tables%20%26%20no%20pointers.%202%20commented%20lines%20below%20not%20needed.%0A%20%20%20%20%20%20%2F%2F%20state.next_index%20%3D%20opts.table_index%3B%0A%20%20%20%20%20%20state.distbits%20%3D%20opts.bits%3B%0A%20%20%20%20%20%20%2F%2F%20state.distcode%20%3D%20state.next%3B%0A%0A%20%20%20%20%20%20if%20(ret)%20%7B%0A%20%20%20%20%20%20%20%20strm.msg%20%3D%20'invalid%20distances%20set'%3B%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2FTracev((stderr%2C%20'inflate%3A%20%20%20%20%20%20%20codes%20ok%5Cn'))%3B%0A%20%20%20%20%20%20state.mode%20%3D%20LEN_%3B%0A%20%20%20%20%20%20if%20(flush%20%3D%3D%3D%20Z_TREES)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%2F*%20falls%20through%20*%2F%0A%20%20%20%20case%20LEN_%3A%0A%20%20%20%20%20%20state.mode%20%3D%20LEN%3B%0A%20%20%20%20%20%20%2F*%20falls%20through%20*%2F%0A%20%20%20%20case%20LEN%3A%0A%20%20%20%20%20%20if%20(have%20%3E%3D%206%20%26%26%20left%20%3E%3D%20258)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F---%20RESTORE()%20---%0A%20%20%20%20%20%20%20%20strm.next_out%20%3D%20put%3B%0A%20%20%20%20%20%20%20%20strm.avail_out%20%3D%20left%3B%0A%20%20%20%20%20%20%20%20strm.next_in%20%3D%20next%3B%0A%20%20%20%20%20%20%20%20strm.avail_in%20%3D%20have%3B%0A%20%20%20%20%20%20%20%20state.hold%20%3D%20hold%3B%0A%20%20%20%20%20%20%20%20state.bits%20%3D%20bits%3B%0A%20%20%20%20%20%20%20%20%2F%2F---%0A%20%20%20%20%20%20%20%20inflate_fast(strm%2C%20_out)%3B%0A%20%20%20%20%20%20%20%20%2F%2F---%20LOAD()%20---%0A%20%20%20%20%20%20%20%20put%20%3D%20strm.next_out%3B%0A%20%20%20%20%20%20%20%20output%20%3D%20strm.output%3B%0A%20%20%20%20%20%20%20%20left%20%3D%20strm.avail_out%3B%0A%20%20%20%20%20%20%20%20next%20%3D%20strm.next_in%3B%0A%20%20%20%20%20%20%20%20input%20%3D%20strm.input%3B%0A%20%20%20%20%20%20%20%20have%20%3D%20strm.avail_in%3B%0A%20%20%20%20%20%20%20%20hold%20%3D%20state.hold%3B%0A%20%20%20%20%20%20%20%20bits%20%3D%20state.bits%3B%0A%20%20%20%20%20%20%20%20%2F%2F---%0A%0A%20%20%20%20%20%20%20%20if%20(state.mode%20%3D%3D%3D%20TYPE)%20%7B%0A%20%20%20%20%20%20%20%20%20%20state.back%20%3D%20-1%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20state.back%20%3D%200%3B%0A%20%20%20%20%20%20for%20(%3B%3B)%20%7B%0A%20%20%20%20%20%20%20%20here%20%3D%20state.lencode%5Bhold%20%26%20((1%20%3C%3C%20state.lenbits)%20-%201)%5D%3B%20%20%2F*BITS(state.lenbits)*%2F%0A%20%20%20%20%20%20%20%20here_bits%20%3D%20here%20%3E%3E%3E%2024%3B%0A%20%20%20%20%20%20%20%20here_op%20%3D%20(here%20%3E%3E%3E%2016)%20%26%200xff%3B%0A%20%20%20%20%20%20%20%20here_val%20%3D%20here%20%26%200xffff%3B%0A%0A%20%20%20%20%20%20%20%20if%20(here_bits%20%3C%3D%20bits)%20%7B%20break%3B%20%7D%0A%20%20%20%20%20%20%20%20%2F%2F---%20PULLBYTE()%20---%2F%2F%0A%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20have--%3B%0A%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5Bnext%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(here_op%20%26%26%20(here_op%20%26%200xf0)%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20last_bits%20%3D%20here_bits%3B%0A%20%20%20%20%20%20%20%20last_op%20%3D%20here_op%3B%0A%20%20%20%20%20%20%20%20last_val%20%3D%20here_val%3B%0A%20%20%20%20%20%20%20%20for%20(%3B%3B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20here%20%3D%20state.lencode%5Blast_val%20%2B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20((hold%20%26%20((1%20%3C%3C%20(last_bits%20%2B%20last_op))%20-%201))%2F*BITS(last.bits%20%2B%20last.op)*%2F%20%3E%3E%20last_bits)%5D%3B%0A%20%20%20%20%20%20%20%20%20%20here_bits%20%3D%20here%20%3E%3E%3E%2024%3B%0A%20%20%20%20%20%20%20%20%20%20here_op%20%3D%20(here%20%3E%3E%3E%2016)%20%26%200xff%3B%0A%20%20%20%20%20%20%20%20%20%20here_val%20%3D%20here%20%26%200xffff%3B%0A%0A%20%20%20%20%20%20%20%20%20%20if%20((last_bits%20%2B%20here_bits)%20%3C%3D%20bits)%20%7B%20break%3B%20%7D%0A%20%20%20%20%20%20%20%20%20%20%2F%2F---%20PULLBYTE()%20---%2F%2F%0A%20%20%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20%20%20have--%3B%0A%20%20%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5Bnext%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%2F%2F---%20DROPBITS(last.bits)%20---%2F%2F%0A%20%20%20%20%20%20%20%20hold%20%3E%3E%3E%3D%20last_bits%3B%0A%20%20%20%20%20%20%20%20bits%20-%3D%20last_bits%3B%0A%20%20%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20%20%20state.back%20%2B%3D%20last_bits%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2F---%20DROPBITS(here.bits)%20---%2F%2F%0A%20%20%20%20%20%20hold%20%3E%3E%3E%3D%20here_bits%3B%0A%20%20%20%20%20%20bits%20-%3D%20here_bits%3B%0A%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20state.back%20%2B%3D%20here_bits%3B%0A%20%20%20%20%20%20state.length%20%3D%20here_val%3B%0A%20%20%20%20%20%20if%20(here_op%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2FTracevv((stderr%2C%20here.val%20%3E%3D%200x20%20%26%26%20here.val%20%3C%200x7f%20%3F%0A%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20%22inflate%3A%20%20%20%20%20%20%20%20%20literal%20'%25c'%5Cn%22%20%3A%0A%20%20%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20%22inflate%3A%20%20%20%20%20%20%20%20%20literal%200x%2502x%5Cn%22%2C%20here.val))%3B%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20LIT%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(here_op%20%26%2032)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2FTracevv((stderr%2C%20%22inflate%3A%20%20%20%20%20%20%20%20%20end%20of%20block%5Cn%22))%3B%0A%20%20%20%20%20%20%20%20state.back%20%3D%20-1%3B%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20TYPE%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(here_op%20%26%2064)%20%7B%0A%20%20%20%20%20%20%20%20strm.msg%20%3D%20'invalid%20literal%2Flength%20code'%3B%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20state.extra%20%3D%20here_op%20%26%2015%3B%0A%20%20%20%20%20%20state.mode%20%3D%20LENEXT%3B%0A%20%20%20%20%20%20%2F*%20falls%20through%20*%2F%0A%20%20%20%20case%20LENEXT%3A%0A%20%20%20%20%20%20if%20(state.extra)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%20NEEDBITS(state.extra)%3B%0A%20%20%20%20%20%20%20%20n%20%3D%20state.extra%3B%0A%20%20%20%20%20%20%20%20while%20(bits%20%3C%20n)%20%7B%0A%20%20%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20%20%20have--%3B%0A%20%20%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5Bnext%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20%20%20state.length%20%2B%3D%20hold%20%26%20((1%20%3C%3C%20state.extra)%20-%201)%2F*BITS(state.extra)*%2F%3B%0A%20%20%20%20%20%20%20%20%2F%2F---%20DROPBITS(state.extra)%20---%2F%2F%0A%20%20%20%20%20%20%20%20hold%20%3E%3E%3E%3D%20state.extra%3B%0A%20%20%20%20%20%20%20%20bits%20-%3D%20state.extra%3B%0A%20%20%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20%20%20state.back%20%2B%3D%20state.extra%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2FTracevv((stderr%2C%20%22inflate%3A%20%20%20%20%20%20%20%20%20length%20%25u%5Cn%22%2C%20state.length))%3B%0A%20%20%20%20%20%20state.was%20%3D%20state.length%3B%0A%20%20%20%20%20%20state.mode%20%3D%20DIST%3B%0A%20%20%20%20%20%20%2F*%20falls%20through%20*%2F%0A%20%20%20%20case%20DIST%3A%0A%20%20%20%20%20%20for%20(%3B%3B)%20%7B%0A%20%20%20%20%20%20%20%20here%20%3D%20state.distcode%5Bhold%20%26%20((1%20%3C%3C%20state.distbits)%20-%201)%5D%3B%2F*BITS(state.distbits)*%2F%0A%20%20%20%20%20%20%20%20here_bits%20%3D%20here%20%3E%3E%3E%2024%3B%0A%20%20%20%20%20%20%20%20here_op%20%3D%20(here%20%3E%3E%3E%2016)%20%26%200xff%3B%0A%20%20%20%20%20%20%20%20here_val%20%3D%20here%20%26%200xffff%3B%0A%0A%20%20%20%20%20%20%20%20if%20((here_bits)%20%3C%3D%20bits)%20%7B%20break%3B%20%7D%0A%20%20%20%20%20%20%20%20%2F%2F---%20PULLBYTE()%20---%2F%2F%0A%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20have--%3B%0A%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5Bnext%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20((here_op%20%26%200xf0)%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20last_bits%20%3D%20here_bits%3B%0A%20%20%20%20%20%20%20%20last_op%20%3D%20here_op%3B%0A%20%20%20%20%20%20%20%20last_val%20%3D%20here_val%3B%0A%20%20%20%20%20%20%20%20for%20(%3B%3B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20here%20%3D%20state.distcode%5Blast_val%20%2B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20((hold%20%26%20((1%20%3C%3C%20(last_bits%20%2B%20last_op))%20-%201))%2F*BITS(last.bits%20%2B%20last.op)*%2F%20%3E%3E%20last_bits)%5D%3B%0A%20%20%20%20%20%20%20%20%20%20here_bits%20%3D%20here%20%3E%3E%3E%2024%3B%0A%20%20%20%20%20%20%20%20%20%20here_op%20%3D%20(here%20%3E%3E%3E%2016)%20%26%200xff%3B%0A%20%20%20%20%20%20%20%20%20%20here_val%20%3D%20here%20%26%200xffff%3B%0A%0A%20%20%20%20%20%20%20%20%20%20if%20((last_bits%20%2B%20here_bits)%20%3C%3D%20bits)%20%7B%20break%3B%20%7D%0A%20%20%20%20%20%20%20%20%20%20%2F%2F---%20PULLBYTE()%20---%2F%2F%0A%20%20%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20%20%20have--%3B%0A%20%20%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5Bnext%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%2F%2F---%20DROPBITS(last.bits)%20---%2F%2F%0A%20%20%20%20%20%20%20%20hold%20%3E%3E%3E%3D%20last_bits%3B%0A%20%20%20%20%20%20%20%20bits%20-%3D%20last_bits%3B%0A%20%20%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20%20%20state.back%20%2B%3D%20last_bits%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2F---%20DROPBITS(here.bits)%20---%2F%2F%0A%20%20%20%20%20%20hold%20%3E%3E%3E%3D%20here_bits%3B%0A%20%20%20%20%20%20bits%20-%3D%20here_bits%3B%0A%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20state.back%20%2B%3D%20here_bits%3B%0A%20%20%20%20%20%20if%20(here_op%20%26%2064)%20%7B%0A%20%20%20%20%20%20%20%20strm.msg%20%3D%20'invalid%20distance%20code'%3B%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20state.offset%20%3D%20here_val%3B%0A%20%20%20%20%20%20state.extra%20%3D%20(here_op)%20%26%2015%3B%0A%20%20%20%20%20%20state.mode%20%3D%20DISTEXT%3B%0A%20%20%20%20%20%20%2F*%20falls%20through%20*%2F%0A%20%20%20%20case%20DISTEXT%3A%0A%20%20%20%20%20%20if%20(state.extra)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%20NEEDBITS(state.extra)%3B%0A%20%20%20%20%20%20%20%20n%20%3D%20state.extra%3B%0A%20%20%20%20%20%20%20%20while%20(bits%20%3C%20n)%20%7B%0A%20%20%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20%20%20have--%3B%0A%20%20%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5Bnext%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20%20%20state.offset%20%2B%3D%20hold%20%26%20((1%20%3C%3C%20state.extra)%20-%201)%2F*BITS(state.extra)*%2F%3B%0A%20%20%20%20%20%20%20%20%2F%2F---%20DROPBITS(state.extra)%20---%2F%2F%0A%20%20%20%20%20%20%20%20hold%20%3E%3E%3E%3D%20state.extra%3B%0A%20%20%20%20%20%20%20%20bits%20-%3D%20state.extra%3B%0A%20%20%20%20%20%20%20%20%2F%2F---%2F%2F%0A%20%20%20%20%20%20%20%20state.back%20%2B%3D%20state.extra%3B%0A%20%20%20%20%20%20%7D%0A%2F%2F%23ifdef%20INFLATE_STRICT%0A%20%20%20%20%20%20if%20(state.offset%20%3E%20state.dmax)%20%7B%0A%20%20%20%20%20%20%20%20strm.msg%20%3D%20'invalid%20distance%20too%20far%20back'%3B%0A%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%7D%0A%2F%2F%23endif%0A%20%20%20%20%20%20%2F%2FTracevv((stderr%2C%20%22inflate%3A%20%20%20%20%20%20%20%20%20distance%20%25u%5Cn%22%2C%20state.offset))%3B%0A%20%20%20%20%20%20state.mode%20%3D%20MATCH%3B%0A%20%20%20%20%20%20%2F*%20falls%20through%20*%2F%0A%20%20%20%20case%20MATCH%3A%0A%20%20%20%20%20%20if%20(left%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20copy%20%3D%20_out%20-%20left%3B%0A%20%20%20%20%20%20if%20(state.offset%20%3E%20copy)%20%7B%20%20%20%20%20%20%20%20%20%2F*%20copy%20from%20window%20*%2F%0A%20%20%20%20%20%20%20%20copy%20%3D%20state.offset%20-%20copy%3B%0A%20%20%20%20%20%20%20%20if%20(copy%20%3E%20state.whave)%20%7B%0A%20%20%20%20%20%20%20%20%20%20if%20(state.sane)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20strm.msg%20%3D%20'invalid%20distance%20too%20far%20back'%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%2F%2F%20(!)%20This%20block%20is%20disabled%20in%20zlib%20defailts%2C%0A%2F%2F%20don't%20enable%20it%20for%20binary%20compatibility%0A%2F%2F%23ifdef%20INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR%0A%2F%2F%20%20%20%20%20%20%20%20%20%20Trace((stderr%2C%20%22inflate.c%20too%20far%5Cn%22))%3B%0A%2F%2F%20%20%20%20%20%20%20%20%20%20copy%20-%3D%20state.whave%3B%0A%2F%2F%20%20%20%20%20%20%20%20%20%20if%20(copy%20%3E%20state.length)%20%7B%20copy%20%3D%20state.length%3B%20%7D%0A%2F%2F%20%20%20%20%20%20%20%20%20%20if%20(copy%20%3E%20left)%20%7B%20copy%20%3D%20left%3B%20%7D%0A%2F%2F%20%20%20%20%20%20%20%20%20%20left%20-%3D%20copy%3B%0A%2F%2F%20%20%20%20%20%20%20%20%20%20state.length%20-%3D%20copy%3B%0A%2F%2F%20%20%20%20%20%20%20%20%20%20do%20%7B%0A%2F%2F%20%20%20%20%20%20%20%20%20%20%20%20output%5Bput%2B%2B%5D%20%3D%200%3B%0A%2F%2F%20%20%20%20%20%20%20%20%20%20%7D%20while%20(--copy)%3B%0A%2F%2F%20%20%20%20%20%20%20%20%20%20if%20(state.length%20%3D%3D%3D%200)%20%7B%20state.mode%20%3D%20LEN%3B%20%7D%0A%2F%2F%20%20%20%20%20%20%20%20%20%20break%3B%0A%2F%2F%23endif%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20if%20(copy%20%3E%20state.wnext)%20%7B%0A%20%20%20%20%20%20%20%20%20%20copy%20-%3D%20state.wnext%3B%0A%20%20%20%20%20%20%20%20%20%20from%20%3D%20state.wsize%20-%20copy%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20from%20%3D%20state.wnext%20-%20copy%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20if%20(copy%20%3E%20state.length)%20%7B%20copy%20%3D%20state.length%3B%20%7D%0A%20%20%20%20%20%20%20%20from_source%20%3D%20state.window%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20else%20%7B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20copy%20from%20output%20*%2F%0A%20%20%20%20%20%20%20%20from_source%20%3D%20output%3B%0A%20%20%20%20%20%20%20%20from%20%3D%20put%20-%20state.offset%3B%0A%20%20%20%20%20%20%20%20copy%20%3D%20state.length%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(copy%20%3E%20left)%20%7B%20copy%20%3D%20left%3B%20%7D%0A%20%20%20%20%20%20left%20-%3D%20copy%3B%0A%20%20%20%20%20%20state.length%20-%3D%20copy%3B%0A%20%20%20%20%20%20do%20%7B%0A%20%20%20%20%20%20%20%20output%5Bput%2B%2B%5D%20%3D%20from_source%5Bfrom%2B%2B%5D%3B%0A%20%20%20%20%20%20%7D%20while%20(--copy)%3B%0A%20%20%20%20%20%20if%20(state.length%20%3D%3D%3D%200)%20%7B%20state.mode%20%3D%20LEN%3B%20%7D%0A%20%20%20%20%20%20break%3B%0A%20%20%20%20case%20LIT%3A%0A%20%20%20%20%20%20if%20(left%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20output%5Bput%2B%2B%5D%20%3D%20state.length%3B%0A%20%20%20%20%20%20left--%3B%0A%20%20%20%20%20%20state.mode%20%3D%20LEN%3B%0A%20%20%20%20%20%20break%3B%0A%20%20%20%20case%20CHECK%3A%0A%20%20%20%20%20%20if%20(state.wrap)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%20NEEDBITS(32)%3B%0A%20%20%20%20%20%20%20%20while%20(bits%20%3C%2032)%20%7B%0A%20%20%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20%20%20have--%3B%0A%20%20%20%20%20%20%20%20%20%20%2F%2F%20Use%20'%7C'%20insdead%20of%20'%2B'%20to%20make%20sure%20that%20result%20is%20signed%0A%20%20%20%20%20%20%20%20%20%20hold%20%7C%3D%20input%5Bnext%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20%20%20_out%20-%3D%20left%3B%0A%20%20%20%20%20%20%20%20strm.total_out%20%2B%3D%20_out%3B%0A%20%20%20%20%20%20%20%20state.total%20%2B%3D%20_out%3B%0A%20%20%20%20%20%20%20%20if%20(_out)%20%7B%0A%20%20%20%20%20%20%20%20%20%20strm.adler%20%3D%20state.check%20%3D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*UPDATE(state.check%2C%20put%20-%20_out%2C%20_out)%3B*%2F%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20(state.flags%20%3F%20crc32(state.check%2C%20output%2C%20_out%2C%20put%20-%20_out)%20%3A%20adler32(state.check%2C%20output%2C%20_out%2C%20put%20-%20_out))%3B%0A%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20_out%20%3D%20left%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20NB%3A%20crc32%20stored%20as%20signed%2032-bit%20int%2C%20zswap32%20returns%20signed%20too%0A%20%20%20%20%20%20%20%20if%20((state.flags%20%3F%20hold%20%3A%20zswap32(hold))%20!%3D%3D%20state.check)%20%7B%0A%20%20%20%20%20%20%20%20%20%20strm.msg%20%3D%20'incorrect%20data%20check'%3B%0A%20%20%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%20INITBITS()%3B%0A%20%20%20%20%20%20%20%20hold%20%3D%200%3B%0A%20%20%20%20%20%20%20%20bits%20%3D%200%3B%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20%20%20%2F%2FTracev((stderr%2C%20%22inflate%3A%20%20%20check%20matches%20trailer%5Cn%22))%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20state.mode%20%3D%20LENGTH%3B%0A%20%20%20%20%20%20%2F*%20falls%20through%20*%2F%0A%20%20%20%20case%20LENGTH%3A%0A%20%20%20%20%20%20if%20(state.wrap%20%26%26%20state.flags)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%20NEEDBITS(32)%3B%0A%20%20%20%20%20%20%20%20while%20(bits%20%3C%2032)%20%7B%0A%20%20%20%20%20%20%20%20%20%20if%20(have%20%3D%3D%3D%200)%20%7B%20break%20inf_leave%3B%20%7D%0A%20%20%20%20%20%20%20%20%20%20have--%3B%0A%20%20%20%20%20%20%20%20%20%20hold%20%2B%3D%20input%5Bnext%2B%2B%5D%20%3C%3C%20bits%3B%0A%20%20%20%20%20%20%20%20%20%20bits%20%2B%3D%208%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20%20%20if%20(hold%20!%3D%3D%20(state.total%20%26%200xffffffff))%20%7B%0A%20%20%20%20%20%20%20%20%20%20strm.msg%20%3D%20'incorrect%20length%20check'%3B%0A%20%20%20%20%20%20%20%20%20%20state.mode%20%3D%20BAD%3B%0A%20%20%20%20%20%20%20%20%20%20break%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%20INITBITS()%3B%0A%20%20%20%20%20%20%20%20hold%20%3D%200%3B%0A%20%20%20%20%20%20%20%20bits%20%3D%200%3B%0A%20%20%20%20%20%20%20%20%2F%2F%3D%3D%3D%2F%2F%0A%20%20%20%20%20%20%20%20%2F%2FTracev((stderr%2C%20%22inflate%3A%20%20%20length%20matches%20trailer%5Cn%22))%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20state.mode%20%3D%20DONE%3B%0A%20%20%20%20%20%20%2F*%20falls%20through%20*%2F%0A%20%20%20%20case%20DONE%3A%0A%20%20%20%20%20%20ret%20%3D%20Z_STREAM_END%3B%0A%20%20%20%20%20%20break%20inf_leave%3B%0A%20%20%20%20case%20BAD%3A%0A%20%20%20%20%20%20ret%20%3D%20Z_DATA_ERROR%3B%0A%20%20%20%20%20%20break%20inf_leave%3B%0A%20%20%20%20case%20MEM%3A%0A%20%20%20%20%20%20return%20Z_MEM_ERROR%3B%0A%20%20%20%20case%20SYNC%3A%0A%20%20%20%20%20%20%2F*%20falls%20through%20*%2F%0A%20%20%20%20default%3A%0A%20%20%20%20%20%20return%20Z_STREAM_ERROR%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20%2F%2F%20inf_leave%20%3C-%20here%20is%20real%20place%20for%20%22goto%20inf_leave%22%2C%20emulated%20via%20%22break%20inf_leave%22%0A%0A%20%20%2F*%0A%20%20%20%20%20Return%20from%20inflate()%2C%20updating%20the%20total%20counts%20and%20the%20check%20value.%0A%20%20%20%20%20If%20there%20was%20no%20progress%20during%20the%20inflate()%20call%2C%20return%20a%20buffer%0A%20%20%20%20%20error.%20%20Call%20updatewindow()%20to%20create%20and%2For%20update%20the%20window%20state.%0A%20%20%20%20%20Note%3A%20a%20memory%20error%20from%20inflate()%20is%20non-recoverable.%0A%20%20%20*%2F%0A%0A%20%20%2F%2F---%20RESTORE()%20---%0A%20%20strm.next_out%20%3D%20put%3B%0A%20%20strm.avail_out%20%3D%20left%3B%0A%20%20strm.next_in%20%3D%20next%3B%0A%20%20strm.avail_in%20%3D%20have%3B%0A%20%20state.hold%20%3D%20hold%3B%0A%20%20state.bits%20%3D%20bits%3B%0A%20%20%2F%2F---%0A%0A%20%20if%20(state.wsize%20%7C%7C%20(_out%20!%3D%3D%20strm.avail_out%20%26%26%20state.mode%20%3C%20BAD%20%26%26%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(state.mode%20%3C%20CHECK%20%7C%7C%20flush%20!%3D%3D%20Z_FINISH)))%20%7B%0A%20%20%20%20if%20(updatewindow(strm%2C%20strm.output%2C%20strm.next_out%2C%20_out%20-%20strm.avail_out))%20%7B%0A%20%20%20%20%20%20state.mode%20%3D%20MEM%3B%0A%20%20%20%20%20%20return%20Z_MEM_ERROR%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20_in%20-%3D%20strm.avail_in%3B%0A%20%20_out%20-%3D%20strm.avail_out%3B%0A%20%20strm.total_in%20%2B%3D%20_in%3B%0A%20%20strm.total_out%20%2B%3D%20_out%3B%0A%20%20state.total%20%2B%3D%20_out%3B%0A%20%20if%20(state.wrap%20%26%26%20_out)%20%7B%0A%20%20%20%20strm.adler%20%3D%20state.check%20%3D%20%2F*UPDATE(state.check%2C%20strm.next_out%20-%20_out%2C%20_out)%3B*%2F%0A%20%20%20%20%20%20(state.flags%20%3F%20crc32(state.check%2C%20output%2C%20_out%2C%20strm.next_out%20-%20_out)%20%3A%20adler32(state.check%2C%20output%2C%20_out%2C%20strm.next_out%20-%20_out))%3B%0A%20%20%7D%0A%20%20strm.data_type%20%3D%20state.bits%20%2B%20(state.last%20%3F%2064%20%3A%200)%20%2B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(state.mode%20%3D%3D%3D%20TYPE%20%3F%20128%20%3A%200)%20%2B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20(state.mode%20%3D%3D%3D%20LEN_%20%7C%7C%20state.mode%20%3D%3D%3D%20COPY_%20%3F%20256%20%3A%200)%3B%0A%20%20if%20(((_in%20%3D%3D%3D%200%20%26%26%20_out%20%3D%3D%3D%200)%20%7C%7C%20flush%20%3D%3D%3D%20Z_FINISH)%20%26%26%20ret%20%3D%3D%3D%20Z_OK)%20%7B%0A%20%20%20%20ret%20%3D%20Z_BUF_ERROR%3B%0A%20%20%7D%0A%20%20return%20ret%3B%0A%7D%0A%0Afunction%20inflateEnd(strm)%20%7B%0A%0A%20%20if%20(!strm%20%7C%7C%20!strm.state%20%2F*%7C%7C%20strm-%3Ezfree%20%3D%3D%20(free_func)0*%2F)%20%7B%0A%20%20%20%20return%20Z_STREAM_ERROR%3B%0A%20%20%7D%0A%0A%20%20var%20state%20%3D%20strm.state%3B%0A%20%20if%20(state.window)%20%7B%0A%20%20%20%20state.window%20%3D%20null%3B%0A%20%20%7D%0A%20%20strm.state%20%3D%20null%3B%0A%20%20return%20Z_OK%3B%0A%7D%0A%0Afunction%20inflateGetHeader(strm%2C%20head)%20%7B%0A%20%20var%20state%3B%0A%0A%20%20%2F*%20check%20state%20*%2F%0A%20%20if%20(!strm%20%7C%7C%20!strm.state)%20%7B%20return%20Z_STREAM_ERROR%3B%20%7D%0A%20%20state%20%3D%20strm.state%3B%0A%20%20if%20((state.wrap%20%26%202)%20%3D%3D%3D%200)%20%7B%20return%20Z_STREAM_ERROR%3B%20%7D%0A%0A%20%20%2F*%20save%20header%20structure%20*%2F%0A%20%20state.head%20%3D%20head%3B%0A%20%20head.done%20%3D%20false%3B%0A%20%20return%20Z_OK%3B%0A%7D%0A%0A%0Aexports.inflateReset%20%3D%20inflateReset%3B%0Aexports.inflateReset2%20%3D%20inflateReset2%3B%0Aexports.inflateResetKeep%20%3D%20inflateResetKeep%3B%0Aexports.inflateInit%20%3D%20inflateInit%3B%0Aexports.inflateInit2%20%3D%20inflateInit2%3B%0Aexports.inflate%20%3D%20inflate%3B%0Aexports.inflateEnd%20%3D%20inflateEnd%3B%0Aexports.inflateGetHeader%20%3D%20inflateGetHeader%3B%0Aexports.inflateInfo%20%3D%20'pako%20inflate%20(from%20Nodeca%20project)'%3B%0A%0A%2F*%20Not%20implemented%0Aexports.inflateCopy%20%3D%20inflateCopy%3B%0Aexports.inflateGetDictionary%20%3D%20inflateGetDictionary%3B%0Aexports.inflateMark%20%3D%20inflateMark%3B%0Aexports.inflatePrime%20%3D%20inflatePrime%3B%0Aexports.inflateSetDictionary%20%3D%20inflateSetDictionary%3B%0Aexports.inflateSync%20%3D%20inflateSync%3B%0Aexports.inflateSyncPoint%20%3D%20inflateSyncPoint%3B%0Aexports.inflateUndermine%20%3D%20inflateUndermine%3B%0A*%2F%0A%0A%7D%2C%7B%22..%2Futils%2Fcommon%22%3A28%2C%22.%2Fadler32%22%3A30%2C%22.%2Fcrc32%22%3A32%2C%22.%2Finffast%22%3A35%2C%22.%2Finftrees%22%3A37%7D%5D%2C37%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0A%0A%0Avar%20utils%20%3D%20require('..%2Futils%2Fcommon')%3B%0A%0Avar%20MAXBITS%20%3D%2015%3B%0Avar%20ENOUGH_LENS%20%3D%20852%3B%0Avar%20ENOUGH_DISTS%20%3D%20592%3B%0A%2F%2Fvar%20ENOUGH%20%3D%20(ENOUGH_LENS%2BENOUGH_DISTS)%3B%0A%0Avar%20CODES%20%3D%200%3B%0Avar%20LENS%20%3D%201%3B%0Avar%20DISTS%20%3D%202%3B%0A%0Avar%20lbase%20%3D%20%5B%20%2F*%20Length%20codes%20257..285%20base%20*%2F%0A%20%203%2C%204%2C%205%2C%206%2C%207%2C%208%2C%209%2C%2010%2C%2011%2C%2013%2C%2015%2C%2017%2C%2019%2C%2023%2C%2027%2C%2031%2C%0A%20%2035%2C%2043%2C%2051%2C%2059%2C%2067%2C%2083%2C%2099%2C%20115%2C%20131%2C%20163%2C%20195%2C%20227%2C%20258%2C%200%2C%200%0A%5D%3B%0A%0Avar%20lext%20%3D%20%5B%20%2F*%20Length%20codes%20257..285%20extra%20*%2F%0A%20%2016%2C%2016%2C%2016%2C%2016%2C%2016%2C%2016%2C%2016%2C%2016%2C%2017%2C%2017%2C%2017%2C%2017%2C%2018%2C%2018%2C%2018%2C%2018%2C%0A%20%2019%2C%2019%2C%2019%2C%2019%2C%2020%2C%2020%2C%2020%2C%2020%2C%2021%2C%2021%2C%2021%2C%2021%2C%2016%2C%2072%2C%2078%0A%5D%3B%0A%0Avar%20dbase%20%3D%20%5B%20%2F*%20Distance%20codes%200..29%20base%20*%2F%0A%20%201%2C%202%2C%203%2C%204%2C%205%2C%207%2C%209%2C%2013%2C%2017%2C%2025%2C%2033%2C%2049%2C%2065%2C%2097%2C%20129%2C%20193%2C%0A%20%20257%2C%20385%2C%20513%2C%20769%2C%201025%2C%201537%2C%202049%2C%203073%2C%204097%2C%206145%2C%0A%20%208193%2C%2012289%2C%2016385%2C%2024577%2C%200%2C%200%0A%5D%3B%0A%0Avar%20dext%20%3D%20%5B%20%2F*%20Distance%20codes%200..29%20extra%20*%2F%0A%20%2016%2C%2016%2C%2016%2C%2016%2C%2017%2C%2017%2C%2018%2C%2018%2C%2019%2C%2019%2C%2020%2C%2020%2C%2021%2C%2021%2C%2022%2C%2022%2C%0A%20%2023%2C%2023%2C%2024%2C%2024%2C%2025%2C%2025%2C%2026%2C%2026%2C%2027%2C%2027%2C%0A%20%2028%2C%2028%2C%2029%2C%2029%2C%2064%2C%2064%0A%5D%3B%0A%0Amodule.exports%20%3D%20function%20inflate_table(type%2C%20lens%2C%20lens_index%2C%20codes%2C%20table%2C%20table_index%2C%20work%2C%20opts)%0A%7B%0A%20%20var%20bits%20%3D%20opts.bits%3B%0A%20%20%20%20%20%20%2F%2Fhere%20%3D%20opts.here%3B%20%2F*%20table%20entry%20for%20duplication%20*%2F%0A%0A%20%20var%20len%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20a%20code's%20length%20in%20bits%20*%2F%0A%20%20var%20sym%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20index%20of%20code%20symbols%20*%2F%0A%20%20var%20min%20%3D%200%2C%20max%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%2F*%20minimum%20and%20maximum%20code%20lengths%20*%2F%0A%20%20var%20root%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20number%20of%20index%20bits%20for%20root%20table%20*%2F%0A%20%20var%20curr%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20number%20of%20index%20bits%20for%20current%20table%20*%2F%0A%20%20var%20drop%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20code%20bits%20to%20drop%20for%20sub-table%20*%2F%0A%20%20var%20left%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20number%20of%20prefix%20codes%20available%20*%2F%0A%20%20var%20used%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20code%20entries%20in%20table%20used%20*%2F%0A%20%20var%20huff%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20Huffman%20code%20*%2F%0A%20%20var%20incr%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20for%20incrementing%20code%2C%20index%20*%2F%0A%20%20var%20fill%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20index%20for%20replicating%20entries%20*%2F%0A%20%20var%20low%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20low%20bits%20for%20current%20root%20entry%20*%2F%0A%20%20var%20mask%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20mask%20for%20low%20root%20bits%20*%2F%0A%20%20var%20next%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20next%20available%20space%20in%20table%20*%2F%0A%20%20var%20base%20%3D%20null%3B%20%20%20%20%20%2F*%20base%20value%20table%20to%20use%20*%2F%0A%20%20var%20base_index%20%3D%200%3B%0A%2F%2F%20%20var%20shoextra%3B%20%20%20%20%2F*%20extra%20bits%20table%20to%20use%20*%2F%0A%20%20var%20end%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20use%20base%20and%20extra%20for%20symbol%20%3E%20end%20*%2F%0A%20%20var%20count%20%3D%20new%20utils.Buf16(MAXBITS%20%2B%201)%3B%20%2F%2F%5BMAXBITS%2B1%5D%3B%20%20%20%20%2F*%20number%20of%20codes%20of%20each%20length%20*%2F%0A%20%20var%20offs%20%3D%20new%20utils.Buf16(MAXBITS%20%2B%201)%3B%20%2F%2F%5BMAXBITS%2B1%5D%3B%20%20%20%20%20%2F*%20offsets%20in%20table%20for%20each%20length%20*%2F%0A%20%20var%20extra%20%3D%20null%3B%0A%20%20var%20extra_index%20%3D%200%3B%0A%0A%20%20var%20here_bits%2C%20here_op%2C%20here_val%3B%0A%0A%20%20%2F*%0A%20%20%20Process%20a%20set%20of%20code%20lengths%20to%20create%20a%20canonical%20Huffman%20code.%20%20The%0A%20%20%20code%20lengths%20are%20lens%5B0..codes-1%5D.%20%20Each%20length%20corresponds%20to%20the%0A%20%20%20symbols%200..codes-1.%20%20The%20Huffman%20code%20is%20generated%20by%20first%20sorting%20the%0A%20%20%20symbols%20by%20length%20from%20short%20to%20long%2C%20and%20retaining%20the%20symbol%20order%0A%20%20%20for%20codes%20with%20equal%20lengths.%20%20Then%20the%20code%20starts%20with%20all%20zero%20bits%0A%20%20%20for%20the%20first%20code%20of%20the%20shortest%20length%2C%20and%20the%20codes%20are%20integer%0A%20%20%20increments%20for%20the%20same%20length%2C%20and%20zeros%20are%20appended%20as%20the%20length%0A%20%20%20increases.%20%20For%20the%20deflate%20format%2C%20these%20bits%20are%20stored%20backwards%0A%20%20%20from%20their%20more%20natural%20integer%20increment%20ordering%2C%20and%20so%20when%20the%0A%20%20%20decoding%20tables%20are%20built%20in%20the%20large%20loop%20below%2C%20the%20integer%20codes%0A%20%20%20are%20incremented%20backwards.%0A%0A%20%20%20This%20routine%20assumes%2C%20but%20does%20not%20check%2C%20that%20all%20of%20the%20entries%20in%0A%20%20%20lens%5B%5D%20are%20in%20the%20range%200..MAXBITS.%20%20The%20caller%20must%20assure%20this.%0A%20%20%201..MAXBITS%20is%20interpreted%20as%20that%20code%20length.%20%20zero%20means%20that%20that%0A%20%20%20symbol%20does%20not%20occur%20in%20this%20code.%0A%0A%20%20%20The%20codes%20are%20sorted%20by%20computing%20a%20count%20of%20codes%20for%20each%20length%2C%0A%20%20%20creating%20from%20that%20a%20table%20of%20starting%20indices%20for%20each%20length%20in%20the%0A%20%20%20sorted%20table%2C%20and%20then%20entering%20the%20symbols%20in%20order%20in%20the%20sorted%0A%20%20%20table.%20%20The%20sorted%20table%20is%20work%5B%5D%2C%20with%20that%20space%20being%20provided%20by%0A%20%20%20the%20caller.%0A%0A%20%20%20The%20length%20counts%20are%20used%20for%20other%20purposes%20as%20well%2C%20i.e.%20finding%0A%20%20%20the%20minimum%20and%20maximum%20length%20codes%2C%20determining%20if%20there%20are%20any%0A%20%20%20codes%20at%20all%2C%20checking%20for%20a%20valid%20set%20of%20lengths%2C%20and%20looking%20ahead%0A%20%20%20at%20length%20counts%20to%20determine%20sub-table%20sizes%20when%20building%20the%0A%20%20%20decoding%20tables.%0A%20%20%20*%2F%0A%0A%20%20%2F*%20accumulate%20lengths%20for%20codes%20(assumes%20lens%5B%5D%20all%20in%200..MAXBITS)%20*%2F%0A%20%20for%20(len%20%3D%200%3B%20len%20%3C%3D%20MAXBITS%3B%20len%2B%2B)%20%7B%0A%20%20%20%20count%5Blen%5D%20%3D%200%3B%0A%20%20%7D%0A%20%20for%20(sym%20%3D%200%3B%20sym%20%3C%20codes%3B%20sym%2B%2B)%20%7B%0A%20%20%20%20count%5Blens%5Blens_index%20%2B%20sym%5D%5D%2B%2B%3B%0A%20%20%7D%0A%0A%20%20%2F*%20bound%20code%20lengths%2C%20force%20root%20to%20be%20within%20code%20lengths%20*%2F%0A%20%20root%20%3D%20bits%3B%0A%20%20for%20(max%20%3D%20MAXBITS%3B%20max%20%3E%3D%201%3B%20max--)%20%7B%0A%20%20%20%20if%20(count%5Bmax%5D%20!%3D%3D%200)%20%7B%20break%3B%20%7D%0A%20%20%7D%0A%20%20if%20(root%20%3E%20max)%20%7B%0A%20%20%20%20root%20%3D%20max%3B%0A%20%20%7D%0A%20%20if%20(max%20%3D%3D%3D%200)%20%7B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20no%20symbols%20to%20code%20at%20all%20*%2F%0A%20%20%20%20%2F%2Ftable.op%5Bopts.table_index%5D%20%3D%2064%3B%20%20%2F%2Fhere.op%20%3D%20(var%20char)64%3B%20%20%20%20%2F*%20invalid%20code%20marker%20*%2F%0A%20%20%20%20%2F%2Ftable.bits%5Bopts.table_index%5D%20%3D%201%3B%20%20%20%2F%2Fhere.bits%20%3D%20(var%20char)1%3B%0A%20%20%20%20%2F%2Ftable.val%5Bopts.table_index%2B%2B%5D%20%3D%200%3B%20%20%20%2F%2Fhere.val%20%3D%20(var%20short)0%3B%0A%20%20%20%20table%5Btable_index%2B%2B%5D%20%3D%20(1%20%3C%3C%2024)%20%7C%20(64%20%3C%3C%2016)%20%7C%200%3B%0A%0A%0A%20%20%20%20%2F%2Ftable.op%5Bopts.table_index%5D%20%3D%2064%3B%0A%20%20%20%20%2F%2Ftable.bits%5Bopts.table_index%5D%20%3D%201%3B%0A%20%20%20%20%2F%2Ftable.val%5Bopts.table_index%2B%2B%5D%20%3D%200%3B%0A%20%20%20%20table%5Btable_index%2B%2B%5D%20%3D%20(1%20%3C%3C%2024)%20%7C%20(64%20%3C%3C%2016)%20%7C%200%3B%0A%0A%20%20%20%20opts.bits%20%3D%201%3B%0A%20%20%20%20return%200%3B%20%20%20%20%20%2F*%20no%20symbols%2C%20but%20wait%20for%20decoding%20to%20report%20error%20*%2F%0A%20%20%7D%0A%20%20for%20(min%20%3D%201%3B%20min%20%3C%20max%3B%20min%2B%2B)%20%7B%0A%20%20%20%20if%20(count%5Bmin%5D%20!%3D%3D%200)%20%7B%20break%3B%20%7D%0A%20%20%7D%0A%20%20if%20(root%20%3C%20min)%20%7B%0A%20%20%20%20root%20%3D%20min%3B%0A%20%20%7D%0A%0A%20%20%2F*%20check%20for%20an%20over-subscribed%20or%20incomplete%20set%20of%20lengths%20*%2F%0A%20%20left%20%3D%201%3B%0A%20%20for%20(len%20%3D%201%3B%20len%20%3C%3D%20MAXBITS%3B%20len%2B%2B)%20%7B%0A%20%20%20%20left%20%3C%3C%3D%201%3B%0A%20%20%20%20left%20-%3D%20count%5Blen%5D%3B%0A%20%20%20%20if%20(left%20%3C%200)%20%7B%0A%20%20%20%20%20%20return%20-1%3B%0A%20%20%20%20%7D%20%20%20%20%20%20%20%20%2F*%20over-subscribed%20*%2F%0A%20%20%7D%0A%20%20if%20(left%20%3E%200%20%26%26%20(type%20%3D%3D%3D%20CODES%20%7C%7C%20max%20!%3D%3D%201))%20%7B%0A%20%20%20%20return%20-1%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20incomplete%20set%20*%2F%0A%20%20%7D%0A%0A%20%20%2F*%20generate%20offsets%20into%20symbol%20table%20for%20each%20length%20for%20sorting%20*%2F%0A%20%20offs%5B1%5D%20%3D%200%3B%0A%20%20for%20(len%20%3D%201%3B%20len%20%3C%20MAXBITS%3B%20len%2B%2B)%20%7B%0A%20%20%20%20offs%5Blen%20%2B%201%5D%20%3D%20offs%5Blen%5D%20%2B%20count%5Blen%5D%3B%0A%20%20%7D%0A%0A%20%20%2F*%20sort%20symbols%20by%20length%2C%20by%20symbol%20order%20within%20each%20length%20*%2F%0A%20%20for%20(sym%20%3D%200%3B%20sym%20%3C%20codes%3B%20sym%2B%2B)%20%7B%0A%20%20%20%20if%20(lens%5Blens_index%20%2B%20sym%5D%20!%3D%3D%200)%20%7B%0A%20%20%20%20%20%20work%5Boffs%5Blens%5Blens_index%20%2B%20sym%5D%5D%2B%2B%5D%20%3D%20sym%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20%2F*%0A%20%20%20Create%20and%20fill%20in%20decoding%20tables.%20%20In%20this%20loop%2C%20the%20table%20being%0A%20%20%20filled%20is%20at%20next%20and%20has%20curr%20index%20bits.%20%20The%20code%20being%20used%20is%20huff%0A%20%20%20with%20length%20len.%20%20That%20code%20is%20converted%20to%20an%20index%20by%20dropping%20drop%0A%20%20%20bits%20off%20of%20the%20bottom.%20%20For%20codes%20where%20len%20is%20less%20than%20drop%20%2B%20curr%2C%0A%20%20%20those%20top%20drop%20%2B%20curr%20-%20len%20bits%20are%20incremented%20through%20all%20values%20to%0A%20%20%20fill%20the%20table%20with%20replicated%20entries.%0A%0A%20%20%20root%20is%20the%20number%20of%20index%20bits%20for%20the%20root%20table.%20%20When%20len%20exceeds%0A%20%20%20root%2C%20sub-tables%20are%20created%20pointed%20to%20by%20the%20root%20entry%20with%20an%20index%0A%20%20%20of%20the%20low%20root%20bits%20of%20huff.%20%20This%20is%20saved%20in%20low%20to%20check%20for%20when%20a%0A%20%20%20new%20sub-table%20should%20be%20started.%20%20drop%20is%20zero%20when%20the%20root%20table%20is%0A%20%20%20being%20filled%2C%20and%20drop%20is%20root%20when%20sub-tables%20are%20being%20filled.%0A%0A%20%20%20When%20a%20new%20sub-table%20is%20needed%2C%20it%20is%20necessary%20to%20look%20ahead%20in%20the%0A%20%20%20code%20lengths%20to%20determine%20what%20size%20sub-table%20is%20needed.%20%20The%20length%0A%20%20%20counts%20are%20used%20for%20this%2C%20and%20so%20count%5B%5D%20is%20decremented%20as%20codes%20are%0A%20%20%20entered%20in%20the%20tables.%0A%0A%20%20%20used%20keeps%20track%20of%20how%20many%20table%20entries%20have%20been%20allocated%20from%20the%0A%20%20%20provided%20*table%20space.%20%20It%20is%20checked%20for%20LENS%20and%20DIST%20tables%20against%0A%20%20%20the%20constants%20ENOUGH_LENS%20and%20ENOUGH_DISTS%20to%20guard%20against%20changes%20in%0A%20%20%20the%20initial%20root%20table%20size%20constants.%20%20See%20the%20comments%20in%20inftrees.h%0A%20%20%20for%20more%20information.%0A%0A%20%20%20sym%20increments%20through%20all%20symbols%2C%20and%20the%20loop%20terminates%20when%0A%20%20%20all%20codes%20of%20length%20max%2C%20i.e.%20all%20codes%2C%20have%20been%20processed.%20%20This%0A%20%20%20routine%20permits%20incomplete%20codes%2C%20so%20another%20loop%20after%20this%20one%20fills%0A%20%20%20in%20the%20rest%20of%20the%20decoding%20tables%20with%20invalid%20code%20markers.%0A%20%20%20*%2F%0A%0A%20%20%2F*%20set%20up%20for%20code%20type%20*%2F%0A%20%20%2F%2F%20poor%20man%20optimization%20-%20use%20if-else%20instead%20of%20switch%2C%0A%20%20%2F%2F%20to%20avoid%20deopts%20in%20old%20v8%0A%20%20if%20(type%20%3D%3D%3D%20CODES)%20%7B%0A%20%20%20%20base%20%3D%20extra%20%3D%20work%3B%20%20%20%20%2F*%20dummy%20value--not%20used%20*%2F%0A%20%20%20%20end%20%3D%2019%3B%0A%0A%20%20%7D%20else%20if%20(type%20%3D%3D%3D%20LENS)%20%7B%0A%20%20%20%20base%20%3D%20lbase%3B%0A%20%20%20%20base_index%20-%3D%20257%3B%0A%20%20%20%20extra%20%3D%20lext%3B%0A%20%20%20%20extra_index%20-%3D%20257%3B%0A%20%20%20%20end%20%3D%20256%3B%0A%0A%20%20%7D%20else%20%7B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20DISTS%20*%2F%0A%20%20%20%20base%20%3D%20dbase%3B%0A%20%20%20%20extra%20%3D%20dext%3B%0A%20%20%20%20end%20%3D%20-1%3B%0A%20%20%7D%0A%0A%20%20%2F*%20initialize%20opts%20for%20loop%20*%2F%0A%20%20huff%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20starting%20code%20*%2F%0A%20%20sym%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20starting%20code%20symbol%20*%2F%0A%20%20len%20%3D%20min%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20starting%20code%20length%20*%2F%0A%20%20next%20%3D%20table_index%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20current%20table%20to%20fill%20in%20*%2F%0A%20%20curr%20%3D%20root%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20current%20table%20index%20bits%20*%2F%0A%20%20drop%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20current%20bits%20to%20drop%20from%20code%20for%20index%20*%2F%0A%20%20low%20%3D%20-1%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20trigger%20new%20sub-table%20when%20len%20%3E%20root%20*%2F%0A%20%20used%20%3D%201%20%3C%3C%20root%3B%20%20%20%20%20%20%20%20%20%20%2F*%20use%20root%20table%20entries%20*%2F%0A%20%20mask%20%3D%20used%20-%201%3B%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20mask%20for%20comparing%20low%20*%2F%0A%0A%20%20%2F*%20check%20available%20table%20space%20*%2F%0A%20%20if%20((type%20%3D%3D%3D%20LENS%20%26%26%20used%20%3E%20ENOUGH_LENS)%20%7C%7C%0A%20%20%20%20(type%20%3D%3D%3D%20DISTS%20%26%26%20used%20%3E%20ENOUGH_DISTS))%20%7B%0A%20%20%20%20return%201%3B%0A%20%20%7D%0A%0A%20%20var%20i%20%3D%200%3B%0A%20%20%2F*%20process%20all%20codes%20and%20make%20table%20entries%20*%2F%0A%20%20for%20(%3B%3B)%20%7B%0A%20%20%20%20i%2B%2B%3B%0A%20%20%20%20%2F*%20create%20table%20entry%20*%2F%0A%20%20%20%20here_bits%20%3D%20len%20-%20drop%3B%0A%20%20%20%20if%20(work%5Bsym%5D%20%3C%20end)%20%7B%0A%20%20%20%20%20%20here_op%20%3D%200%3B%0A%20%20%20%20%20%20here_val%20%3D%20work%5Bsym%5D%3B%0A%20%20%20%20%7D%0A%20%20%20%20else%20if%20(work%5Bsym%5D%20%3E%20end)%20%7B%0A%20%20%20%20%20%20here_op%20%3D%20extra%5Bextra_index%20%2B%20work%5Bsym%5D%5D%3B%0A%20%20%20%20%20%20here_val%20%3D%20base%5Bbase_index%20%2B%20work%5Bsym%5D%5D%3B%0A%20%20%20%20%7D%0A%20%20%20%20else%20%7B%0A%20%20%20%20%20%20here_op%20%3D%2032%20%2B%2064%3B%20%20%20%20%20%20%20%20%20%2F*%20end%20of%20block%20*%2F%0A%20%20%20%20%20%20here_val%20%3D%200%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F*%20replicate%20for%20those%20indices%20with%20low%20len%20bits%20equal%20to%20huff%20*%2F%0A%20%20%20%20incr%20%3D%201%20%3C%3C%20(len%20-%20drop)%3B%0A%20%20%20%20fill%20%3D%201%20%3C%3C%20curr%3B%0A%20%20%20%20min%20%3D%20fill%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20save%20offset%20to%20next%20table%20*%2F%0A%20%20%20%20do%20%7B%0A%20%20%20%20%20%20fill%20-%3D%20incr%3B%0A%20%20%20%20%20%20table%5Bnext%20%2B%20(huff%20%3E%3E%20drop)%20%2B%20fill%5D%20%3D%20(here_bits%20%3C%3C%2024)%20%7C%20(here_op%20%3C%3C%2016)%20%7C%20here_val%20%7C0%3B%0A%20%20%20%20%7D%20while%20(fill%20!%3D%3D%200)%3B%0A%0A%20%20%20%20%2F*%20backwards%20increment%20the%20len-bit%20code%20huff%20*%2F%0A%20%20%20%20incr%20%3D%201%20%3C%3C%20(len%20-%201)%3B%0A%20%20%20%20while%20(huff%20%26%20incr)%20%7B%0A%20%20%20%20%20%20incr%20%3E%3E%3D%201%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20(incr%20!%3D%3D%200)%20%7B%0A%20%20%20%20%20%20huff%20%26%3D%20incr%20-%201%3B%0A%20%20%20%20%20%20huff%20%2B%3D%20incr%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20huff%20%3D%200%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F*%20go%20to%20next%20symbol%2C%20update%20count%2C%20len%20*%2F%0A%20%20%20%20sym%2B%2B%3B%0A%20%20%20%20if%20(--count%5Blen%5D%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20if%20(len%20%3D%3D%3D%20max)%20%7B%20break%3B%20%7D%0A%20%20%20%20%20%20len%20%3D%20lens%5Blens_index%20%2B%20work%5Bsym%5D%5D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F*%20create%20new%20sub-table%20if%20needed%20*%2F%0A%20%20%20%20if%20(len%20%3E%20root%20%26%26%20(huff%20%26%20mask)%20!%3D%3D%20low)%20%7B%0A%20%20%20%20%20%20%2F*%20if%20first%20time%2C%20transition%20to%20sub-tables%20*%2F%0A%20%20%20%20%20%20if%20(drop%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20drop%20%3D%20root%3B%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%2F*%20increment%20past%20last%20table%20*%2F%0A%20%20%20%20%20%20next%20%2B%3D%20min%3B%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20here%20min%20is%201%20%3C%3C%20curr%20*%2F%0A%0A%20%20%20%20%20%20%2F*%20determine%20length%20of%20next%20table%20*%2F%0A%20%20%20%20%20%20curr%20%3D%20len%20-%20drop%3B%0A%20%20%20%20%20%20left%20%3D%201%20%3C%3C%20curr%3B%0A%20%20%20%20%20%20while%20(curr%20%2B%20drop%20%3C%20max)%20%7B%0A%20%20%20%20%20%20%20%20left%20-%3D%20count%5Bcurr%20%2B%20drop%5D%3B%0A%20%20%20%20%20%20%20%20if%20(left%20%3C%3D%200)%20%7B%20break%3B%20%7D%0A%20%20%20%20%20%20%20%20curr%2B%2B%3B%0A%20%20%20%20%20%20%20%20left%20%3C%3C%3D%201%3B%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%2F*%20check%20for%20enough%20space%20*%2F%0A%20%20%20%20%20%20used%20%2B%3D%201%20%3C%3C%20curr%3B%0A%20%20%20%20%20%20if%20((type%20%3D%3D%3D%20LENS%20%26%26%20used%20%3E%20ENOUGH_LENS)%20%7C%7C%0A%20%20%20%20%20%20%20%20(type%20%3D%3D%3D%20DISTS%20%26%26%20used%20%3E%20ENOUGH_DISTS))%20%7B%0A%20%20%20%20%20%20%20%20return%201%3B%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%2F*%20point%20entry%20in%20root%20table%20to%20sub-table%20*%2F%0A%20%20%20%20%20%20low%20%3D%20huff%20%26%20mask%3B%0A%20%20%20%20%20%20%2F*table.op%5Blow%5D%20%3D%20curr%3B%0A%20%20%20%20%20%20table.bits%5Blow%5D%20%3D%20root%3B%0A%20%20%20%20%20%20table.val%5Blow%5D%20%3D%20next%20-%20opts.table_index%3B*%2F%0A%20%20%20%20%20%20table%5Blow%5D%20%3D%20(root%20%3C%3C%2024)%20%7C%20(curr%20%3C%3C%2016)%20%7C%20(next%20-%20table_index)%20%7C0%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20%2F*%20fill%20in%20remaining%20table%20entry%20if%20code%20is%20incomplete%20(guaranteed%20to%20have%0A%20%20%20at%20most%20one%20remaining%20entry%2C%20since%20if%20the%20code%20is%20incomplete%2C%20the%0A%20%20%20maximum%20code%20length%20that%20was%20allowed%20to%20get%20this%20far%20is%20one%20bit)%20*%2F%0A%20%20if%20(huff%20!%3D%3D%200)%20%7B%0A%20%20%20%20%2F%2Ftable.op%5Bnext%20%2B%20huff%5D%20%3D%2064%3B%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20invalid%20code%20marker%20*%2F%0A%20%20%20%20%2F%2Ftable.bits%5Bnext%20%2B%20huff%5D%20%3D%20len%20-%20drop%3B%0A%20%20%20%20%2F%2Ftable.val%5Bnext%20%2B%20huff%5D%20%3D%200%3B%0A%20%20%20%20table%5Bnext%20%2B%20huff%5D%20%3D%20((len%20-%20drop)%20%3C%3C%2024)%20%7C%20(64%20%3C%3C%2016)%20%7C0%3B%0A%20%20%7D%0A%0A%20%20%2F*%20set%20return%20parameters%20*%2F%0A%20%20%2F%2Fopts.table_index%20%2B%3D%20used%3B%0A%20%20opts.bits%20%3D%20root%3B%0A%20%20return%200%3B%0A%7D%3B%0A%0A%7D%2C%7B%22..%2Futils%2Fcommon%22%3A28%7D%5D%2C38%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0A%0Amodule.exports%20%3D%20%7B%0A%20%202%3A%20%20%20%20%20%20'need%20dictionary'%2C%20%20%20%20%20%2F*%20Z_NEED_DICT%20%20%20%20%20%20%202%20%20*%2F%0A%20%201%3A%20%20%20%20%20%20'stream%20end'%2C%20%20%20%20%20%20%20%20%20%20%2F*%20Z_STREAM_END%20%20%20%20%20%201%20%20*%2F%0A%20%200%3A%20%20%20%20%20%20''%2C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20Z_OK%20%20%20%20%20%20%20%20%20%20%20%20%20%200%20%20*%2F%0A%20%20'-1'%3A%20%20%20'file%20error'%2C%20%20%20%20%20%20%20%20%20%20%2F*%20Z_ERRNO%20%20%20%20%20%20%20%20%20(-1)%20*%2F%0A%20%20'-2'%3A%20%20%20'stream%20error'%2C%20%20%20%20%20%20%20%20%2F*%20Z_STREAM_ERROR%20%20(-2)%20*%2F%0A%20%20'-3'%3A%20%20%20'data%20error'%2C%20%20%20%20%20%20%20%20%20%20%2F*%20Z_DATA_ERROR%20%20%20%20(-3)%20*%2F%0A%20%20'-4'%3A%20%20%20'insufficient%20memory'%2C%20%2F*%20Z_MEM_ERROR%20%20%20%20%20(-4)%20*%2F%0A%20%20'-5'%3A%20%20%20'buffer%20error'%2C%20%20%20%20%20%20%20%20%2F*%20Z_BUF_ERROR%20%20%20%20%20(-5)%20*%2F%0A%20%20'-6'%3A%20%20%20'incompatible%20version'%20%2F*%20Z_VERSION_ERROR%20(-6)%20*%2F%0A%7D%3B%0A%0A%7D%2C%7B%7D%5D%2C39%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0A%0A%0Avar%20utils%20%3D%20require('..%2Futils%2Fcommon')%3B%0A%0A%2F*%20Public%20constants%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D*%2F%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D*%2F%0A%0A%0A%2F%2Fvar%20Z_FILTERED%20%20%20%20%20%20%20%20%20%20%3D%201%3B%0A%2F%2Fvar%20Z_HUFFMAN_ONLY%20%20%20%20%20%20%3D%202%3B%0A%2F%2Fvar%20Z_RLE%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%203%3B%0Avar%20Z_FIXED%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%204%3B%0A%2F%2Fvar%20Z_DEFAULT_STRATEGY%20%20%3D%200%3B%0A%0A%2F*%20Possible%20values%20of%20the%20data_type%20field%20(though%20see%20inflate())%20*%2F%0Avar%20Z_BINARY%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%200%3B%0Avar%20Z_TEXT%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%201%3B%0A%2F%2Fvar%20Z_ASCII%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%201%3B%20%2F%2F%20%3D%20Z_TEXT%0Avar%20Z_UNKNOWN%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%202%3B%0A%0A%2F*%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D*%2F%0A%0A%0Afunction%20zero(buf)%20%7B%20var%20len%20%3D%20buf.length%3B%20while%20(--len%20%3E%3D%200)%20%7B%20buf%5Blen%5D%20%3D%200%3B%20%7D%20%7D%0A%0A%2F%2F%20From%20zutil.h%0A%0Avar%20STORED_BLOCK%20%3D%200%3B%0Avar%20STATIC_TREES%20%3D%201%3B%0Avar%20DYN_TREES%20%20%20%20%3D%202%3B%0A%2F*%20The%20three%20kinds%20of%20block%20type%20*%2F%0A%0Avar%20MIN_MATCH%20%20%20%20%3D%203%3B%0Avar%20MAX_MATCH%20%20%20%20%3D%20258%3B%0A%2F*%20The%20minimum%20and%20maximum%20match%20lengths%20*%2F%0A%0A%2F%2F%20From%20deflate.h%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Internal%20compression%20state.%0A%20*%2F%0A%0Avar%20LENGTH_CODES%20%20%3D%2029%3B%0A%2F*%20number%20of%20length%20codes%2C%20not%20counting%20the%20special%20END_BLOCK%20code%20*%2F%0A%0Avar%20LITERALS%20%20%20%20%20%20%3D%20256%3B%0A%2F*%20number%20of%20literal%20bytes%200..255%20*%2F%0A%0Avar%20L_CODES%20%20%20%20%20%20%20%3D%20LITERALS%20%2B%201%20%2B%20LENGTH_CODES%3B%0A%2F*%20number%20of%20Literal%20or%20Length%20codes%2C%20including%20the%20END_BLOCK%20code%20*%2F%0A%0Avar%20D_CODES%20%20%20%20%20%20%20%3D%2030%3B%0A%2F*%20number%20of%20distance%20codes%20*%2F%0A%0Avar%20BL_CODES%20%20%20%20%20%20%3D%2019%3B%0A%2F*%20number%20of%20codes%20used%20to%20transfer%20the%20bit%20lengths%20*%2F%0A%0Avar%20HEAP_SIZE%20%20%20%20%20%3D%202%20*%20L_CODES%20%2B%201%3B%0A%2F*%20maximum%20heap%20size%20*%2F%0A%0Avar%20MAX_BITS%20%20%20%20%20%20%3D%2015%3B%0A%2F*%20All%20codes%20must%20not%20exceed%20MAX_BITS%20bits%20*%2F%0A%0Avar%20Buf_size%20%20%20%20%20%20%3D%2016%3B%0A%2F*%20size%20of%20bit%20buffer%20in%20bi_buf%20*%2F%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Constants%0A%20*%2F%0A%0Avar%20MAX_BL_BITS%20%3D%207%3B%0A%2F*%20Bit%20length%20codes%20must%20not%20exceed%20MAX_BL_BITS%20bits%20*%2F%0A%0Avar%20END_BLOCK%20%20%20%3D%20256%3B%0A%2F*%20end%20of%20block%20literal%20code%20*%2F%0A%0Avar%20REP_3_6%20%20%20%20%20%3D%2016%3B%0A%2F*%20repeat%20previous%20bit%20length%203-6%20times%20(2%20bits%20of%20repeat%20count)%20*%2F%0A%0Avar%20REPZ_3_10%20%20%20%3D%2017%3B%0A%2F*%20repeat%20a%20zero%20length%203-10%20times%20%20(3%20bits%20of%20repeat%20count)%20*%2F%0A%0Avar%20REPZ_11_138%20%3D%2018%3B%0A%2F*%20repeat%20a%20zero%20length%2011-138%20times%20%20(7%20bits%20of%20repeat%20count)%20*%2F%0A%0A%2F*%20eslint-disable%20comma-spacing%2Carray-bracket-spacing%20*%2F%0Avar%20extra_lbits%20%3D%20%20%20%2F*%20extra%20bits%20for%20each%20length%20code%20*%2F%0A%20%20%5B0%2C0%2C0%2C0%2C0%2C0%2C0%2C0%2C1%2C1%2C1%2C1%2C2%2C2%2C2%2C2%2C3%2C3%2C3%2C3%2C4%2C4%2C4%2C4%2C5%2C5%2C5%2C5%2C0%5D%3B%0A%0Avar%20extra_dbits%20%3D%20%20%20%2F*%20extra%20bits%20for%20each%20distance%20code%20*%2F%0A%20%20%5B0%2C0%2C0%2C0%2C1%2C1%2C2%2C2%2C3%2C3%2C4%2C4%2C5%2C5%2C6%2C6%2C7%2C7%2C8%2C8%2C9%2C9%2C10%2C10%2C11%2C11%2C12%2C12%2C13%2C13%5D%3B%0A%0Avar%20extra_blbits%20%3D%20%20%2F*%20extra%20bits%20for%20each%20bit%20length%20code%20*%2F%0A%20%20%5B0%2C0%2C0%2C0%2C0%2C0%2C0%2C0%2C0%2C0%2C0%2C0%2C0%2C0%2C0%2C0%2C2%2C3%2C7%5D%3B%0A%0Avar%20bl_order%20%3D%0A%20%20%5B16%2C17%2C18%2C0%2C8%2C7%2C9%2C6%2C10%2C5%2C11%2C4%2C12%2C3%2C13%2C2%2C14%2C1%2C15%5D%3B%0A%2F*%20eslint-enable%20comma-spacing%2Carray-bracket-spacing%20*%2F%0A%0A%2F*%20The%20lengths%20of%20the%20bit%20length%20codes%20are%20sent%20in%20order%20of%20decreasing%0A%20*%20probability%2C%20to%20avoid%20transmitting%20the%20lengths%20for%20unused%20bit%20length%20codes.%0A%20*%2F%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Local%20data.%20These%20are%20initialized%20only%20once.%0A%20*%2F%0A%0A%2F%2F%20We%20pre-fill%20arrays%20with%200%20to%20avoid%20uninitialized%20gaps%0A%0Avar%20DIST_CODE_LEN%20%3D%20512%3B%20%2F*%20see%20definition%20of%20array%20dist_code%20below%20*%2F%0A%0A%2F%2F%20!!!!%20Use%20flat%20array%20insdead%20of%20structure%2C%20Freq%20%3D%20i*2%2C%20Len%20%3D%20i*2%2B1%0Avar%20static_ltree%20%20%3D%20new%20Array((L_CODES%20%2B%202)%20*%202)%3B%0Azero(static_ltree)%3B%0A%2F*%20The%20static%20literal%20tree.%20Since%20the%20bit%20lengths%20are%20imposed%2C%20there%20is%20no%0A%20*%20need%20for%20the%20L_CODES%20extra%20codes%20used%20during%20heap%20construction.%20However%0A%20*%20The%20codes%20286%20and%20287%20are%20needed%20to%20build%20a%20canonical%20tree%20(see%20_tr_init%0A%20*%20below).%0A%20*%2F%0A%0Avar%20static_dtree%20%20%3D%20new%20Array(D_CODES%20*%202)%3B%0Azero(static_dtree)%3B%0A%2F*%20The%20static%20distance%20tree.%20(Actually%20a%20trivial%20tree%20since%20all%20codes%20use%0A%20*%205%20bits.)%0A%20*%2F%0A%0Avar%20_dist_code%20%20%20%20%3D%20new%20Array(DIST_CODE_LEN)%3B%0Azero(_dist_code)%3B%0A%2F*%20Distance%20codes.%20The%20first%20256%20values%20correspond%20to%20the%20distances%0A%20*%203%20..%20258%2C%20the%20last%20256%20values%20correspond%20to%20the%20top%208%20bits%20of%0A%20*%20the%2015%20bit%20distances.%0A%20*%2F%0A%0Avar%20_length_code%20%20%3D%20new%20Array(MAX_MATCH%20-%20MIN_MATCH%20%2B%201)%3B%0Azero(_length_code)%3B%0A%2F*%20length%20code%20for%20each%20normalized%20match%20length%20(0%20%3D%3D%20MIN_MATCH)%20*%2F%0A%0Avar%20base_length%20%20%20%3D%20new%20Array(LENGTH_CODES)%3B%0Azero(base_length)%3B%0A%2F*%20First%20normalized%20length%20for%20each%20code%20(0%20%3D%20MIN_MATCH)%20*%2F%0A%0Avar%20base_dist%20%20%20%20%20%3D%20new%20Array(D_CODES)%3B%0Azero(base_dist)%3B%0A%2F*%20First%20normalized%20distance%20for%20each%20code%20(0%20%3D%20distance%20of%201)%20*%2F%0A%0A%0Afunction%20StaticTreeDesc(static_tree%2C%20extra_bits%2C%20extra_base%2C%20elems%2C%20max_length)%20%7B%0A%0A%20%20this.static_tree%20%20%3D%20static_tree%3B%20%20%2F*%20static%20tree%20or%20NULL%20*%2F%0A%20%20this.extra_bits%20%20%20%3D%20extra_bits%3B%20%20%20%2F*%20extra%20bits%20for%20each%20code%20or%20NULL%20*%2F%0A%20%20this.extra_base%20%20%20%3D%20extra_base%3B%20%20%20%2F*%20base%20index%20for%20extra_bits%20*%2F%0A%20%20this.elems%20%20%20%20%20%20%20%20%3D%20elems%3B%20%20%20%20%20%20%20%20%2F*%20max%20number%20of%20elements%20in%20the%20tree%20*%2F%0A%20%20this.max_length%20%20%20%3D%20max_length%3B%20%20%20%2F*%20max%20bit%20length%20for%20the%20codes%20*%2F%0A%0A%20%20%2F%2F%20show%20if%20%60static_tree%60%20has%20data%20or%20dummy%20-%20needed%20for%20monomorphic%20objects%0A%20%20this.has_stree%20%20%20%20%3D%20static_tree%20%26%26%20static_tree.length%3B%0A%7D%0A%0A%0Avar%20static_l_desc%3B%0Avar%20static_d_desc%3B%0Avar%20static_bl_desc%3B%0A%0A%0Afunction%20TreeDesc(dyn_tree%2C%20stat_desc)%20%7B%0A%20%20this.dyn_tree%20%3D%20dyn_tree%3B%20%20%20%20%20%2F*%20the%20dynamic%20tree%20*%2F%0A%20%20this.max_code%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20largest%20code%20with%20non%20zero%20frequency%20*%2F%0A%20%20this.stat_desc%20%3D%20stat_desc%3B%20%20%20%2F*%20the%20corresponding%20static%20tree%20*%2F%0A%7D%0A%0A%0A%0Afunction%20d_code(dist)%20%7B%0A%20%20return%20dist%20%3C%20256%20%3F%20_dist_code%5Bdist%5D%20%3A%20_dist_code%5B256%20%2B%20(dist%20%3E%3E%3E%207)%5D%3B%0A%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Output%20a%20short%20LSB%20first%20on%20the%20stream.%0A%20*%20IN%20assertion%3A%20there%20is%20enough%20room%20in%20pendingBuf.%0A%20*%2F%0Afunction%20put_short(s%2C%20w)%20%7B%0A%2F%2F%20%20%20%20put_byte(s%2C%20(uch)((w)%20%26%200xff))%3B%0A%2F%2F%20%20%20%20put_byte(s%2C%20(uch)((ush)(w)%20%3E%3E%208))%3B%0A%20%20s.pending_buf%5Bs.pending%2B%2B%5D%20%3D%20(w)%20%26%200xff%3B%0A%20%20s.pending_buf%5Bs.pending%2B%2B%5D%20%3D%20(w%20%3E%3E%3E%208)%20%26%200xff%3B%0A%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Send%20a%20value%20on%20a%20given%20number%20of%20bits.%0A%20*%20IN%20assertion%3A%20length%20%3C%3D%2016%20and%20value%20fits%20in%20length%20bits.%0A%20*%2F%0Afunction%20send_bits(s%2C%20value%2C%20length)%20%7B%0A%20%20if%20(s.bi_valid%20%3E%20(Buf_size%20-%20length))%20%7B%0A%20%20%20%20s.bi_buf%20%7C%3D%20(value%20%3C%3C%20s.bi_valid)%20%26%200xffff%3B%0A%20%20%20%20put_short(s%2C%20s.bi_buf)%3B%0A%20%20%20%20s.bi_buf%20%3D%20value%20%3E%3E%20(Buf_size%20-%20s.bi_valid)%3B%0A%20%20%20%20s.bi_valid%20%2B%3D%20length%20-%20Buf_size%3B%0A%20%20%7D%20else%20%7B%0A%20%20%20%20s.bi_buf%20%7C%3D%20(value%20%3C%3C%20s.bi_valid)%20%26%200xffff%3B%0A%20%20%20%20s.bi_valid%20%2B%3D%20length%3B%0A%20%20%7D%0A%7D%0A%0A%0Afunction%20send_code(s%2C%20c%2C%20tree)%20%7B%0A%20%20send_bits(s%2C%20tree%5Bc%20*%202%5D%2F*.Code*%2F%2C%20tree%5Bc%20*%202%20%2B%201%5D%2F*.Len*%2F)%3B%0A%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Reverse%20the%20first%20len%20bits%20of%20a%20code%2C%20using%20straightforward%20code%20(a%20faster%0A%20*%20method%20would%20use%20a%20table)%0A%20*%20IN%20assertion%3A%201%20%3C%3D%20len%20%3C%3D%2015%0A%20*%2F%0Afunction%20bi_reverse(code%2C%20len)%20%7B%0A%20%20var%20res%20%3D%200%3B%0A%20%20do%20%7B%0A%20%20%20%20res%20%7C%3D%20code%20%26%201%3B%0A%20%20%20%20code%20%3E%3E%3E%3D%201%3B%0A%20%20%20%20res%20%3C%3C%3D%201%3B%0A%20%20%7D%20while%20(--len%20%3E%200)%3B%0A%20%20return%20res%20%3E%3E%3E%201%3B%0A%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Flush%20the%20bit%20buffer%2C%20keeping%20at%20most%207%20bits%20in%20it.%0A%20*%2F%0Afunction%20bi_flush(s)%20%7B%0A%20%20if%20(s.bi_valid%20%3D%3D%3D%2016)%20%7B%0A%20%20%20%20put_short(s%2C%20s.bi_buf)%3B%0A%20%20%20%20s.bi_buf%20%3D%200%3B%0A%20%20%20%20s.bi_valid%20%3D%200%3B%0A%0A%20%20%7D%20else%20if%20(s.bi_valid%20%3E%3D%208)%20%7B%0A%20%20%20%20s.pending_buf%5Bs.pending%2B%2B%5D%20%3D%20s.bi_buf%20%26%200xff%3B%0A%20%20%20%20s.bi_buf%20%3E%3E%3D%208%3B%0A%20%20%20%20s.bi_valid%20-%3D%208%3B%0A%20%20%7D%0A%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Compute%20the%20optimal%20bit%20lengths%20for%20a%20tree%20and%20update%20the%20total%20bit%20length%0A%20*%20for%20the%20current%20block.%0A%20*%20IN%20assertion%3A%20the%20fields%20freq%20and%20dad%20are%20set%2C%20heap%5Bheap_max%5D%20and%0A%20*%20%20%20%20above%20are%20the%20tree%20nodes%20sorted%20by%20increasing%20frequency.%0A%20*%20OUT%20assertions%3A%20the%20field%20len%20is%20set%20to%20the%20optimal%20bit%20length%2C%20the%0A%20*%20%20%20%20%20array%20bl_count%20contains%20the%20frequencies%20for%20each%20bit%20length.%0A%20*%20%20%20%20%20The%20length%20opt_len%20is%20updated%3B%20static_len%20is%20also%20updated%20if%20stree%20is%0A%20*%20%20%20%20%20not%20null.%0A%20*%2F%0Afunction%20gen_bitlen(s%2C%20desc)%0A%2F%2F%20%20%20%20deflate_state%20*s%3B%0A%2F%2F%20%20%20%20tree_desc%20*desc%3B%20%20%20%20%2F*%20the%20tree%20descriptor%20*%2F%0A%7B%0A%20%20var%20tree%20%20%20%20%20%20%20%20%20%20%20%20%3D%20desc.dyn_tree%3B%0A%20%20var%20max_code%20%20%20%20%20%20%20%20%3D%20desc.max_code%3B%0A%20%20var%20stree%20%20%20%20%20%20%20%20%20%20%20%3D%20desc.stat_desc.static_tree%3B%0A%20%20var%20has_stree%20%20%20%20%20%20%20%3D%20desc.stat_desc.has_stree%3B%0A%20%20var%20extra%20%20%20%20%20%20%20%20%20%20%20%3D%20desc.stat_desc.extra_bits%3B%0A%20%20var%20base%20%20%20%20%20%20%20%20%20%20%20%20%3D%20desc.stat_desc.extra_base%3B%0A%20%20var%20max_length%20%20%20%20%20%20%3D%20desc.stat_desc.max_length%3B%0A%20%20var%20h%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20heap%20index%20*%2F%0A%20%20var%20n%2C%20m%3B%20%20%20%20%20%20%20%20%20%20%20%2F*%20iterate%20over%20the%20tree%20elements%20*%2F%0A%20%20var%20bits%3B%20%20%20%20%20%20%20%20%20%20%20%2F*%20bit%20length%20*%2F%0A%20%20var%20xbits%3B%20%20%20%20%20%20%20%20%20%20%2F*%20extra%20bits%20*%2F%0A%20%20var%20f%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20frequency%20*%2F%0A%20%20var%20overflow%20%3D%200%3B%20%20%20%2F*%20number%20of%20elements%20with%20bit%20length%20too%20large%20*%2F%0A%0A%20%20for%20(bits%20%3D%200%3B%20bits%20%3C%3D%20MAX_BITS%3B%20bits%2B%2B)%20%7B%0A%20%20%20%20s.bl_count%5Bbits%5D%20%3D%200%3B%0A%20%20%7D%0A%0A%20%20%2F*%20In%20a%20first%20pass%2C%20compute%20the%20optimal%20bit%20lengths%20(which%20may%0A%20%20%20*%20overflow%20in%20the%20case%20of%20the%20bit%20length%20tree).%0A%20%20%20*%2F%0A%20%20tree%5Bs.heap%5Bs.heap_max%5D%20*%202%20%2B%201%5D%2F*.Len*%2F%20%3D%200%3B%20%2F*%20root%20of%20the%20heap%20*%2F%0A%0A%20%20for%20(h%20%3D%20s.heap_max%20%2B%201%3B%20h%20%3C%20HEAP_SIZE%3B%20h%2B%2B)%20%7B%0A%20%20%20%20n%20%3D%20s.heap%5Bh%5D%3B%0A%20%20%20%20bits%20%3D%20tree%5Btree%5Bn%20*%202%20%2B%201%5D%2F*.Dad*%2F%20*%202%20%2B%201%5D%2F*.Len*%2F%20%2B%201%3B%0A%20%20%20%20if%20(bits%20%3E%20max_length)%20%7B%0A%20%20%20%20%20%20bits%20%3D%20max_length%3B%0A%20%20%20%20%20%20overflow%2B%2B%3B%0A%20%20%20%20%7D%0A%20%20%20%20tree%5Bn%20*%202%20%2B%201%5D%2F*.Len*%2F%20%3D%20bits%3B%0A%20%20%20%20%2F*%20We%20overwrite%20tree%5Bn%5D.Dad%20which%20is%20no%20longer%20needed%20*%2F%0A%0A%20%20%20%20if%20(n%20%3E%20max_code)%20%7B%20continue%3B%20%7D%20%2F*%20not%20a%20leaf%20node%20*%2F%0A%0A%20%20%20%20s.bl_count%5Bbits%5D%2B%2B%3B%0A%20%20%20%20xbits%20%3D%200%3B%0A%20%20%20%20if%20(n%20%3E%3D%20base)%20%7B%0A%20%20%20%20%20%20xbits%20%3D%20extra%5Bn%20-%20base%5D%3B%0A%20%20%20%20%7D%0A%20%20%20%20f%20%3D%20tree%5Bn%20*%202%5D%2F*.Freq*%2F%3B%0A%20%20%20%20s.opt_len%20%2B%3D%20f%20*%20(bits%20%2B%20xbits)%3B%0A%20%20%20%20if%20(has_stree)%20%7B%0A%20%20%20%20%20%20s.static_len%20%2B%3D%20f%20*%20(stree%5Bn%20*%202%20%2B%201%5D%2F*.Len*%2F%20%2B%20xbits)%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20if%20(overflow%20%3D%3D%3D%200)%20%7B%20return%3B%20%7D%0A%0A%20%20%2F%2F%20Trace((stderr%2C%22%5Cnbit%20length%20overflow%5Cn%22))%3B%0A%20%20%2F*%20This%20happens%20for%20example%20on%20obj2%20and%20pic%20of%20the%20Calgary%20corpus%20*%2F%0A%0A%20%20%2F*%20Find%20the%20first%20bit%20length%20which%20could%20increase%3A%20*%2F%0A%20%20do%20%7B%0A%20%20%20%20bits%20%3D%20max_length%20-%201%3B%0A%20%20%20%20while%20(s.bl_count%5Bbits%5D%20%3D%3D%3D%200)%20%7B%20bits--%3B%20%7D%0A%20%20%20%20s.bl_count%5Bbits%5D--%3B%20%20%20%20%20%20%2F*%20move%20one%20leaf%20down%20the%20tree%20*%2F%0A%20%20%20%20s.bl_count%5Bbits%20%2B%201%5D%20%2B%3D%202%3B%20%2F*%20move%20one%20overflow%20item%20as%20its%20brother%20*%2F%0A%20%20%20%20s.bl_count%5Bmax_length%5D--%3B%0A%20%20%20%20%2F*%20The%20brother%20of%20the%20overflow%20item%20also%20moves%20one%20step%20up%2C%0A%20%20%20%20%20*%20but%20this%20does%20not%20affect%20bl_count%5Bmax_length%5D%0A%20%20%20%20%20*%2F%0A%20%20%20%20overflow%20-%3D%202%3B%0A%20%20%7D%20while%20(overflow%20%3E%200)%3B%0A%0A%20%20%2F*%20Now%20recompute%20all%20bit%20lengths%2C%20scanning%20in%20increasing%20frequency.%0A%20%20%20*%20h%20is%20still%20equal%20to%20HEAP_SIZE.%20(It%20is%20simpler%20to%20reconstruct%20all%0A%20%20%20*%20lengths%20instead%20of%20fixing%20only%20the%20wrong%20ones.%20This%20idea%20is%20taken%0A%20%20%20*%20from%20'ar'%20written%20by%20Haruhiko%20Okumura.)%0A%20%20%20*%2F%0A%20%20for%20(bits%20%3D%20max_length%3B%20bits%20!%3D%3D%200%3B%20bits--)%20%7B%0A%20%20%20%20n%20%3D%20s.bl_count%5Bbits%5D%3B%0A%20%20%20%20while%20(n%20!%3D%3D%200)%20%7B%0A%20%20%20%20%20%20m%20%3D%20s.heap%5B--h%5D%3B%0A%20%20%20%20%20%20if%20(m%20%3E%20max_code)%20%7B%20continue%3B%20%7D%0A%20%20%20%20%20%20if%20(tree%5Bm%20*%202%20%2B%201%5D%2F*.Len*%2F%20!%3D%3D%20bits)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20Trace((stderr%2C%22code%20%25d%20bits%20%25d-%3E%25d%5Cn%22%2C%20m%2C%20tree%5Bm%5D.Len%2C%20bits))%3B%0A%20%20%20%20%20%20%20%20s.opt_len%20%2B%3D%20(bits%20-%20tree%5Bm%20*%202%20%2B%201%5D%2F*.Len*%2F)%20*%20tree%5Bm%20*%202%5D%2F*.Freq*%2F%3B%0A%20%20%20%20%20%20%20%20tree%5Bm%20*%202%20%2B%201%5D%2F*.Len*%2F%20%3D%20bits%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20n--%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Generate%20the%20codes%20for%20a%20given%20tree%20and%20bit%20counts%20(which%20need%20not%20be%0A%20*%20optimal).%0A%20*%20IN%20assertion%3A%20the%20array%20bl_count%20contains%20the%20bit%20length%20statistics%20for%0A%20*%20the%20given%20tree%20and%20the%20field%20len%20is%20set%20for%20all%20tree%20elements.%0A%20*%20OUT%20assertion%3A%20the%20field%20code%20is%20set%20for%20all%20tree%20elements%20of%20non%0A%20*%20%20%20%20%20zero%20code%20length.%0A%20*%2F%0Afunction%20gen_codes(tree%2C%20max_code%2C%20bl_count)%0A%2F%2F%20%20%20%20ct_data%20*tree%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20the%20tree%20to%20decorate%20*%2F%0A%2F%2F%20%20%20%20int%20max_code%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20largest%20code%20with%20non%20zero%20frequency%20*%2F%0A%2F%2F%20%20%20%20ushf%20*bl_count%3B%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20number%20of%20codes%20at%20each%20bit%20length%20*%2F%0A%7B%0A%20%20var%20next_code%20%3D%20new%20Array(MAX_BITS%20%2B%201)%3B%20%2F*%20next%20code%20value%20for%20each%20bit%20length%20*%2F%0A%20%20var%20code%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20running%20code%20value%20*%2F%0A%20%20var%20bits%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20bit%20index%20*%2F%0A%20%20var%20n%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20code%20index%20*%2F%0A%0A%20%20%2F*%20The%20distribution%20counts%20are%20first%20used%20to%20generate%20the%20code%20values%0A%20%20%20*%20without%20bit%20reversal.%0A%20%20%20*%2F%0A%20%20for%20(bits%20%3D%201%3B%20bits%20%3C%3D%20MAX_BITS%3B%20bits%2B%2B)%20%7B%0A%20%20%20%20next_code%5Bbits%5D%20%3D%20code%20%3D%20(code%20%2B%20bl_count%5Bbits%20-%201%5D)%20%3C%3C%201%3B%0A%20%20%7D%0A%20%20%2F*%20Check%20that%20the%20bit%20counts%20in%20bl_count%20are%20consistent.%20The%20last%20code%0A%20%20%20*%20must%20be%20all%20ones.%0A%20%20%20*%2F%0A%20%20%2F%2FAssert%20(code%20%2B%20bl_count%5BMAX_BITS%5D-1%20%3D%3D%20(1%3C%3CMAX_BITS)-1%2C%0A%20%20%2F%2F%20%20%20%20%20%20%20%20%22inconsistent%20bit%20counts%22)%3B%0A%20%20%2F%2FTracev((stderr%2C%22%5Cngen_codes%3A%20max_code%20%25d%20%22%2C%20max_code))%3B%0A%0A%20%20for%20(n%20%3D%200%3B%20%20n%20%3C%3D%20max_code%3B%20n%2B%2B)%20%7B%0A%20%20%20%20var%20len%20%3D%20tree%5Bn%20*%202%20%2B%201%5D%2F*.Len*%2F%3B%0A%20%20%20%20if%20(len%20%3D%3D%3D%200)%20%7B%20continue%3B%20%7D%0A%20%20%20%20%2F*%20Now%20reverse%20the%20bits%20*%2F%0A%20%20%20%20tree%5Bn%20*%202%5D%2F*.Code*%2F%20%3D%20bi_reverse(next_code%5Blen%5D%2B%2B%2C%20len)%3B%0A%0A%20%20%20%20%2F%2FTracecv(tree%20!%3D%20static_ltree%2C%20(stderr%2C%22%5Cnn%20%253d%20%25c%20l%20%252d%20c%20%254x%20(%25x)%20%22%2C%0A%20%20%20%20%2F%2F%20%20%20%20%20n%2C%20(isgraph(n)%20%3F%20n%20%3A%20'%20')%2C%20len%2C%20tree%5Bn%5D.Code%2C%20next_code%5Blen%5D-1))%3B%0A%20%20%7D%0A%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Initialize%20the%20various%20'constant'%20tables.%0A%20*%2F%0Afunction%20tr_static_init()%20%7B%0A%20%20var%20n%3B%20%20%20%20%20%20%20%20%2F*%20iterates%20over%20tree%20elements%20*%2F%0A%20%20var%20bits%3B%20%20%20%20%20%2F*%20bit%20counter%20*%2F%0A%20%20var%20length%3B%20%20%20%2F*%20length%20value%20*%2F%0A%20%20var%20code%3B%20%20%20%20%20%2F*%20code%20value%20*%2F%0A%20%20var%20dist%3B%20%20%20%20%20%2F*%20distance%20index%20*%2F%0A%20%20var%20bl_count%20%3D%20new%20Array(MAX_BITS%20%2B%201)%3B%0A%20%20%2F*%20number%20of%20codes%20at%20each%20bit%20length%20for%20an%20optimal%20tree%20*%2F%0A%0A%20%20%2F%2F%20do%20check%20in%20_tr_init()%0A%20%20%2F%2Fif%20(static_init_done)%20return%3B%0A%0A%20%20%2F*%20For%20some%20embedded%20targets%2C%20global%20variables%20are%20not%20initialized%3A%20*%2F%0A%2F*%23ifdef%20NO_INIT_GLOBAL_POINTERS%0A%20%20static_l_desc.static_tree%20%3D%20static_ltree%3B%0A%20%20static_l_desc.extra_bits%20%3D%20extra_lbits%3B%0A%20%20static_d_desc.static_tree%20%3D%20static_dtree%3B%0A%20%20static_d_desc.extra_bits%20%3D%20extra_dbits%3B%0A%20%20static_bl_desc.extra_bits%20%3D%20extra_blbits%3B%0A%23endif*%2F%0A%0A%20%20%2F*%20Initialize%20the%20mapping%20length%20(0..255)%20-%3E%20length%20code%20(0..28)%20*%2F%0A%20%20length%20%3D%200%3B%0A%20%20for%20(code%20%3D%200%3B%20code%20%3C%20LENGTH_CODES%20-%201%3B%20code%2B%2B)%20%7B%0A%20%20%20%20base_length%5Bcode%5D%20%3D%20length%3B%0A%20%20%20%20for%20(n%20%3D%200%3B%20n%20%3C%20(1%20%3C%3C%20extra_lbits%5Bcode%5D)%3B%20n%2B%2B)%20%7B%0A%20%20%20%20%20%20_length_code%5Blength%2B%2B%5D%20%3D%20code%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20%2F%2FAssert%20(length%20%3D%3D%20256%2C%20%22tr_static_init%3A%20length%20!%3D%20256%22)%3B%0A%20%20%2F*%20Note%20that%20the%20length%20255%20(match%20length%20258)%20can%20be%20represented%0A%20%20%20*%20in%20two%20different%20ways%3A%20code%20284%20%2B%205%20bits%20or%20code%20285%2C%20so%20we%0A%20%20%20*%20overwrite%20length_code%5B255%5D%20to%20use%20the%20best%20encoding%3A%0A%20%20%20*%2F%0A%20%20_length_code%5Blength%20-%201%5D%20%3D%20code%3B%0A%0A%20%20%2F*%20Initialize%20the%20mapping%20dist%20(0..32K)%20-%3E%20dist%20code%20(0..29)%20*%2F%0A%20%20dist%20%3D%200%3B%0A%20%20for%20(code%20%3D%200%3B%20code%20%3C%2016%3B%20code%2B%2B)%20%7B%0A%20%20%20%20base_dist%5Bcode%5D%20%3D%20dist%3B%0A%20%20%20%20for%20(n%20%3D%200%3B%20n%20%3C%20(1%20%3C%3C%20extra_dbits%5Bcode%5D)%3B%20n%2B%2B)%20%7B%0A%20%20%20%20%20%20_dist_code%5Bdist%2B%2B%5D%20%3D%20code%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20%2F%2FAssert%20(dist%20%3D%3D%20256%2C%20%22tr_static_init%3A%20dist%20!%3D%20256%22)%3B%0A%20%20dist%20%3E%3E%3D%207%3B%20%2F*%20from%20now%20on%2C%20all%20distances%20are%20divided%20by%20128%20*%2F%0A%20%20for%20(%3B%20code%20%3C%20D_CODES%3B%20code%2B%2B)%20%7B%0A%20%20%20%20base_dist%5Bcode%5D%20%3D%20dist%20%3C%3C%207%3B%0A%20%20%20%20for%20(n%20%3D%200%3B%20n%20%3C%20(1%20%3C%3C%20(extra_dbits%5Bcode%5D%20-%207))%3B%20n%2B%2B)%20%7B%0A%20%20%20%20%20%20_dist_code%5B256%20%2B%20dist%2B%2B%5D%20%3D%20code%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20%2F%2FAssert%20(dist%20%3D%3D%20256%2C%20%22tr_static_init%3A%20256%2Bdist%20!%3D%20512%22)%3B%0A%0A%20%20%2F*%20Construct%20the%20codes%20of%20the%20static%20literal%20tree%20*%2F%0A%20%20for%20(bits%20%3D%200%3B%20bits%20%3C%3D%20MAX_BITS%3B%20bits%2B%2B)%20%7B%0A%20%20%20%20bl_count%5Bbits%5D%20%3D%200%3B%0A%20%20%7D%0A%0A%20%20n%20%3D%200%3B%0A%20%20while%20(n%20%3C%3D%20143)%20%7B%0A%20%20%20%20static_ltree%5Bn%20*%202%20%2B%201%5D%2F*.Len*%2F%20%3D%208%3B%0A%20%20%20%20n%2B%2B%3B%0A%20%20%20%20bl_count%5B8%5D%2B%2B%3B%0A%20%20%7D%0A%20%20while%20(n%20%3C%3D%20255)%20%7B%0A%20%20%20%20static_ltree%5Bn%20*%202%20%2B%201%5D%2F*.Len*%2F%20%3D%209%3B%0A%20%20%20%20n%2B%2B%3B%0A%20%20%20%20bl_count%5B9%5D%2B%2B%3B%0A%20%20%7D%0A%20%20while%20(n%20%3C%3D%20279)%20%7B%0A%20%20%20%20static_ltree%5Bn%20*%202%20%2B%201%5D%2F*.Len*%2F%20%3D%207%3B%0A%20%20%20%20n%2B%2B%3B%0A%20%20%20%20bl_count%5B7%5D%2B%2B%3B%0A%20%20%7D%0A%20%20while%20(n%20%3C%3D%20287)%20%7B%0A%20%20%20%20static_ltree%5Bn%20*%202%20%2B%201%5D%2F*.Len*%2F%20%3D%208%3B%0A%20%20%20%20n%2B%2B%3B%0A%20%20%20%20bl_count%5B8%5D%2B%2B%3B%0A%20%20%7D%0A%20%20%2F*%20Codes%20286%20and%20287%20do%20not%20exist%2C%20but%20we%20must%20include%20them%20in%20the%0A%20%20%20*%20tree%20construction%20to%20get%20a%20canonical%20Huffman%20tree%20(longest%20code%0A%20%20%20*%20all%20ones)%0A%20%20%20*%2F%0A%20%20gen_codes(static_ltree%2C%20L_CODES%20%2B%201%2C%20bl_count)%3B%0A%0A%20%20%2F*%20The%20static%20distance%20tree%20is%20trivial%3A%20*%2F%0A%20%20for%20(n%20%3D%200%3B%20n%20%3C%20D_CODES%3B%20n%2B%2B)%20%7B%0A%20%20%20%20static_dtree%5Bn%20*%202%20%2B%201%5D%2F*.Len*%2F%20%3D%205%3B%0A%20%20%20%20static_dtree%5Bn%20*%202%5D%2F*.Code*%2F%20%3D%20bi_reverse(n%2C%205)%3B%0A%20%20%7D%0A%0A%20%20%2F%2F%20Now%20data%20ready%20and%20we%20can%20init%20static%20trees%0A%20%20static_l_desc%20%3D%20new%20StaticTreeDesc(static_ltree%2C%20extra_lbits%2C%20LITERALS%20%2B%201%2C%20L_CODES%2C%20MAX_BITS)%3B%0A%20%20static_d_desc%20%3D%20new%20StaticTreeDesc(static_dtree%2C%20extra_dbits%2C%200%2C%20%20%20%20%20%20%20%20%20%20D_CODES%2C%20MAX_BITS)%3B%0A%20%20static_bl_desc%20%3D%20new%20StaticTreeDesc(new%20Array(0)%2C%20extra_blbits%2C%200%2C%20%20%20%20%20%20%20%20%20BL_CODES%2C%20MAX_BL_BITS)%3B%0A%0A%20%20%2F%2Fstatic_init_done%20%3D%20true%3B%0A%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Initialize%20a%20new%20block.%0A%20*%2F%0Afunction%20init_block(s)%20%7B%0A%20%20var%20n%3B%20%2F*%20iterates%20over%20tree%20elements%20*%2F%0A%0A%20%20%2F*%20Initialize%20the%20trees.%20*%2F%0A%20%20for%20(n%20%3D%200%3B%20n%20%3C%20L_CODES%3B%20%20n%2B%2B)%20%7B%20s.dyn_ltree%5Bn%20*%202%5D%2F*.Freq*%2F%20%3D%200%3B%20%7D%0A%20%20for%20(n%20%3D%200%3B%20n%20%3C%20D_CODES%3B%20%20n%2B%2B)%20%7B%20s.dyn_dtree%5Bn%20*%202%5D%2F*.Freq*%2F%20%3D%200%3B%20%7D%0A%20%20for%20(n%20%3D%200%3B%20n%20%3C%20BL_CODES%3B%20n%2B%2B)%20%7B%20s.bl_tree%5Bn%20*%202%5D%2F*.Freq*%2F%20%3D%200%3B%20%7D%0A%0A%20%20s.dyn_ltree%5BEND_BLOCK%20*%202%5D%2F*.Freq*%2F%20%3D%201%3B%0A%20%20s.opt_len%20%3D%20s.static_len%20%3D%200%3B%0A%20%20s.last_lit%20%3D%20s.matches%20%3D%200%3B%0A%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Flush%20the%20bit%20buffer%20and%20align%20the%20output%20on%20a%20byte%20boundary%0A%20*%2F%0Afunction%20bi_windup(s)%0A%7B%0A%20%20if%20(s.bi_valid%20%3E%208)%20%7B%0A%20%20%20%20put_short(s%2C%20s.bi_buf)%3B%0A%20%20%7D%20else%20if%20(s.bi_valid%20%3E%200)%20%7B%0A%20%20%20%20%2F%2Fput_byte(s%2C%20(Byte)s-%3Ebi_buf)%3B%0A%20%20%20%20s.pending_buf%5Bs.pending%2B%2B%5D%20%3D%20s.bi_buf%3B%0A%20%20%7D%0A%20%20s.bi_buf%20%3D%200%3B%0A%20%20s.bi_valid%20%3D%200%3B%0A%7D%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Copy%20a%20stored%20block%2C%20storing%20first%20the%20length%20and%20its%0A%20*%20one's%20complement%20if%20requested.%0A%20*%2F%0Afunction%20copy_block(s%2C%20buf%2C%20len%2C%20header)%0A%2F%2FDeflateState%20*s%3B%0A%2F%2Fcharf%20%20%20%20*buf%3B%20%20%20%20%2F*%20the%20input%20data%20*%2F%0A%2F%2Funsigned%20len%3B%20%20%20%20%20%2F*%20its%20length%20*%2F%0A%2F%2Fint%20%20%20%20%20%20header%3B%20%20%2F*%20true%20if%20block%20header%20must%20be%20written%20*%2F%0A%7B%0A%20%20bi_windup(s)%3B%20%20%20%20%20%20%20%20%2F*%20align%20on%20byte%20boundary%20*%2F%0A%0A%20%20if%20(header)%20%7B%0A%20%20%20%20put_short(s%2C%20len)%3B%0A%20%20%20%20put_short(s%2C%20~len)%3B%0A%20%20%7D%0A%2F%2F%20%20while%20(len--)%20%7B%0A%2F%2F%20%20%20%20put_byte(s%2C%20*buf%2B%2B)%3B%0A%2F%2F%20%20%7D%0A%20%20utils.arraySet(s.pending_buf%2C%20s.window%2C%20buf%2C%20len%2C%20s.pending)%3B%0A%20%20s.pending%20%2B%3D%20len%3B%0A%7D%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Compares%20to%20subtrees%2C%20using%20the%20tree%20depth%20as%20tie%20breaker%20when%0A%20*%20the%20subtrees%20have%20equal%20frequency.%20This%20minimizes%20the%20worst%20case%20length.%0A%20*%2F%0Afunction%20smaller(tree%2C%20n%2C%20m%2C%20depth)%20%7B%0A%20%20var%20_n2%20%3D%20n%20*%202%3B%0A%20%20var%20_m2%20%3D%20m%20*%202%3B%0A%20%20return%20(tree%5B_n2%5D%2F*.Freq*%2F%20%3C%20tree%5B_m2%5D%2F*.Freq*%2F%20%7C%7C%0A%20%20%20%20%20%20%20%20%20(tree%5B_n2%5D%2F*.Freq*%2F%20%3D%3D%3D%20tree%5B_m2%5D%2F*.Freq*%2F%20%26%26%20depth%5Bn%5D%20%3C%3D%20depth%5Bm%5D))%3B%0A%7D%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Restore%20the%20heap%20property%20by%20moving%20down%20the%20tree%20starting%20at%20node%20k%2C%0A%20*%20exchanging%20a%20node%20with%20the%20smallest%20of%20its%20two%20sons%20if%20necessary%2C%20stopping%0A%20*%20when%20the%20heap%20property%20is%20re-established%20(each%20father%20smaller%20than%20its%0A%20*%20two%20sons).%0A%20*%2F%0Afunction%20pqdownheap(s%2C%20tree%2C%20k)%0A%2F%2F%20%20%20%20deflate_state%20*s%3B%0A%2F%2F%20%20%20%20ct_data%20*tree%3B%20%20%2F*%20the%20tree%20to%20restore%20*%2F%0A%2F%2F%20%20%20%20int%20k%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20node%20to%20move%20down%20*%2F%0A%7B%0A%20%20var%20v%20%3D%20s.heap%5Bk%5D%3B%0A%20%20var%20j%20%3D%20k%20%3C%3C%201%3B%20%20%2F*%20left%20son%20of%20k%20*%2F%0A%20%20while%20(j%20%3C%3D%20s.heap_len)%20%7B%0A%20%20%20%20%2F*%20Set%20j%20to%20the%20smallest%20of%20the%20two%20sons%3A%20*%2F%0A%20%20%20%20if%20(j%20%3C%20s.heap_len%20%26%26%0A%20%20%20%20%20%20smaller(tree%2C%20s.heap%5Bj%20%2B%201%5D%2C%20s.heap%5Bj%5D%2C%20s.depth))%20%7B%0A%20%20%20%20%20%20j%2B%2B%3B%0A%20%20%20%20%7D%0A%20%20%20%20%2F*%20Exit%20if%20v%20is%20smaller%20than%20both%20sons%20*%2F%0A%20%20%20%20if%20(smaller(tree%2C%20v%2C%20s.heap%5Bj%5D%2C%20s.depth))%20%7B%20break%3B%20%7D%0A%0A%20%20%20%20%2F*%20Exchange%20v%20with%20the%20smallest%20son%20*%2F%0A%20%20%20%20s.heap%5Bk%5D%20%3D%20s.heap%5Bj%5D%3B%0A%20%20%20%20k%20%3D%20j%3B%0A%0A%20%20%20%20%2F*%20And%20continue%20down%20the%20tree%2C%20setting%20j%20to%20the%20left%20son%20of%20k%20*%2F%0A%20%20%20%20j%20%3C%3C%3D%201%3B%0A%20%20%7D%0A%20%20s.heap%5Bk%5D%20%3D%20v%3B%0A%7D%0A%0A%0A%2F%2F%20inlined%20manually%0A%2F%2F%20var%20SMALLEST%20%3D%201%3B%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Send%20the%20block%20data%20compressed%20using%20the%20given%20Huffman%20trees%0A%20*%2F%0Afunction%20compress_block(s%2C%20ltree%2C%20dtree)%0A%2F%2F%20%20%20%20deflate_state%20*s%3B%0A%2F%2F%20%20%20%20const%20ct_data%20*ltree%3B%20%2F*%20literal%20tree%20*%2F%0A%2F%2F%20%20%20%20const%20ct_data%20*dtree%3B%20%2F*%20distance%20tree%20*%2F%0A%7B%0A%20%20var%20dist%3B%20%20%20%20%20%20%20%20%20%20%20%2F*%20distance%20of%20matched%20string%20*%2F%0A%20%20var%20lc%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20match%20length%20or%20unmatched%20char%20(if%20dist%20%3D%3D%200)%20*%2F%0A%20%20var%20lx%20%3D%200%3B%20%20%20%20%20%20%20%20%20%2F*%20running%20index%20in%20l_buf%20*%2F%0A%20%20var%20code%3B%20%20%20%20%20%20%20%20%20%20%20%2F*%20the%20code%20to%20send%20*%2F%0A%20%20var%20extra%3B%20%20%20%20%20%20%20%20%20%20%2F*%20number%20of%20extra%20bits%20to%20send%20*%2F%0A%0A%20%20if%20(s.last_lit%20!%3D%3D%200)%20%7B%0A%20%20%20%20do%20%7B%0A%20%20%20%20%20%20dist%20%3D%20(s.pending_buf%5Bs.d_buf%20%2B%20lx%20*%202%5D%20%3C%3C%208)%20%7C%20(s.pending_buf%5Bs.d_buf%20%2B%20lx%20*%202%20%2B%201%5D)%3B%0A%20%20%20%20%20%20lc%20%3D%20s.pending_buf%5Bs.l_buf%20%2B%20lx%5D%3B%0A%20%20%20%20%20%20lx%2B%2B%3B%0A%0A%20%20%20%20%20%20if%20(dist%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20send_code(s%2C%20lc%2C%20ltree)%3B%20%2F*%20send%20a%20literal%20byte%20*%2F%0A%20%20%20%20%20%20%20%20%2F%2FTracecv(isgraph(lc)%2C%20(stderr%2C%22%20'%25c'%20%22%2C%20lc))%3B%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%2F*%20Here%2C%20lc%20is%20the%20match%20length%20-%20MIN_MATCH%20*%2F%0A%20%20%20%20%20%20%20%20code%20%3D%20_length_code%5Blc%5D%3B%0A%20%20%20%20%20%20%20%20send_code(s%2C%20code%20%2B%20LITERALS%20%2B%201%2C%20ltree)%3B%20%2F*%20send%20the%20length%20code%20*%2F%0A%20%20%20%20%20%20%20%20extra%20%3D%20extra_lbits%5Bcode%5D%3B%0A%20%20%20%20%20%20%20%20if%20(extra%20!%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20%20%20lc%20-%3D%20base_length%5Bcode%5D%3B%0A%20%20%20%20%20%20%20%20%20%20send_bits(s%2C%20lc%2C%20extra)%3B%20%20%20%20%20%20%20%2F*%20send%20the%20extra%20length%20bits%20*%2F%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20dist--%3B%20%2F*%20dist%20is%20now%20the%20match%20distance%20-%201%20*%2F%0A%20%20%20%20%20%20%20%20code%20%3D%20d_code(dist)%3B%0A%20%20%20%20%20%20%20%20%2F%2FAssert%20(code%20%3C%20D_CODES%2C%20%22bad%20d_code%22)%3B%0A%0A%20%20%20%20%20%20%20%20send_code(s%2C%20code%2C%20dtree)%3B%20%20%20%20%20%20%20%2F*%20send%20the%20distance%20code%20*%2F%0A%20%20%20%20%20%20%20%20extra%20%3D%20extra_dbits%5Bcode%5D%3B%0A%20%20%20%20%20%20%20%20if%20(extra%20!%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20%20%20dist%20-%3D%20base_dist%5Bcode%5D%3B%0A%20%20%20%20%20%20%20%20%20%20send_bits(s%2C%20dist%2C%20extra)%3B%20%20%20%2F*%20send%20the%20extra%20distance%20bits%20*%2F%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%20%2F*%20literal%20or%20match%20pair%20%3F%20*%2F%0A%0A%20%20%20%20%20%20%2F*%20Check%20that%20the%20overlay%20between%20pending_buf%20and%20d_buf%2Bl_buf%20is%20ok%3A%20*%2F%0A%20%20%20%20%20%20%2F%2FAssert((uInt)(s-%3Epending)%20%3C%20s-%3Elit_bufsize%20%2B%202*lx%2C%0A%20%20%20%20%20%20%2F%2F%20%20%20%20%20%20%20%22pendingBuf%20overflow%22)%3B%0A%0A%20%20%20%20%7D%20while%20(lx%20%3C%20s.last_lit)%3B%0A%20%20%7D%0A%0A%20%20send_code(s%2C%20END_BLOCK%2C%20ltree)%3B%0A%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Construct%20one%20Huffman%20tree%20and%20assigns%20the%20code%20bit%20strings%20and%20lengths.%0A%20*%20Update%20the%20total%20bit%20length%20for%20the%20current%20block.%0A%20*%20IN%20assertion%3A%20the%20field%20freq%20is%20set%20for%20all%20tree%20elements.%0A%20*%20OUT%20assertions%3A%20the%20fields%20len%20and%20code%20are%20set%20to%20the%20optimal%20bit%20length%0A%20*%20%20%20%20%20and%20corresponding%20code.%20The%20length%20opt_len%20is%20updated%3B%20static_len%20is%0A%20*%20%20%20%20%20also%20updated%20if%20stree%20is%20not%20null.%20The%20field%20max_code%20is%20set.%0A%20*%2F%0Afunction%20build_tree(s%2C%20desc)%0A%2F%2F%20%20%20%20deflate_state%20*s%3B%0A%2F%2F%20%20%20%20tree_desc%20*desc%3B%20%2F*%20the%20tree%20descriptor%20*%2F%0A%7B%0A%20%20var%20tree%20%20%20%20%20%3D%20desc.dyn_tree%3B%0A%20%20var%20stree%20%20%20%20%3D%20desc.stat_desc.static_tree%3B%0A%20%20var%20has_stree%20%3D%20desc.stat_desc.has_stree%3B%0A%20%20var%20elems%20%20%20%20%3D%20desc.stat_desc.elems%3B%0A%20%20var%20n%2C%20m%3B%20%20%20%20%20%20%20%20%20%20%2F*%20iterate%20over%20heap%20elements%20*%2F%0A%20%20var%20max_code%20%3D%20-1%3B%20%2F*%20largest%20code%20with%20non%20zero%20frequency%20*%2F%0A%20%20var%20node%3B%20%20%20%20%20%20%20%20%20%20%2F*%20new%20node%20being%20created%20*%2F%0A%0A%20%20%2F*%20Construct%20the%20initial%20heap%2C%20with%20least%20frequent%20element%20in%0A%20%20%20*%20heap%5BSMALLEST%5D.%20The%20sons%20of%20heap%5Bn%5D%20are%20heap%5B2*n%5D%20and%20heap%5B2*n%2B1%5D.%0A%20%20%20*%20heap%5B0%5D%20is%20not%20used.%0A%20%20%20*%2F%0A%20%20s.heap_len%20%3D%200%3B%0A%20%20s.heap_max%20%3D%20HEAP_SIZE%3B%0A%0A%20%20for%20(n%20%3D%200%3B%20n%20%3C%20elems%3B%20n%2B%2B)%20%7B%0A%20%20%20%20if%20(tree%5Bn%20*%202%5D%2F*.Freq*%2F%20!%3D%3D%200)%20%7B%0A%20%20%20%20%20%20s.heap%5B%2B%2Bs.heap_len%5D%20%3D%20max_code%20%3D%20n%3B%0A%20%20%20%20%20%20s.depth%5Bn%5D%20%3D%200%3B%0A%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20tree%5Bn%20*%202%20%2B%201%5D%2F*.Len*%2F%20%3D%200%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20%2F*%20The%20pkzip%20format%20requires%20that%20at%20least%20one%20distance%20code%20exists%2C%0A%20%20%20*%20and%20that%20at%20least%20one%20bit%20should%20be%20sent%20even%20if%20there%20is%20only%20one%0A%20%20%20*%20possible%20code.%20So%20to%20avoid%20special%20checks%20later%20on%20we%20force%20at%20least%0A%20%20%20*%20two%20codes%20of%20non%20zero%20frequency.%0A%20%20%20*%2F%0A%20%20while%20(s.heap_len%20%3C%202)%20%7B%0A%20%20%20%20node%20%3D%20s.heap%5B%2B%2Bs.heap_len%5D%20%3D%20(max_code%20%3C%202%20%3F%20%2B%2Bmax_code%20%3A%200)%3B%0A%20%20%20%20tree%5Bnode%20*%202%5D%2F*.Freq*%2F%20%3D%201%3B%0A%20%20%20%20s.depth%5Bnode%5D%20%3D%200%3B%0A%20%20%20%20s.opt_len--%3B%0A%0A%20%20%20%20if%20(has_stree)%20%7B%0A%20%20%20%20%20%20s.static_len%20-%3D%20stree%5Bnode%20*%202%20%2B%201%5D%2F*.Len*%2F%3B%0A%20%20%20%20%7D%0A%20%20%20%20%2F*%20node%20is%200%20or%201%20so%20it%20does%20not%20have%20extra%20bits%20*%2F%0A%20%20%7D%0A%20%20desc.max_code%20%3D%20max_code%3B%0A%0A%20%20%2F*%20The%20elements%20heap%5Bheap_len%2F2%2B1%20..%20heap_len%5D%20are%20leaves%20of%20the%20tree%2C%0A%20%20%20*%20establish%20sub-heaps%20of%20increasing%20lengths%3A%0A%20%20%20*%2F%0A%20%20for%20(n%20%3D%20(s.heap_len%20%3E%3E%201%2F*int%20%2F2*%2F)%3B%20n%20%3E%3D%201%3B%20n--)%20%7B%20pqdownheap(s%2C%20tree%2C%20n)%3B%20%7D%0A%0A%20%20%2F*%20Construct%20the%20Huffman%20tree%20by%20repeatedly%20combining%20the%20least%20two%0A%20%20%20*%20frequent%20nodes.%0A%20%20%20*%2F%0A%20%20node%20%3D%20elems%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20next%20internal%20node%20of%20the%20tree%20*%2F%0A%20%20do%20%7B%0A%20%20%20%20%2F%2Fpqremove(s%2C%20tree%2C%20n)%3B%20%20%2F*%20n%20%3D%20node%20of%20least%20frequency%20*%2F%0A%20%20%20%20%2F***%20pqremove%20***%2F%0A%20%20%20%20n%20%3D%20s.heap%5B1%2F*SMALLEST*%2F%5D%3B%0A%20%20%20%20s.heap%5B1%2F*SMALLEST*%2F%5D%20%3D%20s.heap%5Bs.heap_len--%5D%3B%0A%20%20%20%20pqdownheap(s%2C%20tree%2C%201%2F*SMALLEST*%2F)%3B%0A%20%20%20%20%2F***%2F%0A%0A%20%20%20%20m%20%3D%20s.heap%5B1%2F*SMALLEST*%2F%5D%3B%20%2F*%20m%20%3D%20node%20of%20next%20least%20frequency%20*%2F%0A%0A%20%20%20%20s.heap%5B--s.heap_max%5D%20%3D%20n%3B%20%2F*%20keep%20the%20nodes%20sorted%20by%20frequency%20*%2F%0A%20%20%20%20s.heap%5B--s.heap_max%5D%20%3D%20m%3B%0A%0A%20%20%20%20%2F*%20Create%20a%20new%20node%20father%20of%20n%20and%20m%20*%2F%0A%20%20%20%20tree%5Bnode%20*%202%5D%2F*.Freq*%2F%20%3D%20tree%5Bn%20*%202%5D%2F*.Freq*%2F%20%2B%20tree%5Bm%20*%202%5D%2F*.Freq*%2F%3B%0A%20%20%20%20s.depth%5Bnode%5D%20%3D%20(s.depth%5Bn%5D%20%3E%3D%20s.depth%5Bm%5D%20%3F%20s.depth%5Bn%5D%20%3A%20s.depth%5Bm%5D)%20%2B%201%3B%0A%20%20%20%20tree%5Bn%20*%202%20%2B%201%5D%2F*.Dad*%2F%20%3D%20tree%5Bm%20*%202%20%2B%201%5D%2F*.Dad*%2F%20%3D%20node%3B%0A%0A%20%20%20%20%2F*%20and%20insert%20the%20new%20node%20in%20the%20heap%20*%2F%0A%20%20%20%20s.heap%5B1%2F*SMALLEST*%2F%5D%20%3D%20node%2B%2B%3B%0A%20%20%20%20pqdownheap(s%2C%20tree%2C%201%2F*SMALLEST*%2F)%3B%0A%0A%20%20%7D%20while%20(s.heap_len%20%3E%3D%202)%3B%0A%0A%20%20s.heap%5B--s.heap_max%5D%20%3D%20s.heap%5B1%2F*SMALLEST*%2F%5D%3B%0A%0A%20%20%2F*%20At%20this%20point%2C%20the%20fields%20freq%20and%20dad%20are%20set.%20We%20can%20now%0A%20%20%20*%20generate%20the%20bit%20lengths.%0A%20%20%20*%2F%0A%20%20gen_bitlen(s%2C%20desc)%3B%0A%0A%20%20%2F*%20The%20field%20len%20is%20now%20set%2C%20we%20can%20generate%20the%20bit%20codes%20*%2F%0A%20%20gen_codes(tree%2C%20max_code%2C%20s.bl_count)%3B%0A%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Scan%20a%20literal%20or%20distance%20tree%20to%20determine%20the%20frequencies%20of%20the%20codes%0A%20*%20in%20the%20bit%20length%20tree.%0A%20*%2F%0Afunction%20scan_tree(s%2C%20tree%2C%20max_code)%0A%2F%2F%20%20%20%20deflate_state%20*s%3B%0A%2F%2F%20%20%20%20ct_data%20*tree%3B%20%20%20%2F*%20the%20tree%20to%20be%20scanned%20*%2F%0A%2F%2F%20%20%20%20int%20max_code%3B%20%20%20%20%2F*%20and%20its%20largest%20code%20of%20non%20zero%20frequency%20*%2F%0A%7B%0A%20%20var%20n%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20iterates%20over%20all%20tree%20elements%20*%2F%0A%20%20var%20prevlen%20%3D%20-1%3B%20%20%20%20%20%20%20%20%20%20%2F*%20last%20emitted%20length%20*%2F%0A%20%20var%20curlen%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20length%20of%20current%20code%20*%2F%0A%0A%20%20var%20nextlen%20%3D%20tree%5B0%20*%202%20%2B%201%5D%2F*.Len*%2F%3B%20%2F*%20length%20of%20next%20code%20*%2F%0A%0A%20%20var%20count%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20repeat%20count%20of%20the%20current%20code%20*%2F%0A%20%20var%20max_count%20%3D%207%3B%20%20%20%20%20%20%20%20%20%2F*%20max%20repeat%20count%20*%2F%0A%20%20var%20min_count%20%3D%204%3B%20%20%20%20%20%20%20%20%20%2F*%20min%20repeat%20count%20*%2F%0A%0A%20%20if%20(nextlen%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20max_count%20%3D%20138%3B%0A%20%20%20%20min_count%20%3D%203%3B%0A%20%20%7D%0A%20%20tree%5B(max_code%20%2B%201)%20*%202%20%2B%201%5D%2F*.Len*%2F%20%3D%200xffff%3B%20%2F*%20guard%20*%2F%0A%0A%20%20for%20(n%20%3D%200%3B%20n%20%3C%3D%20max_code%3B%20n%2B%2B)%20%7B%0A%20%20%20%20curlen%20%3D%20nextlen%3B%0A%20%20%20%20nextlen%20%3D%20tree%5B(n%20%2B%201)%20*%202%20%2B%201%5D%2F*.Len*%2F%3B%0A%0A%20%20%20%20if%20(%2B%2Bcount%20%3C%20max_count%20%26%26%20curlen%20%3D%3D%3D%20nextlen)%20%7B%0A%20%20%20%20%20%20continue%3B%0A%0A%20%20%20%20%7D%20else%20if%20(count%20%3C%20min_count)%20%7B%0A%20%20%20%20%20%20s.bl_tree%5Bcurlen%20*%202%5D%2F*.Freq*%2F%20%2B%3D%20count%3B%0A%0A%20%20%20%20%7D%20else%20if%20(curlen%20!%3D%3D%200)%20%7B%0A%0A%20%20%20%20%20%20if%20(curlen%20!%3D%3D%20prevlen)%20%7B%20s.bl_tree%5Bcurlen%20*%202%5D%2F*.Freq*%2F%2B%2B%3B%20%7D%0A%20%20%20%20%20%20s.bl_tree%5BREP_3_6%20*%202%5D%2F*.Freq*%2F%2B%2B%3B%0A%0A%20%20%20%20%7D%20else%20if%20(count%20%3C%3D%2010)%20%7B%0A%20%20%20%20%20%20s.bl_tree%5BREPZ_3_10%20*%202%5D%2F*.Freq*%2F%2B%2B%3B%0A%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20s.bl_tree%5BREPZ_11_138%20*%202%5D%2F*.Freq*%2F%2B%2B%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20count%20%3D%200%3B%0A%20%20%20%20prevlen%20%3D%20curlen%3B%0A%0A%20%20%20%20if%20(nextlen%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20max_count%20%3D%20138%3B%0A%20%20%20%20%20%20min_count%20%3D%203%3B%0A%0A%20%20%20%20%7D%20else%20if%20(curlen%20%3D%3D%3D%20nextlen)%20%7B%0A%20%20%20%20%20%20max_count%20%3D%206%3B%0A%20%20%20%20%20%20min_count%20%3D%203%3B%0A%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20max_count%20%3D%207%3B%0A%20%20%20%20%20%20min_count%20%3D%204%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Send%20a%20literal%20or%20distance%20tree%20in%20compressed%20form%2C%20using%20the%20codes%20in%0A%20*%20bl_tree.%0A%20*%2F%0Afunction%20send_tree(s%2C%20tree%2C%20max_code)%0A%2F%2F%20%20%20%20deflate_state%20*s%3B%0A%2F%2F%20%20%20%20ct_data%20*tree%3B%20%2F*%20the%20tree%20to%20be%20scanned%20*%2F%0A%2F%2F%20%20%20%20int%20max_code%3B%20%20%20%20%20%20%20%2F*%20and%20its%20largest%20code%20of%20non%20zero%20frequency%20*%2F%0A%7B%0A%20%20var%20n%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20iterates%20over%20all%20tree%20elements%20*%2F%0A%20%20var%20prevlen%20%3D%20-1%3B%20%20%20%20%20%20%20%20%20%20%2F*%20last%20emitted%20length%20*%2F%0A%20%20var%20curlen%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20length%20of%20current%20code%20*%2F%0A%0A%20%20var%20nextlen%20%3D%20tree%5B0%20*%202%20%2B%201%5D%2F*.Len*%2F%3B%20%2F*%20length%20of%20next%20code%20*%2F%0A%0A%20%20var%20count%20%3D%200%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20repeat%20count%20of%20the%20current%20code%20*%2F%0A%20%20var%20max_count%20%3D%207%3B%20%20%20%20%20%20%20%20%20%2F*%20max%20repeat%20count%20*%2F%0A%20%20var%20min_count%20%3D%204%3B%20%20%20%20%20%20%20%20%20%2F*%20min%20repeat%20count%20*%2F%0A%0A%20%20%2F*%20tree%5Bmax_code%2B1%5D.Len%20%3D%20-1%3B%20*%2F%20%20%2F*%20guard%20already%20set%20*%2F%0A%20%20if%20(nextlen%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20max_count%20%3D%20138%3B%0A%20%20%20%20min_count%20%3D%203%3B%0A%20%20%7D%0A%0A%20%20for%20(n%20%3D%200%3B%20n%20%3C%3D%20max_code%3B%20n%2B%2B)%20%7B%0A%20%20%20%20curlen%20%3D%20nextlen%3B%0A%20%20%20%20nextlen%20%3D%20tree%5B(n%20%2B%201)%20*%202%20%2B%201%5D%2F*.Len*%2F%3B%0A%0A%20%20%20%20if%20(%2B%2Bcount%20%3C%20max_count%20%26%26%20curlen%20%3D%3D%3D%20nextlen)%20%7B%0A%20%20%20%20%20%20continue%3B%0A%0A%20%20%20%20%7D%20else%20if%20(count%20%3C%20min_count)%20%7B%0A%20%20%20%20%20%20do%20%7B%20send_code(s%2C%20curlen%2C%20s.bl_tree)%3B%20%7D%20while%20(--count%20!%3D%3D%200)%3B%0A%0A%20%20%20%20%7D%20else%20if%20(curlen%20!%3D%3D%200)%20%7B%0A%20%20%20%20%20%20if%20(curlen%20!%3D%3D%20prevlen)%20%7B%0A%20%20%20%20%20%20%20%20send_code(s%2C%20curlen%2C%20s.bl_tree)%3B%0A%20%20%20%20%20%20%20%20count--%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%2F%2FAssert(count%20%3E%3D%203%20%26%26%20count%20%3C%3D%206%2C%20%22%203_6%3F%22)%3B%0A%20%20%20%20%20%20send_code(s%2C%20REP_3_6%2C%20s.bl_tree)%3B%0A%20%20%20%20%20%20send_bits(s%2C%20count%20-%203%2C%202)%3B%0A%0A%20%20%20%20%7D%20else%20if%20(count%20%3C%3D%2010)%20%7B%0A%20%20%20%20%20%20send_code(s%2C%20REPZ_3_10%2C%20s.bl_tree)%3B%0A%20%20%20%20%20%20send_bits(s%2C%20count%20-%203%2C%203)%3B%0A%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20send_code(s%2C%20REPZ_11_138%2C%20s.bl_tree)%3B%0A%20%20%20%20%20%20send_bits(s%2C%20count%20-%2011%2C%207)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20count%20%3D%200%3B%0A%20%20%20%20prevlen%20%3D%20curlen%3B%0A%20%20%20%20if%20(nextlen%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%20%20max_count%20%3D%20138%3B%0A%20%20%20%20%20%20min_count%20%3D%203%3B%0A%0A%20%20%20%20%7D%20else%20if%20(curlen%20%3D%3D%3D%20nextlen)%20%7B%0A%20%20%20%20%20%20max_count%20%3D%206%3B%0A%20%20%20%20%20%20min_count%20%3D%203%3B%0A%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20max_count%20%3D%207%3B%0A%20%20%20%20%20%20min_count%20%3D%204%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Construct%20the%20Huffman%20tree%20for%20the%20bit%20lengths%20and%20return%20the%20index%20in%0A%20*%20bl_order%20of%20the%20last%20bit%20length%20code%20to%20send.%0A%20*%2F%0Afunction%20build_bl_tree(s)%20%7B%0A%20%20var%20max_blindex%3B%20%20%2F*%20index%20of%20last%20bit%20length%20code%20of%20non%20zero%20freq%20*%2F%0A%0A%20%20%2F*%20Determine%20the%20bit%20length%20frequencies%20for%20literal%20and%20distance%20trees%20*%2F%0A%20%20scan_tree(s%2C%20s.dyn_ltree%2C%20s.l_desc.max_code)%3B%0A%20%20scan_tree(s%2C%20s.dyn_dtree%2C%20s.d_desc.max_code)%3B%0A%0A%20%20%2F*%20Build%20the%20bit%20length%20tree%3A%20*%2F%0A%20%20build_tree(s%2C%20s.bl_desc)%3B%0A%20%20%2F*%20opt_len%20now%20includes%20the%20length%20of%20the%20tree%20representations%2C%20except%0A%20%20%20*%20the%20lengths%20of%20the%20bit%20lengths%20codes%20and%20the%205%2B5%2B4%20bits%20for%20the%20counts.%0A%20%20%20*%2F%0A%0A%20%20%2F*%20Determine%20the%20number%20of%20bit%20length%20codes%20to%20send.%20The%20pkzip%20format%0A%20%20%20*%20requires%20that%20at%20least%204%20bit%20length%20codes%20be%20sent.%20(appnote.txt%20says%0A%20%20%20*%203%20but%20the%20actual%20value%20used%20is%204.)%0A%20%20%20*%2F%0A%20%20for%20(max_blindex%20%3D%20BL_CODES%20-%201%3B%20max_blindex%20%3E%3D%203%3B%20max_blindex--)%20%7B%0A%20%20%20%20if%20(s.bl_tree%5Bbl_order%5Bmax_blindex%5D%20*%202%20%2B%201%5D%2F*.Len*%2F%20!%3D%3D%200)%20%7B%0A%20%20%20%20%20%20break%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20%2F*%20Update%20opt_len%20to%20include%20the%20bit%20length%20tree%20and%20counts%20*%2F%0A%20%20s.opt_len%20%2B%3D%203%20*%20(max_blindex%20%2B%201)%20%2B%205%20%2B%205%20%2B%204%3B%0A%20%20%2F%2FTracev((stderr%2C%20%22%5Cndyn%20trees%3A%20dyn%20%25ld%2C%20stat%20%25ld%22%2C%0A%20%20%2F%2F%20%20%20%20%20%20%20%20s-%3Eopt_len%2C%20s-%3Estatic_len))%3B%0A%0A%20%20return%20max_blindex%3B%0A%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Send%20the%20header%20for%20a%20block%20using%20dynamic%20Huffman%20trees%3A%20the%20counts%2C%20the%0A%20*%20lengths%20of%20the%20bit%20length%20codes%2C%20the%20literal%20tree%20and%20the%20distance%20tree.%0A%20*%20IN%20assertion%3A%20lcodes%20%3E%3D%20257%2C%20dcodes%20%3E%3D%201%2C%20blcodes%20%3E%3D%204.%0A%20*%2F%0Afunction%20send_all_trees(s%2C%20lcodes%2C%20dcodes%2C%20blcodes)%0A%2F%2F%20%20%20%20deflate_state%20*s%3B%0A%2F%2F%20%20%20%20int%20lcodes%2C%20dcodes%2C%20blcodes%3B%20%2F*%20number%20of%20codes%20for%20each%20tree%20*%2F%0A%7B%0A%20%20var%20rank%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20index%20in%20bl_order%20*%2F%0A%0A%20%20%2F%2FAssert%20(lcodes%20%3E%3D%20257%20%26%26%20dcodes%20%3E%3D%201%20%26%26%20blcodes%20%3E%3D%204%2C%20%22not%20enough%20codes%22)%3B%0A%20%20%2F%2FAssert%20(lcodes%20%3C%3D%20L_CODES%20%26%26%20dcodes%20%3C%3D%20D_CODES%20%26%26%20blcodes%20%3C%3D%20BL_CODES%2C%0A%20%20%2F%2F%20%20%20%20%20%20%20%20%22too%20many%20codes%22)%3B%0A%20%20%2F%2FTracev((stderr%2C%20%22%5Cnbl%20counts%3A%20%22))%3B%0A%20%20send_bits(s%2C%20lcodes%20-%20257%2C%205)%3B%20%2F*%20not%20%2B255%20as%20stated%20in%20appnote.txt%20*%2F%0A%20%20send_bits(s%2C%20dcodes%20-%201%2C%20%20%205)%3B%0A%20%20send_bits(s%2C%20blcodes%20-%204%2C%20%204)%3B%20%2F*%20not%20-3%20as%20stated%20in%20appnote.txt%20*%2F%0A%20%20for%20(rank%20%3D%200%3B%20rank%20%3C%20blcodes%3B%20rank%2B%2B)%20%7B%0A%20%20%20%20%2F%2FTracev((stderr%2C%20%22%5Cnbl%20code%20%252d%20%22%2C%20bl_order%5Brank%5D))%3B%0A%20%20%20%20send_bits(s%2C%20s.bl_tree%5Bbl_order%5Brank%5D%20*%202%20%2B%201%5D%2F*.Len*%2F%2C%203)%3B%0A%20%20%7D%0A%20%20%2F%2FTracev((stderr%2C%20%22%5Cnbl%20tree%3A%20sent%20%25ld%22%2C%20s-%3Ebits_sent))%3B%0A%0A%20%20send_tree(s%2C%20s.dyn_ltree%2C%20lcodes%20-%201)%3B%20%2F*%20literal%20tree%20*%2F%0A%20%20%2F%2FTracev((stderr%2C%20%22%5Cnlit%20tree%3A%20sent%20%25ld%22%2C%20s-%3Ebits_sent))%3B%0A%0A%20%20send_tree(s%2C%20s.dyn_dtree%2C%20dcodes%20-%201)%3B%20%2F*%20distance%20tree%20*%2F%0A%20%20%2F%2FTracev((stderr%2C%20%22%5Cndist%20tree%3A%20sent%20%25ld%22%2C%20s-%3Ebits_sent))%3B%0A%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Check%20if%20the%20data%20type%20is%20TEXT%20or%20BINARY%2C%20using%20the%20following%20algorithm%3A%0A%20*%20-%20TEXT%20if%20the%20two%20conditions%20below%20are%20satisfied%3A%0A%20*%20%20%20%20a)%20There%20are%20no%20non-portable%20control%20characters%20belonging%20to%20the%0A%20*%20%20%20%20%20%20%20%22black%20list%22%20(0..6%2C%2014..25%2C%2028..31).%0A%20*%20%20%20%20b)%20There%20is%20at%20least%20one%20printable%20character%20belonging%20to%20the%0A%20*%20%20%20%20%20%20%20%22white%20list%22%20(9%20%7BTAB%7D%2C%2010%20%7BLF%7D%2C%2013%20%7BCR%7D%2C%2032..255).%0A%20*%20-%20BINARY%20otherwise.%0A%20*%20-%20The%20following%20partially-portable%20control%20characters%20form%20a%0A%20*%20%20%20%22gray%20list%22%20that%20is%20ignored%20in%20this%20detection%20algorithm%3A%0A%20*%20%20%20(7%20%7BBEL%7D%2C%208%20%7BBS%7D%2C%2011%20%7BVT%7D%2C%2012%20%7BFF%7D%2C%2026%20%7BSUB%7D%2C%2027%20%7BESC%7D).%0A%20*%20IN%20assertion%3A%20the%20fields%20Freq%20of%20dyn_ltree%20are%20set.%0A%20*%2F%0Afunction%20detect_data_type(s)%20%7B%0A%20%20%2F*%20black_mask%20is%20the%20bit%20mask%20of%20black-listed%20bytes%0A%20%20%20*%20set%20bits%200..6%2C%2014..25%2C%20and%2028..31%0A%20%20%20*%200xf3ffc07f%20%3D%20binary%2011110011111111111100000001111111%0A%20%20%20*%2F%0A%20%20var%20black_mask%20%3D%200xf3ffc07f%3B%0A%20%20var%20n%3B%0A%0A%20%20%2F*%20Check%20for%20non-textual%20(%22black-listed%22)%20bytes.%20*%2F%0A%20%20for%20(n%20%3D%200%3B%20n%20%3C%3D%2031%3B%20n%2B%2B%2C%20black_mask%20%3E%3E%3E%3D%201)%20%7B%0A%20%20%20%20if%20((black_mask%20%26%201)%20%26%26%20(s.dyn_ltree%5Bn%20*%202%5D%2F*.Freq*%2F%20!%3D%3D%200))%20%7B%0A%20%20%20%20%20%20return%20Z_BINARY%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20%2F*%20Check%20for%20textual%20(%22white-listed%22)%20bytes.%20*%2F%0A%20%20if%20(s.dyn_ltree%5B9%20*%202%5D%2F*.Freq*%2F%20!%3D%3D%200%20%7C%7C%20s.dyn_ltree%5B10%20*%202%5D%2F*.Freq*%2F%20!%3D%3D%200%20%7C%7C%0A%20%20%20%20%20%20s.dyn_ltree%5B13%20*%202%5D%2F*.Freq*%2F%20!%3D%3D%200)%20%7B%0A%20%20%20%20return%20Z_TEXT%3B%0A%20%20%7D%0A%20%20for%20(n%20%3D%2032%3B%20n%20%3C%20LITERALS%3B%20n%2B%2B)%20%7B%0A%20%20%20%20if%20(s.dyn_ltree%5Bn%20*%202%5D%2F*.Freq*%2F%20!%3D%3D%200)%20%7B%0A%20%20%20%20%20%20return%20Z_TEXT%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%0A%20%20%2F*%20There%20are%20no%20%22black-listed%22%20or%20%22white-listed%22%20bytes%3A%0A%20%20%20*%20this%20stream%20either%20is%20empty%20or%20has%20tolerated%20(%22gray-listed%22)%20bytes%20only.%0A%20%20%20*%2F%0A%20%20return%20Z_BINARY%3B%0A%7D%0A%0A%0Avar%20static_init_done%20%3D%20false%3B%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Initialize%20the%20tree%20data%20structures%20for%20a%20new%20zlib%20stream.%0A%20*%2F%0Afunction%20_tr_init(s)%0A%7B%0A%0A%20%20if%20(!static_init_done)%20%7B%0A%20%20%20%20tr_static_init()%3B%0A%20%20%20%20static_init_done%20%3D%20true%3B%0A%20%20%7D%0A%0A%20%20s.l_desc%20%20%3D%20new%20TreeDesc(s.dyn_ltree%2C%20static_l_desc)%3B%0A%20%20s.d_desc%20%20%3D%20new%20TreeDesc(s.dyn_dtree%2C%20static_d_desc)%3B%0A%20%20s.bl_desc%20%3D%20new%20TreeDesc(s.bl_tree%2C%20static_bl_desc)%3B%0A%0A%20%20s.bi_buf%20%3D%200%3B%0A%20%20s.bi_valid%20%3D%200%3B%0A%0A%20%20%2F*%20Initialize%20the%20first%20block%20of%20the%20first%20file%3A%20*%2F%0A%20%20init_block(s)%3B%0A%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Send%20a%20stored%20block%0A%20*%2F%0Afunction%20_tr_stored_block(s%2C%20buf%2C%20stored_len%2C%20last)%0A%2F%2FDeflateState%20*s%3B%0A%2F%2Fcharf%20*buf%3B%20%20%20%20%20%20%20%2F*%20input%20block%20*%2F%0A%2F%2Fulg%20stored_len%3B%20%20%20%2F*%20length%20of%20input%20block%20*%2F%0A%2F%2Fint%20last%3B%20%20%20%20%20%20%20%20%20%2F*%20one%20if%20this%20is%20the%20last%20block%20for%20a%20file%20*%2F%0A%7B%0A%20%20send_bits(s%2C%20(STORED_BLOCK%20%3C%3C%201)%20%2B%20(last%20%3F%201%20%3A%200)%2C%203)%3B%20%20%20%20%2F*%20send%20block%20type%20*%2F%0A%20%20copy_block(s%2C%20buf%2C%20stored_len%2C%20true)%3B%20%2F*%20with%20header%20*%2F%0A%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Send%20one%20empty%20static%20block%20to%20give%20enough%20lookahead%20for%20inflate.%0A%20*%20This%20takes%2010%20bits%2C%20of%20which%207%20may%20remain%20in%20the%20bit%20buffer.%0A%20*%2F%0Afunction%20_tr_align(s)%20%7B%0A%20%20send_bits(s%2C%20STATIC_TREES%20%3C%3C%201%2C%203)%3B%0A%20%20send_code(s%2C%20END_BLOCK%2C%20static_ltree)%3B%0A%20%20bi_flush(s)%3B%0A%7D%0A%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Determine%20the%20best%20encoding%20for%20the%20current%20block%3A%20dynamic%20trees%2C%20static%0A%20*%20trees%20or%20store%2C%20and%20output%20the%20encoded%20block%20to%20the%20zip%20file.%0A%20*%2F%0Afunction%20_tr_flush_block(s%2C%20buf%2C%20stored_len%2C%20last)%0A%2F%2FDeflateState%20*s%3B%0A%2F%2Fcharf%20*buf%3B%20%20%20%20%20%20%20%2F*%20input%20block%2C%20or%20NULL%20if%20too%20old%20*%2F%0A%2F%2Fulg%20stored_len%3B%20%20%20%2F*%20length%20of%20input%20block%20*%2F%0A%2F%2Fint%20last%3B%20%20%20%20%20%20%20%20%20%2F*%20one%20if%20this%20is%20the%20last%20block%20for%20a%20file%20*%2F%0A%7B%0A%20%20var%20opt_lenb%2C%20static_lenb%3B%20%20%2F*%20opt_len%20and%20static_len%20in%20bytes%20*%2F%0A%20%20var%20max_blindex%20%3D%200%3B%20%20%20%20%20%20%20%20%2F*%20index%20of%20last%20bit%20length%20code%20of%20non%20zero%20freq%20*%2F%0A%0A%20%20%2F*%20Build%20the%20Huffman%20trees%20unless%20a%20stored%20block%20is%20forced%20*%2F%0A%20%20if%20(s.level%20%3E%200)%20%7B%0A%0A%20%20%20%20%2F*%20Check%20if%20the%20file%20is%20binary%20or%20text%20*%2F%0A%20%20%20%20if%20(s.strm.data_type%20%3D%3D%3D%20Z_UNKNOWN)%20%7B%0A%20%20%20%20%20%20s.strm.data_type%20%3D%20detect_data_type(s)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%2F*%20Construct%20the%20literal%20and%20distance%20trees%20*%2F%0A%20%20%20%20build_tree(s%2C%20s.l_desc)%3B%0A%20%20%20%20%2F%2F%20Tracev((stderr%2C%20%22%5Cnlit%20data%3A%20dyn%20%25ld%2C%20stat%20%25ld%22%2C%20s-%3Eopt_len%2C%0A%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20s-%3Estatic_len))%3B%0A%0A%20%20%20%20build_tree(s%2C%20s.d_desc)%3B%0A%20%20%20%20%2F%2F%20Tracev((stderr%2C%20%22%5Cndist%20data%3A%20dyn%20%25ld%2C%20stat%20%25ld%22%2C%20s-%3Eopt_len%2C%0A%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20s-%3Estatic_len))%3B%0A%20%20%20%20%2F*%20At%20this%20point%2C%20opt_len%20and%20static_len%20are%20the%20total%20bit%20lengths%20of%0A%20%20%20%20%20*%20the%20compressed%20block%20data%2C%20excluding%20the%20tree%20representations.%0A%20%20%20%20%20*%2F%0A%0A%20%20%20%20%2F*%20Build%20the%20bit%20length%20tree%20for%20the%20above%20two%20trees%2C%20and%20get%20the%20index%0A%20%20%20%20%20*%20in%20bl_order%20of%20the%20last%20bit%20length%20code%20to%20send.%0A%20%20%20%20%20*%2F%0A%20%20%20%20max_blindex%20%3D%20build_bl_tree(s)%3B%0A%0A%20%20%20%20%2F*%20Determine%20the%20best%20encoding.%20Compute%20the%20block%20lengths%20in%20bytes.%20*%2F%0A%20%20%20%20opt_lenb%20%3D%20(s.opt_len%20%2B%203%20%2B%207)%20%3E%3E%3E%203%3B%0A%20%20%20%20static_lenb%20%3D%20(s.static_len%20%2B%203%20%2B%207)%20%3E%3E%3E%203%3B%0A%0A%20%20%20%20%2F%2F%20Tracev((stderr%2C%20%22%5Cnopt%20%25lu(%25lu)%20stat%20%25lu(%25lu)%20stored%20%25lu%20lit%20%25u%20%22%2C%0A%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20opt_lenb%2C%20s-%3Eopt_len%2C%20static_lenb%2C%20s-%3Estatic_len%2C%20stored_len%2C%0A%20%20%20%20%2F%2F%20%20%20%20%20%20%20%20s-%3Elast_lit))%3B%0A%0A%20%20%20%20if%20(static_lenb%20%3C%3D%20opt_lenb)%20%7B%20opt_lenb%20%3D%20static_lenb%3B%20%7D%0A%0A%20%20%7D%20else%20%7B%0A%20%20%20%20%2F%2F%20Assert(buf%20!%3D%20(char*)0%2C%20%22lost%20buf%22)%3B%0A%20%20%20%20opt_lenb%20%3D%20static_lenb%20%3D%20stored_len%20%2B%205%3B%20%2F*%20force%20a%20stored%20block%20*%2F%0A%20%20%7D%0A%0A%20%20if%20((stored_len%20%2B%204%20%3C%3D%20opt_lenb)%20%26%26%20(buf%20!%3D%3D%20-1))%20%7B%0A%20%20%20%20%2F*%204%3A%20two%20words%20for%20the%20lengths%20*%2F%0A%0A%20%20%20%20%2F*%20The%20test%20buf%20!%3D%20NULL%20is%20only%20necessary%20if%20LIT_BUFSIZE%20%3E%20WSIZE.%0A%20%20%20%20%20*%20Otherwise%20we%20can't%20have%20processed%20more%20than%20WSIZE%20input%20bytes%20since%0A%20%20%20%20%20*%20the%20last%20block%20flush%2C%20because%20compression%20would%20have%20been%0A%20%20%20%20%20*%20successful.%20If%20LIT_BUFSIZE%20%3C%3D%20WSIZE%2C%20it%20is%20never%20too%20late%20to%0A%20%20%20%20%20*%20transform%20a%20block%20into%20a%20stored%20block.%0A%20%20%20%20%20*%2F%0A%20%20%20%20_tr_stored_block(s%2C%20buf%2C%20stored_len%2C%20last)%3B%0A%0A%20%20%7D%20else%20if%20(s.strategy%20%3D%3D%3D%20Z_FIXED%20%7C%7C%20static_lenb%20%3D%3D%3D%20opt_lenb)%20%7B%0A%0A%20%20%20%20send_bits(s%2C%20(STATIC_TREES%20%3C%3C%201)%20%2B%20(last%20%3F%201%20%3A%200)%2C%203)%3B%0A%20%20%20%20compress_block(s%2C%20static_ltree%2C%20static_dtree)%3B%0A%0A%20%20%7D%20else%20%7B%0A%20%20%20%20send_bits(s%2C%20(DYN_TREES%20%3C%3C%201)%20%2B%20(last%20%3F%201%20%3A%200)%2C%203)%3B%0A%20%20%20%20send_all_trees(s%2C%20s.l_desc.max_code%20%2B%201%2C%20s.d_desc.max_code%20%2B%201%2C%20max_blindex%20%2B%201)%3B%0A%20%20%20%20compress_block(s%2C%20s.dyn_ltree%2C%20s.dyn_dtree)%3B%0A%20%20%7D%0A%20%20%2F%2F%20Assert%20(s-%3Ecompressed_len%20%3D%3D%20s-%3Ebits_sent%2C%20%22bad%20compressed%20size%22)%3B%0A%20%20%2F*%20The%20above%20check%20is%20made%20mod%202%5E32%2C%20for%20files%20larger%20than%20512%20MB%0A%20%20%20*%20and%20uLong%20implemented%20on%2032%20bits.%0A%20%20%20*%2F%0A%20%20init_block(s)%3B%0A%0A%20%20if%20(last)%20%7B%0A%20%20%20%20bi_windup(s)%3B%0A%20%20%7D%0A%20%20%2F%2F%20Tracev((stderr%2C%22%5Cncomprlen%20%25lu(%25lu)%20%22%2C%20s-%3Ecompressed_len%3E%3E3%2C%0A%20%20%2F%2F%20%20%20%20%20%20%20s-%3Ecompressed_len-7*last))%3B%0A%7D%0A%0A%2F*%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%0A%20*%20Save%20the%20match%20info%20and%20tally%20the%20frequency%20counts.%20Return%20true%20if%0A%20*%20the%20current%20block%20must%20be%20flushed.%0A%20*%2F%0Afunction%20_tr_tally(s%2C%20dist%2C%20lc)%0A%2F%2F%20%20%20%20deflate_state%20*s%3B%0A%2F%2F%20%20%20%20unsigned%20dist%3B%20%20%2F*%20distance%20of%20matched%20string%20*%2F%0A%2F%2F%20%20%20%20unsigned%20lc%3B%20%20%20%20%2F*%20match%20length-MIN_MATCH%20or%20unmatched%20char%20(if%20dist%3D%3D0)%20*%2F%0A%7B%0A%20%20%2F%2Fvar%20out_length%2C%20in_length%2C%20dcode%3B%0A%0A%20%20s.pending_buf%5Bs.d_buf%20%2B%20s.last_lit%20*%202%5D%20%20%20%20%20%3D%20(dist%20%3E%3E%3E%208)%20%26%200xff%3B%0A%20%20s.pending_buf%5Bs.d_buf%20%2B%20s.last_lit%20*%202%20%2B%201%5D%20%3D%20dist%20%26%200xff%3B%0A%0A%20%20s.pending_buf%5Bs.l_buf%20%2B%20s.last_lit%5D%20%3D%20lc%20%26%200xff%3B%0A%20%20s.last_lit%2B%2B%3B%0A%0A%20%20if%20(dist%20%3D%3D%3D%200)%20%7B%0A%20%20%20%20%2F*%20lc%20is%20the%20unmatched%20char%20*%2F%0A%20%20%20%20s.dyn_ltree%5Blc%20*%202%5D%2F*.Freq*%2F%2B%2B%3B%0A%20%20%7D%20else%20%7B%0A%20%20%20%20s.matches%2B%2B%3B%0A%20%20%20%20%2F*%20Here%2C%20lc%20is%20the%20match%20length%20-%20MIN_MATCH%20*%2F%0A%20%20%20%20dist--%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%2F*%20dist%20%3D%20match%20distance%20-%201%20*%2F%0A%20%20%20%20%2F%2FAssert((ush)dist%20%3C%20(ush)MAX_DIST(s)%20%26%26%0A%20%20%20%20%2F%2F%20%20%20%20%20%20%20(ush)lc%20%3C%3D%20(ush)(MAX_MATCH-MIN_MATCH)%20%26%26%0A%20%20%20%20%2F%2F%20%20%20%20%20%20%20(ush)d_code(dist)%20%3C%20(ush)D_CODES%2C%20%20%22_tr_tally%3A%20bad%20match%22)%3B%0A%0A%20%20%20%20s.dyn_ltree%5B(_length_code%5Blc%5D%20%2B%20LITERALS%20%2B%201)%20*%202%5D%2F*.Freq*%2F%2B%2B%3B%0A%20%20%20%20s.dyn_dtree%5Bd_code(dist)%20*%202%5D%2F*.Freq*%2F%2B%2B%3B%0A%20%20%7D%0A%0A%2F%2F%20(!)%20This%20block%20is%20disabled%20in%20zlib%20defailts%2C%0A%2F%2F%20don't%20enable%20it%20for%20binary%20compatibility%0A%0A%2F%2F%23ifdef%20TRUNCATE_BLOCK%0A%2F%2F%20%20%2F*%20Try%20to%20guess%20if%20it%20is%20profitable%20to%20stop%20the%20current%20block%20here%20*%2F%0A%2F%2F%20%20if%20((s.last_lit%20%26%200x1fff)%20%3D%3D%3D%200%20%26%26%20s.level%20%3E%202)%20%7B%0A%2F%2F%20%20%20%20%2F*%20Compute%20an%20upper%20bound%20for%20the%20compressed%20length%20*%2F%0A%2F%2F%20%20%20%20out_length%20%3D%20s.last_lit*8%3B%0A%2F%2F%20%20%20%20in_length%20%3D%20s.strstart%20-%20s.block_start%3B%0A%2F%2F%0A%2F%2F%20%20%20%20for%20(dcode%20%3D%200%3B%20dcode%20%3C%20D_CODES%3B%20dcode%2B%2B)%20%7B%0A%2F%2F%20%20%20%20%20%20out_length%20%2B%3D%20s.dyn_dtree%5Bdcode*2%5D%2F*.Freq*%2F%20*%20(5%20%2B%20extra_dbits%5Bdcode%5D)%3B%0A%2F%2F%20%20%20%20%7D%0A%2F%2F%20%20%20%20out_length%20%3E%3E%3E%3D%203%3B%0A%2F%2F%20%20%20%20%2F%2FTracev((stderr%2C%22%5Cnlast_lit%20%25u%2C%20in%20%25ld%2C%20out%20~%25ld(%25ld%25%25)%20%22%2C%0A%2F%2F%20%20%20%20%2F%2F%20%20%20%20%20%20%20s-%3Elast_lit%2C%20in_length%2C%20out_length%2C%0A%2F%2F%20%20%20%20%2F%2F%20%20%20%20%20%20%20100L%20-%20out_length*100L%2Fin_length))%3B%0A%2F%2F%20%20%20%20if%20(s.matches%20%3C%20(s.last_lit%3E%3E1)%2F*int%20%2F2*%2F%20%26%26%20out_length%20%3C%20(in_length%3E%3E1)%2F*int%20%2F2*%2F)%20%7B%0A%2F%2F%20%20%20%20%20%20return%20true%3B%0A%2F%2F%20%20%20%20%7D%0A%2F%2F%20%20%7D%0A%2F%2F%23endif%0A%0A%20%20return%20(s.last_lit%20%3D%3D%3D%20s.lit_bufsize%20-%201)%3B%0A%20%20%2F*%20We%20avoid%20equality%20with%20lit_bufsize%20because%20of%20wraparound%20at%2064K%0A%20%20%20*%20on%2016%20bit%20machines%20and%20because%20stored%20blocks%20are%20restricted%20to%0A%20%20%20*%2064K-1%20bytes.%0A%20%20%20*%2F%0A%7D%0A%0Aexports._tr_init%20%20%3D%20_tr_init%3B%0Aexports._tr_stored_block%20%3D%20_tr_stored_block%3B%0Aexports._tr_flush_block%20%20%3D%20_tr_flush_block%3B%0Aexports._tr_tally%20%3D%20_tr_tally%3B%0Aexports._tr_align%20%3D%20_tr_align%3B%0A%0A%7D%2C%7B%22..%2Futils%2Fcommon%22%3A28%7D%5D%2C40%3A%5Bfunction(require%2Cmodule%2Cexports)%7B%0A'use%20strict'%3B%0A%0A%0Afunction%20ZStream()%20%7B%0A%20%20%2F*%20next%20input%20byte%20*%2F%0A%20%20this.input%20%3D%20null%3B%20%2F%2F%20JS%20specific%2C%20because%20we%20have%20no%20pointers%0A%20%20this.next_in%20%3D%200%3B%0A%20%20%2F*%20number%20of%20bytes%20available%20at%20input%20*%2F%0A%20%20this.avail_in%20%3D%200%3B%0A%20%20%2F*%20total%20number%20of%20input%20bytes%20read%20so%20far%20*%2F%0A%20%20this.total_in%20%3D%200%3B%0A%20%20%2F*%20next%20output%20byte%20should%20be%20put%20there%20*%2F%0A%20%20this.output%20%3D%20null%3B%20%2F%2F%20JS%20specific%2C%20because%20we%20have%20no%20pointers%0A%20%20this.next_out%20%3D%200%3B%0A%20%20%2F*%20remaining%20free%20space%20at%20output%20*%2F%0A%20%20this.avail_out%20%3D%200%3B%0A%20%20%2F*%20total%20number%20of%20bytes%20output%20so%20far%20*%2F%0A%20%20this.total_out%20%3D%200%3B%0A%20%20%2F*%20last%20error%20message%2C%20NULL%20if%20no%20error%20*%2F%0A%20%20this.msg%20%3D%20''%2F*Z_NULL*%2F%3B%0A%20%20%2F*%20not%20visible%20by%20applications%20*%2F%0A%20%20this.state%20%3D%20null%3B%0A%20%20%2F*%20best%20guess%20about%20the%20data%20type%3A%20binary%20or%20text%20*%2F%0A%20%20this.data_type%20%3D%202%2F*Z_UNKNOWN*%2F%3B%0A%20%20%2F*%20adler32%20value%20of%20the%20uncompressed%20data%20*%2F%0A%20%20this.adler%20%3D%200%3B%0A%7D%0A%0Amodule.exports%20%3D%20ZStream%3B%0A%0A%7D%2C%7B%7D%5D%7D%2C%7B%7D%2C%5B10%5D)(10)%0A%7D)%3B
